{"version":3,"sources":["components/Header.js","components/Card.js","components/data.js","components/ImageSlider.js","components/DropdownMenuHover.js","components/ProblemEditDialog.js","components/ProblemsBrowse.js","components/ProblemInsert.js","components/QuizesBrowse.js","components/QuizInsert.js","components/QuizEditDialog.js","components/QuizShowSelected.js","components/UsersBrowse.js","components/UserInsert.js","components/UserEditDialog.js","components/UserShowSelected.js","components/CoursesBrowse.js","components/CourseInsert.js","components/CourseEditDialog.js","components/CourseShowSelected.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","userId","password","firstName","lastName","address1","address2","city","zip","phone","cell","email","this","loggedInUser","className","method","action","onSubmit","handleSubmit","noValidate","id","style","color","paddingRight","errorMessage","href","for","type","name","tabindex","onChange","userIdChange","value","passwordChange","startedQuiz","textDecoration","cursor","onClick","e","window","location","assign","hostname","port","description","mins_remaining","logoutUser","Component","Card","property","index","image","src","alt","data","ImageSlider","nextProperty","newIndex","setState","properties","prevProperty","direction","bind","rotateImage","setInterval","newDirection","length","disabled","map","key","React","DropdownMenuHover","problemInsert","setErrorMessage","problemsBrowse","quizInsert","quizesBrowse","courseInsert","coursesBrowse","userInsert","alert","userShowProfile","usersBrowse","ProblemEditDialog","visibilityClassName","show","obj","objectForEdit","quizesArray","handleDismiss","class","selectChange","required","objQ","rows","descriptionChange","width","solution","solutionChange","option1Change","option1","option2Change","option2","option3Change","option3","option4Change","option4","answerkeyChange","answerkey","author_id","readonly","float","textAlign","ProblemsBrowse","spinner","problemObjectForEdit","showEditProblemDialog","handleEditProblemDialogDismiss","saveUpdateHandler","console","log","problemsArray","admin","deleteProblemHandler","editProblemHandler","quiz_description","quiz_id","dangerouslySetInnerHTML","__html","showAnswerHandler","copied","Object","new_quiz_id","target","loadProblems","loadQuizes","confirm","showSpinner","reqBody","encodeURIComponent","fetch","headers","body","then","res","json","deletestatus","problemsArrayCopy","filter","setProblems","hideSpinner","replace","updatestatus","JSON","parse","stringify","forEach","divId","document","getElementById","display","ProblemInsert","new_quiz_description","options","selectedIndex","text","new_description","new_solution","new_answerkey","new_option1","new_option2","new_option3","new_option4","problemId","answerKey","push","to","paddingTop","QuizesBrowse","duration_minutes","QuizInsert","courseId","courseName","baseState","durationChange","isNaN","quizesArrayCopy","quizId","setQuizes","coursesArray","loadCourses","new_courseId","new_courseName","marginLeft","QuizEditDialog","instructorId","QuizShowSelected","quizObj","showEditQuizDialog","quizObjForEdit","editQuizHandler","handleEditQuizDialogDismiss","courseNameChange","course_id","params","match","data1","new_course_id","new_course_name","deleteQuizHandler","startQuiz","isQuizStarted","optionChange","checked","startedQuizAnswers","submitQuiz","UsersBrowse","loadUsers","usersArray","first_name","last_name","mobile","UserInsert","firstNameChange","lastNameChange","address1Change","address2Change","cityChange","zipChange","phoneChange","cellChange","emailChange","usersArrayCopy","setUsers","size","UserEditDialog","mobileChange","UserShowSelected","showEditUserDialog","userObj","userObjForEdit","handleEditUserDialogDismiss","editUserHandler","CoursesBrowse","objArray","CourseInsert","nameChange","coursesArrayCopy","setCourses","new_name","CourseEditDialog","courseNameEdited","courseDescriptionEdited","ownerId","CourseShowSelected","courseObj","showEditCourseDialog","handleEditCourseDialogDismiss","editCourseHandler","newCourseObj","deleteCourseHandler","App","localStorage","getItem","handleLoginSubmit","startedQuizOptionChange","startedQuizSubmit","reviseQuizMinsRemaining","arr","optionSelectedValue","setItem","current_timestamp","Date","mm","getMonth","dd","getDate","hh","getHours","mins","getMinutes","ss","getSeconds","getFullYear","start_time","insertstatus","quizInstanceId","removeItem","start_timestamp","startTime","setTime","now","MsRemaining","parseInt","Math","round","event","preventDefault","login","newUserId","newPassword","errMsg","path","render","exact","component","fontSize","Boolean","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83748d23.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Header extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      userId:'',\n      password:'',\n      firstName:'',\n      lastName:'',\n      address1:'',\n      address2:'',\n      city:'',\n      zip:'',\n      phone:'',\n      cell:'',\n      email:''\n    }\n  }\n\n  render(){\n        //console.log(this.props.loggedInUser);\n        return (this.props.loggedInUser===\"\"?(\n              <div className=\"Header\">\n                <form method=\"post\" action=\"login\" onSubmit={this.props.handleSubmit} noValidate>\n                <div className=\"row\">\n                      <div id=\"flexColLeft\">\n                        <span id=\"logo\">Schools.com</span><br/>\n                        <label style={{color:\"red\", paddingRight:\"50px\"}}>{this.props.errorMessage}</label>\n                      </div>\n                      <div id=\"flexColRight\">\n                              <a  id=\"HeaderRightLink\" href='/userInsert'>Register User</a><br/><br/><br/>\n                              <label for=\"userId\">user id</label>\n                              <input type=\"text\" id=\"userName\" name=\"userName\" tabindex=\"1\"\n                                    onChange={this.props.userIdChange} value={this.props.userId}\n                               ></input>\n                               <label for=\"password\">password</label>\n                               <input type=\"password\" id=\"password\" name=\"password\" tabindex=\"2\"\n                                  onChange={this.props.passwordChange} value={this.props.password}\n                               ></input>\n                               <input type=\"submit\" value=\"Login\" tabindex=\"3\"/>\n                      </div>\n                </div>\n                </form>\n              </div>\n        ):\n        (\n          <div className=\"Header\" noValidate>\n          <form method=\"post\">\n              <div className=\"row\">\n                    <div id=\"flexColLeft\">\n                        <span id=\"logo\">Schools.com</span>\n                        {this.props.startedQuiz!==null?\n                                                (\n                                                  <label style={{color:'maroon', textDecoration:'underline', cursor: 'pointer' }}\n                                                  onClick={(e)=>window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/quizShowSelected/\"+this.props.startedQuiz.id)}>\n                                                  <br/>{this.props.startedQuiz.description} started ({this.props.startedQuiz.mins_remaining} mins left) </label>\n                                                 ):null}\n                    </div>\n                    <div id=\"flexColRight\">\n                        <span id=\"loginStatus\">\n                            <a id=\"HeaderRightLink\" href=\"/\" style={{textDecoration:\"underline\"}} onClick={this.props.logoutUser}>Logout</a>\n                            <br/><br/><br/>\n                            <label>Logged in as: </label>\n                            <label id=\"userId\">\n                            {this.props.loggedInUser}\n                            </label>\n                        </span>\n                    </div>\n              </div>\n          </form>\n          </div>\n        ))\n  }\n\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Card = ({property})=>{\n  const {index, image} = property;\n  return (\n    <div id={`card-${index}`} className=\"card\">\n      <img src={image} alt=\"Hello img\"/>\n    </div>\n  )\n}\nexport default Card;\n","const data = {\n  \"properties\": [\n    {\n      index:0,\n      image:\"https://drive.google.com/thumbnail?id=1tjwS8G9MyI5z7-foeQFi6E7DRJkd5aon&sz=w400-h300\"\n    },\n    {\n      index:1,\n     image:\"https://drive.google.com/thumbnail?id=14eOz7AGKAllAAQ3lLfQrZ8qsuy0aOuHr&sz=w400-h300\"\n   },\n   {\n     index:2,\n     image:\"https://drive.google.com/thumbnail?id=1PI6c4yRgZyBol7DaBVqwvErfpJqI4O0C&sz=w400-h300\"\n   },\n   {\n     index:3,\n     image:\"https://drive.google.com/thumbnail?id=1xrUEuIyzczN0R5-ViQsoE0zaRnjjaFNU&sz=w400-h300\"\n   },\n   {\n     index:4,\n     image: 'https://drive.google.com/thumbnail?id=1eHZrcjgxxEaL0HwBUDX9_-dZqQZbldkR&sz=w400-h300'\n   },\n   {\n     index:5,\n     image: 'https://drive.google.com/thumbnail?id=1-3oKDTCTAk29vqHZTJDgccgmFkUNJdL5&sz=w400-h300'\n   },\n    {\n      index:6,\n      image: 'https://drive.google.com/thumbnail?id=112spuYv-XGXmQQi1E3hhut5S1Vzi4h8E&sz=w400-h300'\n    }\n  ]\n};\n\nexport default data;\n","import React from 'react';\nimport Card from './Card';\nimport data from './data';\nimport '../css/ImageSlider.css';\n\nclass ImageSlider extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n          properties:data.properties,\n          property: data.properties[0],\n          direction:1\n        }\n        this.nextProperty=this.nextProperty.bind(this);\n        this.prevProperty=this.prevProperty.bind(this);\n        this.rotateImage=this.rotateImage.bind(this);\n    }\n\n    componentDidMount() {\n      var timer = setInterval(() => {this.rotateImage();}, 3000)\n    }\n\n    rotateImage(){\n      var newDirection=this.state.direction;\n      if(this.state.property.index===data.properties.length-1){\n        newDirection=-1;\n      }\n      else if (this.state.property.index===0) {\n        newDirection=1;\n      }\n\n      const newIndex=this.state.property.index+newDirection;\n\n      this.setState(\n        {\n          direction:newDirection,\n          property:data.properties[newIndex]\n        })\n\n    }\n\n    nextProperty=()=>{\n      const newIndex=this.state.property.index+1;\n      this.setState(\n        {\n          property:this.state.properties[newIndex]\n        }\n      )\n    }\n\n    prevProperty=()=>{\n      const newIndex=this.state.property.index-1;\n      this.setState(\n        {\n          property:this.state.properties[newIndex]\n        }\n      )\n    }\n\n    render(){\n      const {properties, property, direction}=this.state;\n\n      return (\n        <div className=\"App\">\n            <button\n              disabled={this.state.property.index===data.properties.length-1}\n              onClick={()=>this.nextProperty()}>Next\n            </button>\n            <button\n              disabled={this.state.property.index===0}\n              onClick={()=>this.prevProperty()}\n              >Prev\n            </button>\n            <div className=\"page\">\n              <div className={`cards-slider active-slide-${property.index}`}>\n                <div className=\"cards-slider-wrapper\" style={{\n                  'transform': `translateX(-${(property.index*100/properties.length)}%)`\n                }}>\n                  {\n                    properties.map(property=> <Card key={property.index} property={property}/>)\n                  }\n                  {/*<Card key={property.index} property={property}/>*/}\n                </div>\n              </div>\n            </div>\n        </div>\n      )\n    }\n}\n\nexport default ImageSlider;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport '../css/DropdownMenu.css';\n\n\nclass DropdownMenuHover extends React.Component{\n  constructor(props){\n    super(props);\n  }\n\n  problemInsert=()=>{\n    if(this.props.loggedInUser===''){\n      this.props.setErrorMessage('Error: User not Logged In!')\n    }\n    else\n      window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/problemInsert\");\n  }\n\n  problemsBrowse=()=>{\n    window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/problemsBrowse\");\n  }\n\n\n  quizInsert=()=>{\n    if(this.props.loggedInUser===''){\n      this.props.setErrorMessage('Error: User not Logged In!')\n    }\n    else\n      window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/quizInsert\");\n  }\n\n  quizesBrowse=()=>{\n    window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/quizesBrowse\");\n  }\n\n\n  courseInsert=()=>{\n    if(this.props.loggedInUser===''){\n      this.props.setErrorMessage('Error: User not Logged In!')\n    }\n    else\n      window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/courseInsert\");\n  }\n\n  coursesBrowse=()=>{\n    window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/coursesBrowse\");\n  }\n\n  userInsert=()=>{\n    if(this.props.loggedInUser!==''){\n      alert('Error: User already registered and logged In !');\n    }\n    else\n      window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/userInsert\");\n  }\n\n  userShowProfile=()=>{\n    window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\n    \"/userShowSelected/\"+this.props.loggedInUser);\n  }\n\n  usersBrowse=()=>{\n    window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/usersBrowse\");\n  }\n\n  render(){\n        return (\n           <div>\n            <fieldset className=\"fieldSet\">\n              <div className=\"dropdown dropdownProblem\">\n                <button className=\"problemMenuButton menuButton\">Problem</button>\n                <div id=\"problemMenu\" className=\"problem-dropdown-content dropdown-content\">\n                  <a onClick={()=>this.problemInsert()}>Insert</a>\n                  <a onClick={()=>this.problemsBrowse()}>Browse</a>\n                </div>\n              </div>\n\n              <div className=\"dropdown dropdownQuiz\">\n                <button className=\"quizMenuButton  menuButton\">Quiz</button>\n                <div id=\"quizMenu\" className=\"quiz-dropdown-content dropdown-content\">\n                  <a onClick={()=>this.quizInsert()}>Insert</a>\n                  <a onClick={()=>this.quizesBrowse()}>Browse</a>\n                </div>\n              </div>\n\n              <div className=\"dropdown dropdownCourse\">\n                <button className=\"courseMenuButton menuButton\">Course</button>\n                <div id=\"courseMenu\" className=\"course-dropdown-content dropdown-content\">\n                  <a onClick={()=>this.courseInsert()}>Insert</a>\n                  <a onClick={()=>this.coursesBrowse()}>Browse</a>\n                </div>\n              </div>\n\n              <div className=\"dropdown dropdownUser\">\n                <button className=\"userMenuButton menuButton\">User</button>\n                <div id=\"userMenu\" className=\"user-dropdown-content dropdown-content\">\n                  <a onClick={()=>this.userInsert()}>Register</a>\n                  <a onClick={()=>this.usersBrowse()}>Browse</a>\n                  {this.props.loggedInUser!==''?<a onClick={()=>this.userShowProfile()}>Profile</a>:null}\n                </div>\n              </div>\n            </fieldset>\n            </div>\n        )\n  }\n}\n\nexport default DropdownMenuHover;\n","import React from 'react';\n\nclass ProblemEditDialog extends React.Component{\n\n\n  render(){\n    const visibilityClassName=this.props.show\n    ? \"simple-dialog-overlay simple-dialog-display-block\"\n    :\"simple-dialog-overlay simple-dialog-display-none\";\n\n    const obj=this.props.objectForEdit;\n\n    const quizesArray=this.props.quizesArray;\n\n    return (\n      <div className={visibilityClassName}>\n         <div className=\"simple-dialog\" id=\"ProblemEditDialog\">\n             <button id = \"x\" onClick={this.props.handleDismiss}>\n              X\n             </button>\n             <h2>Edit Problem</h2>\n             <hr class=\"rounded\"/>\n                 <div className=\"row\">\n                     <div id=\"flexColLeft\">\n                     Quiz Id:\n                       <select id=\"quizId\" onChange={this.props.selectChange} name=\"quizId\" required=\"true\">\n                       {\n                           quizesArray.map(objQ=>(\n                             <option value={objQ.id}>{objQ.description}</option>\n                             )\n                           )\n                       }\n                       </select> <br/><br/>\n                       Problem Description:<br/>\n                         <textarea id=\"probDescription\" name=\"probDescription\" type=\"text\" rows=\"10\"\n                         value={obj.description}\n                         onChange={this.props.descriptionChange}\n                         style={{width:'90%'}}\n                         required=\"true\">\n                         </textarea><br/><br/>\n                         Answer Description:<br/>\n                         <textarea id=\"ansDescription\" name=\"ansDescription\" type=\"text\" rows=\"10\"\n                         value={obj.solution}\n                         onChange={this.props.solutionChange}\n                         style={{width:'90%'}}\n                         required=\"true\">\n                         </textarea>\n                     </div>\n                     <div id=\"flexColRight\">\n                     <br/><br/><br/>\n                          Option1: <br/>\n                          <input type=\"text\" style={{width:'50%'}}\n                                     onChange={this.props.option1Change}\n                                     id=\"option1\" value={obj.option1}/><br/>\n                          Option2: <br/>\n                          <input type=\"text\" style={{width:'50%'}}\n                                   onChange={this.props.option2Change}\n                                   id=\"option2\" value={obj.option2}/><br/>\n                          Option3: <br/>\n                          <input type=\"text\" style={{width:'50%'}}\n                                   onChange={this.props.option3Change}\n                                   id=\"option3\" value={obj.option3}/><br/>\n                          Option4: <br/>\n                          <input type=\"text\" style={{width:'50%'}}\n                                     onChange={this.props.option4Change}\n                                     id=\"option4\" value={obj.option4}/><br/>\n                          Answer Key: <br/>\n                          <input type=\"text\" id=\"answerKey\"\n                          onChange={this.props.answerkeyChange}\n                          style={{width:'50%'}} value={obj.answerkey}/>\n                          <br/>\n                          <br/>\n                          Author:<br/>\n                          <input id=\"authorName\" name=\"authorName\" type=\"text\" style={{width:'80%'}}\n                          required=\"true\" value={obj.author_id} readonly>\n                          </input> <br/><br/><br/><br/>\n                         <input type=\"button\" id=\"x\" value=\"Save\" style={{width:'80%', float: \"right\"}}\n                         onClick={this.props.handleSubmit}/><br/><br/>\n                         <button id=\"x\" style={{width:'80%', textAlign:'center'}}\n                          onClick={this.props.handleDismiss}>close\n                         </button>\n                     </div>\n                </div>\n         </div>\n         <br/>\n         <br/>\n      </div>\n    )\n  }\n\n}\n\nexport default ProblemEditDialog;\n","import React from 'react';\nimport '../css/Browse.css';\nimport EditProblemDialog from './ProblemEditDialog';\n\nclass ProblemsBrowse extends React.Component{\n\n\n  render(){\n    console.log(this.props.loggedInUser);\n    return (\n      <div>\n          {/*\n            this.state.spinner===true?(<div id=\"spinner\" className=\"container\"><div className=\"loading\"></div></div>):null\n          */}\n          <a class=\"HomeLink\" href=\"/\">back to home</a>\n          <div class=\"h1\">\n            Browse Problems\n          </div>\n          {\n           this.props.problemsArray.map(obj=>(\n            <div id={`par$,${obj.id}`} className=\"probParent\">\n                <hr />\n                {(this.props.loggedInUser===obj.author_id||this.props.admin===\"1\")?\n                (<div>\n                  <input type=\"button\" className=\"EditButton\"\n                  onClick={()=>this.deleteProblemHandler(obj.id)}\n                  id={`delete${obj.id}`} value=\"Delete Problem\"/>\n                <input type=\"button\" className=\"EditButton\"\n                  onClick={()=>this.editProblemHandler(obj)}\n                  id={`e${obj.id}`} value=\"Edit Problem\"/></div>)\n                :null}\n                  <b>Quiz: </b>\n                  <div id={`quizDescription$,${obj.id}`} className=\"Quiz\">{obj.quiz_description}</div>\n                  <input type=\"hidden\" id={`quizId$,'${obj.id}`} value={obj.quiz_id}/>\n                  <br/><b>Author</b> : <label id={`authorId$,${obj.id}`}>{obj.author_id}</label>\n                  <br/> <b>Question: </b>\n                  <div id={`problemDescription$,${obj.id}`}\n                  dangerouslySetInnerHTML={{__html: obj.description}}\n                  className=\"Question\"></div>\n                  <b>Options:</b>\n                  <br/> 1) <label id={`option1$,${obj.id}`}>{obj.option1}</label>\n                  <br/> 2) <label id={`option2$,${obj.id}`}>{obj.option2}</label>\n                  <br/> 3) <label id={`option3$,${obj.id}`}>{obj.option3}</label>\n                  <br/> 4) <label id={`option4$,${obj.id}`}>{obj.option4}</label>\n                  <br/><br/>\n                  <input type=\"button\" className=\"showAnswer\" onClick={()=>this.showAnswerHandler(`d${obj.id}`)} id={`b${obj.id}`} value=\"view solution\">\n                  </input>\n                  <br/>\n                  <div id={`d${obj.id}`} name={`d${obj.id}`} className=\"Answer\"><b>Solution: </b>\n                      <label id={`solution$,${obj.id}`}\n                        dangerouslySetInnerHTML={{__html: obj.solution}}\n                      ></label><br/>\n                      Ans Key: <label id={`answerkey$,${obj.id}`}>{obj.answerkey}</label>\n                  </div>\n              </div>\n              )\n            )\n          }\n          <EditProblemDialog\n                  objectForEdit={this.state.problemObjectForEdit}\n                  show={this.state.showEditProblemDialog}\n                  handleDismiss={this.handleEditProblemDialogDismiss}\n                  handleSubmit={this.saveUpdateHandler}\n                  quizesArray={this.props.quizesArray}\n                  selectChange={this.selectChange}\n                  descriptionChange={this.descriptionChange}\n                  solutionChange={this.solutionChange}\n                  option1Change={this.option1Change}\n                  option2Change={this.option2Change}\n                  option3Change={this.option3Change}\n                  option4Change={this.option4Change}\n                  answerkeyChange={this.answerkeyChange}\n                  />\n     </div>\n    )\n  }\n\n  selectChange(e){\n    const copied = Object.assign({}, this.state.problemObjectForEdit)\n    //console.log(e.target.value);\n    var new_quiz_id=e.target.value;\n    copied.quiz_id=new_quiz_id;\n    this.setState({problemObjectForEdit:copied});\n  }\n\n  descriptionChange(e){\n    const copied = Object.assign({}, this.state.problemObjectForEdit)\n    copied.description=e.target.value;\n    //console.log(e.target.value);\n    this.setState({problemObjectForEdit:copied});\n  }\n\n  solutionChange(e){\n    const copied = Object.assign({}, this.state.problemObjectForEdit)\n    copied.solution=e.target.value;\n    //console.log(e.target.value);\n    this.setState({problemObjectForEdit:copied});\n  }\n\n  answerkeyChange(e){\n    const copied = Object.assign({}, this.state.problemObjectForEdit)\n    copied.answerkey=e.target.value;\n    //console.log(e.target.value);\n    this.setState({problemObjectForEdit:copied});\n  }\n\n  option1Change(e){\n    const copied = Object.assign({}, this.state.problemObjectForEdit)\n    copied.option1=e.target.value;\n    //console.log(e.target.value);\n    this.setState({problemObjectForEdit:copied});\n  }\n\n  option2Change(e){\n    const copied = Object.assign({}, this.state.problemObjectForEdit)\n    copied.option2=e.target.value;\n    //console.log(e.target.value);\n    this.setState({problemObjectForEdit:copied});\n  }\n\n  option3Change(e){\n    const copied = Object.assign({}, this.state.problemObjectForEdit)\n    copied.option3=e.target.value;\n    //console.log(e.target.value);\n    this.setState({problemObjectForEdit:copied});\n  }\n\n  option4Change(e){\n    const copied = Object.assign({}, this.state.problemObjectForEdit)\n    copied.option4=e.target.value;\n    //console.log(e.target.value);\n    this.setState({problemObjectForEdit:copied});\n  }\n\n  componentDidMount(){\n    this.props.loadProblems();\n    this.props.loadQuizes();\n  }\n\n  editProblemHandler(obj){\n    this.setState({showEditProblemDialog:true, problemObjectForEdit:obj});\n  }\n\n  deleteProblemHandler(id){\n    let b=window.confirm('Are you sure you want to delete');\n    if(b===true){\n      this.props.showSpinner();\n        var reqBody=\"id=\"+encodeURIComponent(id);\n        fetch(`/api/deleteProblem`, {\n          headers:{\n            'Accept':'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            if(data.deletestatus===\"ok\"){\n                let problemsArrayCopy=this.props.problemsArray.filter((obj)=>obj.id!==id);\n                this.props.setProblems(problemsArrayCopy);\n                this.props.hideSpinner();\n                alert('problem deleted');\n            }\n        })\n    }//end of if b==true\n  }\n\n  saveUpdateHandler(){\n        this.props.showSpinner();\n      var reqBody=\"id=\"+encodeURIComponent(this.state.problemObjectForEdit.id);\n      reqBody+='&description='+encodeURIComponent(this.state.problemObjectForEdit.description);\n      reqBody+='&option1='+encodeURIComponent(this.state.problemObjectForEdit.option1);\n      reqBody+='&option2='+encodeURIComponent(this.state.problemObjectForEdit.option2);\n      reqBody+='&option3='+encodeURIComponent(this.state.problemObjectForEdit.option3);\n      reqBody+='&option4='+encodeURIComponent(this.state.problemObjectForEdit.option4);\n      reqBody+='&answerkey='+encodeURIComponent(this.state.problemObjectForEdit.answerkey);\n      reqBody+='&quizId='+encodeURIComponent(this.state.problemObjectForEdit.quiz_id);\n\n      var solution=this.state.problemObjectForEdit.solution.replace(/%20/g, '+');\n      reqBody+='&solution='+encodeURIComponent(solution);\n      reqBody+='&authorId='+encodeURIComponent(this.state.problemObjectForEdit.author_id);\n\n      fetch(`/updateProblem`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data=>{\n          if(data.updatestatus===\"ok\"){\n              let problemsArrayCopy=JSON.parse(JSON.stringify(this.props.problemsArray));\n              problemsArrayCopy.forEach((obj)=>{\n                if(obj.id===this.state.problemObjectForEdit.id){\n                   obj.description=this.state.problemObjectForEdit.description;\n                   obj.option1=this.state.problemObjectForEdit.option1;\n                   obj.option2=this.state.problemObjectForEdit.option2;\n                   obj.option3=this.state.problemObjectForEdit.option3;\n                   obj.option4=this.state.problemObjectForEdit.option4;\n                   obj.answerkey=this.state.problemObjectForEdit.answerkey;\n                   obj.quiz_id=this.state.problemObjectForEdit.quiz_id;\n                   obj.author_id=this.state.problemObjectForEdit.author_id;\n                   obj.solution=this.state.problemObjectForEdit.solution;\n                }\n              });\n              this.setState({showEditProblemDialog:false});\n              this.props.setProblems(problemsArrayCopy);\n              this.props.hideSpinner();\n              alert('problem updated');\n          }\n      })\n  }\n\n  showAnswerHandler(divId){\n      if(document.getElementById(divId).style.display!=='block'){\n      // document.getElementById(answerId).style.visibility='hidden';\n        document.getElementById(divId).style.display='block';\n      }\n      else  if(document.getElementById(divId).style.display==='block'){\n        document.getElementById(divId).style.display='none';\n      }\n  }\n\n  handleEditProblemDialogDismiss(){\n    this.setState({showEditProblemDialog:false});\n  }\n\n  constructor(props){\n    super(props);\n    this.state={\n      spinner:false,\n      //problemsArray:[],\n      //quizesArray:[],\n      problemObjectForEdit:{},\n      showEditProblemDialog:false\n    }\n    this.handleEditProblemDialogDismiss=this.handleEditProblemDialogDismiss.bind(this);\n    this.selectChange=this.selectChange.bind(this);\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.solutionChange=this.solutionChange.bind(this);\n    this.option1Change=this.option1Change.bind(this);\n    this.option2Change=this.option2Change.bind(this);\n    this.option3Change=this.option3Change.bind(this);\n    this.option4Change=this.option4Change.bind(this);\n    this.answerkeyChange=this.answerkeyChange.bind(this);\n    this.saveUpdateHandler=this.saveUpdateHandler.bind(this);\n  }\n}\n\nexport default ProblemsBrowse;\n","import React from 'react';\nimport {  Redirect } from 'react-router-dom';\n\nclass ProblemInsert extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      quizesArray:[],\n      quiz_id:'',\n      quiz_description:\"\",\n      description:\"\",\n      solution:\"\",\n      option1:\"\",\n      option2:\"\",\n      option3:\"\",\n      option4:\"\",\n      answerkey:\"\"\n    }\n    //this.baseState=this.state;\n    this.selectChange=this.selectChange.bind(this);\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.solutionChange=this.solutionChange.bind(this);\n    this.option1Change=this.option1Change.bind(this);\n    this.option2Change=this.option2Change.bind(this);\n    this.option3Change=this.option3Change.bind(this);\n    this.option4Change=this.option4Change.bind(this);\n    this.answerkeyChange=this.answerkeyChange.bind(this);\n    this.handleSubmit=this.handleSubmit.bind(this);\n  }\n\n  selectChange(e){\n    //console.log(e.target.options[e.target.selectedIndex].text);\n    var new_quiz_id=e.target.value;\n    var new_quiz_description=e.target.options[e.target.selectedIndex].text;\n    this.setState({quiz_id:new_quiz_id, quiz_description:new_quiz_description});\n  }\n\n  descriptionChange(e){\n    if(this.props.quizesArray.length>0)\n        this.setState({quiz_id:this.props.quizesArray[0].id, quiz_description:this.props.quizesArray[0].description});\n\n    const new_description=e.target.value;\n    //console.log(e.target.value);\n    this.setState({description:new_description});\n  }\n\n  solutionChange(e){\n    const new_solution=e.target.value;\n    //console.log(e.target.value);\n    this.setState({solution:new_solution});\n  }\n\n  answerkeyChange(e){\n    const new_answerkey=e.target.value;\n    //console.log(e.target.value);\n    this.setState({answerkey:new_answerkey});\n  }\n\n  option1Change(e){\n    const new_option1=e.target.value;\n    //console.log(e.target.value);\n    this.setState({option1:new_option1});\n  }\n\n  option2Change(e){\n    const new_option2=e.target.value;\n    //console.log(e.target.value);\n    this.setState({option2:new_option2});\n  }\n\n  option3Change(e){\n    const new_option3=e.target.value;\n    //console.log(e.target.value);\n    this.setState({option3:new_option3});\n  }\n\n  option4Change(e){\n    const new_option4=e.target.value;\n    //console.log(e.target.value);\n    this.setState({option4:new_option4});\n  }\n\n  handleSubmit(e){\n      this.props.showSpinner();\n       var reqBody='probDescription='+encodeURIComponent(this.state.description);\n       reqBody+='&option1='+encodeURIComponent(this.state.option1);\n       reqBody+='&option2='+encodeURIComponent(this.state.option2);\n       reqBody+='&option3='+encodeURIComponent(this.state.option3);\n       reqBody+='&option4='+encodeURIComponent(this.state.option4);\n       reqBody+='&answerKey='+encodeURIComponent(this.state.answerkey);\n       reqBody+='&quizId='+encodeURIComponent(this.state.quiz_id);\n\n       var solution=this.state.solution.replace(/%20/g, '+');\n       reqBody+='&ansDescription='+encodeURIComponent(solution);\n       reqBody+='&authorName='+encodeURIComponent(this.props.loggedInUser);\n\n       fetch(`/api/insertProblemAction`, {\n         headers:{\n           'Accept':'application/json',\n           'Content-type': 'application/x-www-form-urlencoded'\n         },\n         method: 'POST',\n         body: reqBody\n       })\n       .then(res=>res.json())\n       .then(data=>{\n             let problemsArrayCopy=[...this.props.problemsArray];\n             let obj={\n               id: data.problemId,\n               quiz_id: this.state.quiz_id,\n               quiz_description: this.state.quiz_description,\n               description:this.state.description,\n               solution:this.state.solution,\n               option1:this.state.option1,\n               option2:this.state.option2,\n               option3:this.state.option3,\n               option4:this.state.option4,\n               answerKey:this.state.answerkey,\n               author_id:this.props.loggedInUser\n             };\n             problemsArrayCopy.push(obj);\n             this.props.setProblems(problemsArrayCopy);\n             this.setState({\n                           description:\"\",\n                           solution:\"\",\n                           option1:\"\",\n                           option2:\"\",\n                           option3:\"\",\n                           option4:\"\",\n                           answerkey:\"\"}\n                         );\n             this.props.hideSpinner();\n           //if(data.updatestatus==\"ok\")\n               alert('problem inserted');\n               window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/problemsBrowse\");\n       })\n\n  }\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n    return (\n      <div class=\"InsertWindow\">\n          <a class=\"HomeLink\" href=\"/\">back to home</a>\n          <div class=\"h1\">\n            Insert Problem\n          </div>\n          <fieldset>\n              <div className=\"row\">\n                  <div id=\"flexColLeft\">\n                      Quiz Id:\n                      <select id=\"quizId\" onChange={this.selectChange} name=\"quizId\">\n                      {\n                          this.props.quizesArray.map((objQ, index)=>(\n                                     <option value={objQ.id}>{objQ.description}</option>\n                            )\n                          )\n                      }\n                      </select>\n                      <br/><br/>\n                      Problem Description:<br/>\n                      <textarea id=\"probDescription\" name=\"probDescription\" rows=\"10\" type=\"text\" style={{width:'90%'}}\n                      value={this.state.description}\n                      onChange={this.descriptionChange}\n                      >\n                      </textarea><br/>\n                      Answer Description:<br/>\n                      <textarea id=\"ansDescription\" name=\"ansDescription\" rows=\"10\" type=\"text\" style={{width:'90%'}}\n                      value={this.state.solution}\n                      onChange={this.solutionChange}\n                      >\n                      </textarea>\n                  </div>\n                  <div id=\"flexColRight\">\n                                        <br/><br/>\n                        Option1: <input type=\"text\" style={{width:'100px'}}\n                         onChange={this.option1Change}\n                         id=\"option1\" value={this.state.option1}/><br/><br/>\n                        Option2: <input type=\"text\" style={{width:'100px'}}\n                             onChange={this.option2Change}\n                             id=\"option2\" value={this.state.option2}/><br/><br/>\n                        Option3: <input type=\"text\" style={{width:'100px'}}\n                             onChange={this.option3Change}\n                             id=\"option3\" value={this.state.option3}/><br/><br/>\n                        Option4: <input type=\"text\" style={{width:'100px'}}\n                               onChange={this.option4Change}\n                               id=\"option4\" value={this.state.option4}/><br/><br/>\n                        Answer Key: <br/>\n                        <input type=\"text\" id=\"answerKey\"\n                        onChange={this.answerkeyChange}\n                        style={{width:'100px'}} value={this.state.answerkey}/>\n                        <br/>\n                        <br/>\n                        Author:<br/>\n                        <input id=\"authorName\" name=\"authorName\" type=\"text\" style={{width:'100px'}}\n                        value={this.props.loggedInUser} readonly>\n                        </input> <br/><br/><br/>\n                        <input type=\"button\"  value=\"Insert Problem\" onClick={this.handleSubmit}/>\n                  </div>\n              </div>\n              <div style={{display:'block', paddingTop:'30px', width:'100%'}}>\n\n               </div>\n               <div style={{display:'block', paddingTop:'10px', width:'100%'}}>\n\n               </div>\n           </fieldset>\n      </div>\n    )\n  }\n\n  componentDidMount(){\n    this.props.loadQuizes();\n    /*this.setState({\n      spinner:true\n    });\n    fetch(`/api/getQuizes`, {\n      headers:{\n        'Accept':'application/json'\n      }\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      //console.log(data1);\n      this.setState({spinner:false, quizesArray: data});\n    });*/\n  }\n\n\n}\n\nexport default ProblemInsert;\n","import React from 'react';\n\nclass QuizesBrowse extends React.Component{\n  componentDidMount(){\n    this.props.loadQuizes();\n    /*this.setState({spinner:true});\n    fetch(`/api/getQuizes`, {\n      headers:{\n        'Accept':'application/json'\n      }\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      this.setState({spinner:false, objArray: data});\n    })*/\n  }\n\n  render(){\n    return (\n      <div>\n          {/*\n            this.state.spinner===true?(<div id=\"spinner\" className=\"container\"><div className=\"loading\"></div></div>):null\n          */}\n          <a class=\"HomeLink\" href=\"/\">back to home</a>\n          <div class=\"h1\">\n            Browse Quizes\n          </div>\n          <div  className='Browse'>\n               <table className=\"displayTable\" style={{width:\"100%\"}}>\n                 <tr>\n                   <th>Quiz</th><th>Duration(mins)</th><th>Course</th><th>Instructor</th>\n                 </tr>\n                 {\n                   this.props.quizesArray.map(obj=>(\n                     <tr>\n                       <td><a href={`./quizShowSelected/${obj.id}`}>{obj.description}</a></td>\n                       <td>{obj.duration_minutes}</td>\n                       <td>{obj.name}</td>\n                       <td>{obj.author_id}</td>\n                     </tr>\n                     )\n                   )\n                 }\n               </table>\n         </div>\n     </div>\n    )\n  }\n\n  constructor(props){\n    super(props);\n    this.state={\n      spinner:false\n    }\n  }\n}\n\nexport default QuizesBrowse;\n","import React from 'react';\nimport {  Redirect } from 'react-router-dom';\n\nclass QuizInsert extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      spinner:false,\n      duration_minutes:30,\n      description:'',\n      courseId:'',\n      courseName:''\n    }\n    this.baseState={\n      description:''\n    }\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.selectChange=this.selectChange.bind(this);\n    this.handleSubmit=this.handleSubmit.bind(this);\n    this.durationChange=this.durationChange.bind(this);\n  }\n\n  handleSubmit(){\n    if(this.state.description===''){\n      alert('Description cannot be empty');\n      return;\n    }\n    else if(this.state.duration_minutes===''){\n      alert('Duration cannot be empty');\n      return;\n    }\n    else if(isNaN(this.state.duration_minutes)){\n      alert('Duration has to be a number');\n      return;\n    }\n    else{\n      this.props.showSpinner();\n      var reqBody=\"quizDescription=\"+encodeURIComponent(this.state.description);\n          reqBody+=\"&duration_minutes=\"+encodeURIComponent(this.state.duration_minutes);\n      reqBody+=\"&courseId=\"+encodeURIComponent(this.state.courseId);\n      reqBody+='&authorName='+encodeURIComponent(this.props.loggedInUser);\n\n      fetch(`/api/insertQuizAction`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data=>{\n          //if(data.updatestatus==\"ok\")\n              let quizesArrayCopy=[...this.props.quizesArray];\n              let obj={\n                id: data.quizId,\n                description: this.state.description,\n                duration_minutes: this.state.duration_minutes,\n                name:this.state.courseName,\n                author_id:this.props.loggedInUser\n              };\n              quizesArrayCopy.push(obj);\n              this.props.setQuizes(quizesArrayCopy);\n              this.setState(this.baseState);\n              this.props.hideSpinner();\n              alert('Quiz inserted');\n              window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/quizesBrowse\");\n      })\n\n    }\n\n  }\n\n  durationChange(e){\n    this.setState({duration_minutes:e.target.value})\n  }\n\n  descriptionChange(e){\n    if(this.props.coursesArray.length>0)\n        this.setState({courseId:this.props.coursesArray[0].id, courseName:this.props.coursesArray[0].name});\n    const new_description=e.target.value;\n    //console.log(e.target.value);\n    this.setState({description:new_description});\n  }\n\n  componentDidMount(){\n    this.props.loadCourses();\n    /*this.setState({spinner:true});\n    fetch(`/api/getCourses`, {\n      headers:{\n        'Accept':'application/json'\n      }\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      this.setState({spinner:false, coursesArray: data});\n    })*/\n  }\n\n  selectChange(e){\n    //console.log(e.target.value);\n    var new_courseId=e.target.value;\n    var new_courseName=e.target.options[e.target.selectedIndex].text;\n    this.setState({courseId:new_courseId, courseName:new_courseName});\n  }\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n    return (\n      <div>\n      <a class=\"HomeLink\" href=\"/\">back to home</a>\n      <div class=\"h1\">\n        Insert Quiz\n      </div>\n        <fieldset>\n        Duration (minutes):<br/>\n        <input type=\"text\" id=\"durationMinutes\" style={{marginLeft:'23px'}}\n        onChange={this.durationChange}\n        value={this.state.duration_minutes}></input><br/>\n          Quiz Description:<br/>\n          <textarea id=\"quizDescription\" name=\"quizDescription\" type=\"text\" rows=\"10\"\n          style={{width:'90%'}}\n          onChange={this.descriptionChange}\n          value={this.state.description}\n           >\n          </textarea>\n          <br/>\n          <br/>\n          Course Id:<br/>\n          <select id=\"courseId\" onChange={this.selectChange} name=\"courseId\" required=\"true\">\n          {\n              this.props.coursesArray.map(obj=>(\n                <option value={obj.id}>{obj.name}</option>\n                )\n              )\n          }\n          </select>\n          <br/><br/>\n          Author:<br/>\n          <input id=\"authorName\" name=\"authorName\" type=\"text\" style={{width:'100px', textAlign: 'center'}}\n          required=\"true\" value={this.props.loggedInUser} readonly>\n          </input> <br/><br/>\n<br/>         <input type=\"button\" value=\"Insert Quiz\" onClick={this.handleSubmit}/>\n        </fieldset>\n      </div>\n    )\n  }\n\n}\n\nexport default QuizInsert;\n","import React from 'react';\n\nclass QuizEditDialog extends React.Component{\n\n  componentDidMount(){\n    this.props.loadCourses();\n  }\n\n\n\n  render(){\n    //console.log(this.props.coursesArray);\n    //console.log(this.props.objectForEdit);\n    const visibilityClassName=this.props.show\n    ? \"simple-dialog-overlay simple-dialog-display-block\"\n    :\"simple-dialog-overlay simple-dialog-display-none\";\n\n    return (\n      <div className={visibilityClassName}>\n         <div className=\"simple-dialog\">\n         <button id = \"x\" onClick={this.props.handleDismiss}>\n          X\n         </button>\n           <h2>Edit Profile</h2>\n           <hr class=\"rounded\"/>\n                          Quiz Id:<br/>\n                          <input type=\"text\" id=\"userId\" style={{marginLeft:'23px'}}\n                          value={this.props.objectForEdit.id}\n                          readonly></input>\n                          <br/><br/>\n                          Duration (minutes):<br/>\n                          <input type=\"text\" id=\"durationMinutes\" style={{marginLeft:'23px'}}\n                          onChange={this.props.durationChange}\n                          value={this.props.objectForEdit.duration_minutes}></input>\n                          <br/><br/>\n                          Course:<br/>\n                          <select id=\"courseId\" onChange={this.props.selectChange}\n                          style={{marginLeft:'23px'}}\n                          name=\"courseId\" required=\"true\">\n                          {\n                              this.props.coursesArray.map(objQ=>(\n                                <option value={objQ.id}>{objQ.name}</option>\n                                )\n                              )\n                          }\n                          </select>\n                          <br/><br/>\n                         Description:<br/>\n                         <textarea id=\"description\" style={{marginLeft:'25px', width:'90%'}} type=\"text\" rows=\"10\"\n                          onChange={this.props.descriptionChange}\n                         value={this.props.objectForEdit.description}></textarea>\n                         <br/><br/>\n                         Creator:<br/>\n                         <input type=\"text\" id=\"creator\" style={{marginLeft:'23px'}}\n                         value={this.props.objectForEdit.instructorId}\n                         readonly></input>\n            <br/><br/><br/><br/><br/><br/>\n           <input type=\"button\" value=\"Save Updates\" onClick={this.props.handleSubmit}/>\n           <button id=\"x\" style={{width:'100px', textAlign:'center'}}\n             onClick={this.props.handleDismiss}>close\n           </button>\n         </div>\n    </div>)\n  }\n}\n\nexport default QuizEditDialog;\n","import React from 'react';\nimport QuizEditDialog from './QuizEditDialog';\nimport {  Redirect } from 'react-router-dom';\n\nclass QuizShowSelected extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      quizObj:{},\n      problemsArray:[],\n      showEditQuizDialog:false,\n      quizObjForEdit:{}\n    }\n    this.editQuizHandler=this.editQuizHandler.bind(this);\n    this.handleEditQuizDialogDismiss=this.handleEditQuizDialogDismiss.bind(this);\n    this.saveUpdateHandler=this.saveUpdateHandler.bind(this);\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.courseNameChange=this.courseNameChange.bind(this);\n    this.selectChange=this.selectChange.bind(this);\n    this.durationChange=this.durationChange.bind(this);\n  }\n\n  handleEditQuizDialogDismiss(e){\n     this.setState({showEditQuizDialog:false, quizObjForEdit: this.state.quizObj,\n     });\n  }\n\n  saveUpdateHandler(e){\n    this.props.showSpinner();\n    //console.log(newCourseObj);\n    var reqBody=\"id=\"+encodeURIComponent(this.state.quizObjForEdit.id);\n    reqBody+='&course_id='+encodeURIComponent(this.state.quizObjForEdit.course_id);\n    reqBody+='&description='+encodeURIComponent(this.state.quizObjForEdit.description);\n    reqBody+='&duration_minutes='+encodeURIComponent(this.state.quizObjForEdit.duration_minutes);\n\n    fetch(`/api/updateQuiz`, {\n      headers:{\n        'Accept':'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    })\n    .then(res=>res.json())\n    .then(data=>{\n                //console.log(data);\n\n        if(data.updatestatus===\"ok\"){\n            this.props.loadQuizes();\n            let quizesArrayCopy=JSON.parse(JSON.stringify(this.props.quizesArray));\n            quizesArrayCopy.forEach((obj)=>{\n              if(obj.id===this.state.quizObjForEdit.id){\n                 obj.courseName=this.state.quizObjForEdit.courseName;\n                 obj.course_id=this.state.quizObjForEdit.course_id;\n                 obj.description=this.state.quizObjForEdit.description;\n                 obj.duration_minutes=this.state.quizObjForEdit.duration_minutes;\n              }\n            });\n            this.props.setQuizes(quizesArrayCopy);\n            this.setState({quizObj: this.state.quizObjForEdit, showEditQuizDialog:false});\n            this.props.hideSpinner();\n            alert('Quiz updated');\n        }\n        else{\n          alert('Quiz updation failed!');\n        }\n    })\n  }\n\n  descriptionChange(e){\n    const copied = Object.assign({}, this.state.quizObjForEdit)\n    copied.description=e.target.value;\n    this.setState({quizObjForEdit:copied});\n  }\n\n  courseNameChange(e){\n    const copied = Object.assign({}, this.state.quizObjForEdit)\n    copied.courseName=e.target.value;\n    this.setState({quizObjForEdit:copied});\n  }\n\n  durationChange(e){\n    const copied = Object.assign({}, this.state.quizObjForEdit)\n    copied.duration_minutes=e.target.value;\n    this.setState({quizObjForEdit:copied});\n  }\n\n  componentDidMount(){\n    this.props.showSpinner();\n    const {params}= this.props.match;\n\n    var reqBody=\"quizId=\"+encodeURIComponent(params.id);\n    fetch(`/api/getTheQuiz`, {\n      headers:{\n        'Accept':'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      data.id=params.id;\n      //console.log(data);\n      fetch(`/api/getProblemListForQuiz`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data1=>{\n            //console.log(data1);\n            this.setState({quizObj: data, quizObjForEdit: data, problemsArray: data1});\n            this.props.hideSpinner();\n       })\n    })\n  }\n\n  editQuizHandler(){\n    this.setState({showEditQuizDialog:true});\n  }\n\n  selectChange(e){\n    const copied = Object.assign({}, this.state.quizObjForEdit)\n    var new_course_id=e.target.value;\n    var new_course_name=e.target.options[e.target.selectedIndex].text;\n    copied.course_id=new_course_id;\n    copied.courseName=new_course_name;\n    //console.log(copied);\n    this.setState({quizObjForEdit:copied});\n  }\n\n\n  deleteQuizHandler(id){\n    let b=window.confirm('Are you sure you want to delete');\n    if(b===true){\n        this.props.showSpinner();\n          var reqBody=\"id=\"+encodeURIComponent(id);\n          fetch(`/api/deleteQuiz`, {\n            headers:{\n              'Accept':'application/json',\n              'Content-type': 'application/x-www-form-urlencoded'\n            },\n            method: 'POST',\n            body: reqBody\n          })\n          .then(res=>res.json())\n          .then(data=>{\n              if(data.deletestatus===\"ok\"){\n                  let quizesArrayCopy=this.props.quizesArray.filter((obj)=>obj.id!==id);\n                  this.props.setQuizes(quizesArrayCopy);\n                  this.props.hideSpinner();\n                  alert('Quiz deleted');\n                  window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/quizesBrowse\");\n              }\n          })\n    }//end of if\n  }\n\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n    return (\n      <div className=\"Panel\">\n          {/*\n            this.state.spinner===true?(<div id=\"spinner\" className=\"container\"><div className=\"loading\"></div></div>):null\n          */}\n          <a className=\"HomeLink\" href=\"/\">back to home</a>\n          <div className=\"h1\">\n            {this.state.quizObj.description}\n          </div>\n           <b>Course:</b> {this.state.quizObj.courseName}\n           {(this.props.loggedInUser===this.state.quizObj.instructorId||this.props.admin===\"1\")?\n           (<div><br/>\n            <span><b>Duration (minutes):</b> {this.state.quizObj.duration_minutes}\n              <input type=\"button\"\n               className=\"EditButton\"\n               onClick={()=>this.editQuizHandler()}\n               id={`e${this.state.quizObj.id}`} value=\"Edit Quiz\"/>\n            </span><br/><br/>\n            <input type=\"button\" className=\"EditButton\"\n             onClick={()=>this.deleteQuizHandler(this.state.quizObj.id)}\n             id={`d${this.state.quizObj.id}`} value=\"Delete Quiz\"/>\n           </div>):null}\n           <br/>\n           <input type=\"button\" className=\"LeftButton\"\n            onClick={()=>this.props.startQuiz(this.state.quizObj)}\n            id={`s${this.state.quizObj.id}`} value=\"Start Quiz\"/>\n           <p></p>\n           <br/>\n          <b> Instructor:</b> {this.state.quizObj.instructorId}\n          <br/><br/>\n          {this.props.isQuizStarted(this.state.quizObj.id)?(\n            <form>\n            {(this.state.problemsArray.map(obj=>(\n              <div>\n                  <hr/>\n                  <b>Question: </b>\n                  <div className=\"Question\"\n                        dangerouslySetInnerHTML={{\n                       __html: obj.description\n                       }}\n                  ></div><b>Options</b><br/>\n                  <input type=\"radio\" id={`${obj.id}$option1`} onChange={(e)=>this.props.optionChange(obj.id,e.target.value)}\n                  checked={this.props.startedQuizAnswers!=null&&this.props.startedQuizAnswers[obj.id]===\"1\"}\n                   name={`${obj.id}$`} value=\"1\" ></input>\n                  <span  dangerouslySetInnerHTML={{__html: obj.option1}}/><br/>\n                  <input type=\"radio\" id={`${obj.id}$option2`} onChange={(e)=>this.props.optionChange(obj.id,e.target.value)}\n                  checked={this.props.startedQuizAnswers!=null&&this.props.startedQuizAnswers[obj.id]===\"2\"}\n                   name={`${obj.id}$`} value=\"2\"></input>\n                  <span  dangerouslySetInnerHTML={{__html: obj.option2}}/><br/>\n                  <input type=\"radio\" id={`${obj.id}$option3`} onChange={(e)=>this.props.optionChange(obj.id,e.target.value)}\n                    checked={this.props.startedQuizAnswers!=null&&this.props.startedQuizAnswers[obj.id]===\"3\"}\n                   name={`${obj.id}$`} value=\"3\"></input>\n                  <span  dangerouslySetInnerHTML={{__html: obj.option3}}/><br/>\n                  <input type=\"radio\" id={`${obj.id}$option4`} onChange={(e)=>this.props.optionChange(obj.id,e.target.value)}\n                    checked={this.props.startedQuizAnswers!=null&&this.props.startedQuizAnswers[obj.id]===\"4\"}\n                   name={`${obj.id}$`} value=\"4\"></input>\n                  <span  dangerouslySetInnerHTML={{__html: obj.option4}}/><br/>\n              </div>\n            )\n          ))}\n           <br/>\n           <input type=\"button\" className=\"LeftButton\"\n           onClick={e=>{\n                         if(window.confirm('Are you sure you want to submit the quiz:'+this.state.quizObj.description)===true)\n                           this.props.submitQuiz();\n                       }\n                   }\n           value=\"Submit Quiz\"/>\n          </form>\n        ):null}\n        <QuizEditDialog\n                objectForEdit={this.state.quizObjForEdit}\n                show={this.state.showEditQuizDialog}\n                handleDismiss={this.handleEditQuizDialogDismiss}\n                handleSubmit={this.saveUpdateHandler}\n                descriptionChange={this.descriptionChange}\n                courseNameChange={this.courseNameChange}\n                loadCourses={this.props.loadCourses}\n                coursesArray={this.props.coursesArray}\n                selectChange={this.selectChange}\n                durationChange={this.durationChange}\n        />\n     </div>\n    )\n  }\n\n\n}\n\nexport default QuizShowSelected;\n","import React from 'react';\nimport '../css/Browse.css';\n\nclass UsersBrowse extends React.Component{\n  componentDidMount(){\n    /*this.setState({spinner:true});\n    fetch(`/api/getUsers`, {\n      headers:{\n        'Accept':'application/json'\n      }\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      this.setState({spinner:false, objArray: data});\n    })*/\n    this.props.loadUsers();\n  }\n\n\n  render(){\n    return (\n      <div>\n          <a className=\"HomeLink\" href=\"/\">back to home</a>\n          <div className=\"h1\">\n            Browse Users\n          </div>\n          <div  className='Browse'>\n          <table className=\"displayTable\">\n           <tr>\n             <th>id</th><th>full name</th><th>address</th><th>city</th><th>zip</th><th>phone</th><th>mobile</th><th>email</th>\n           </tr>\n             {\n               this.props.usersArray.map(obj=>(\n                 <tr>\n                   <td><a href={`./userShowSelected/${obj.id}`}>{obj.id}</a></td>\n                   <td>{obj.first_name+' '+obj.last_name}</td>\n                   <td>{obj.address1+' '+obj.address2}</td>\n                   <td>{obj.city}</td><td>{obj.zip}</td>\n                   <td>{obj.phone}</td><td>{obj.mobile}</td>\n                   <td>{obj.email}</td>\n                 </tr>\n                 )\n               )\n             }\n\n         </table>\n         </div>\n     </div>\n    )\n  }\n\n\n}\n\nexport default UsersBrowse;\n","import React from 'react';\nimport {  Redirect } from 'react-router-dom';\n\nclass UserInsert extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      spinner:false,\n      userId:'',\n      password:'',\n      firstName:'',\n      lastName:'',\n      address1:'',\n      address2:'',\n      city:'',\n      zip:'',\n      phone:'',\n      cell:'',\n      email:''\n    }\n    this.baseState=this.state;\n    this.userIdChange=this.userIdChange.bind(this);\n    this.passwordChange=this.passwordChange.bind(this);\n    this.firstNameChange=this.firstNameChange.bind(this);\n    this.lastNameChange=this.lastNameChange.bind(this);\n    this.address1Change=this.address1Change.bind(this);\n    this.address2Change=this.address2Change.bind(this);\n    this.cityChange=this.cityChange.bind(this);\n    this.zipChange=this.zipChange.bind(this);\n    this.phoneChange=this.phoneChange.bind(this);\n    this.cellChange=this.cellChange.bind(this);\n    this.emailChange=this.emailChange.bind(this);\n    this.handleSubmit=this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e){\n    if(this.state.userId===''||this.state.password===''){\n      alert('UserId/Password cannot be empty');\n      return;\n    }\n    else{\n      this.props.showSpinner();\n      var reqBody='userId='+encodeURIComponent(this.state.userId);\n      reqBody+='&password='+encodeURIComponent(this.state.password);\n      reqBody+='&firstName='+encodeURIComponent(this.state.firstName);\n      reqBody+='&lastName='+encodeURIComponent(this.state.lastName);\n      reqBody+='&address1='+encodeURIComponent(this.state.address1);\n      reqBody+='&address2='+encodeURIComponent(this.state.address2);\n      reqBody+='&city='+encodeURIComponent(this.state.city);\n      reqBody+='&zip='+encodeURIComponent(this.state.zip);\n      reqBody+='&phone='+encodeURIComponent(this.state.phone);\n      reqBody+='&cell='+encodeURIComponent(this.state.cell);\n      reqBody+='&email='+encodeURIComponent(this.state.email);\n\n      fetch(`/api/insertUserAction`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data=>{\n          //if(data.updatestatus==\"ok\")\n              let usersArrayCopy=[...this.props.usersArray];\n              let obj={\n                id:this.state.userId,\n                password:this.state.password,\n                first_name: this.state.firstName,\n                last_name: this.state.lastName,\n                address1: this.state.address1,\n                address2: this.state.address2,\n                city:this.state.city,\n                zip:this.state.zip,\n                phone:this.state.phone,\n                mobile:this.state.cell,\n                email:this.state.email\n              };\n              usersArrayCopy.push(obj);\n              this.props.setUsers(usersArrayCopy);\n              this.setState(this.baseState);\n              this.props.hideSpinner();\n              alert('User inserted');\n              window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port);\n      })\n\n    }\n  }\n\n  emailChange(e){\n    this.setState({email:e.target.value})\n  }\n\n  cellChange(e){\n    this.setState({cell:e.target.value})\n  }\n\n  phoneChange(e){\n    this.setState({phone:e.target.value})\n  }\n\n  zipChange(e){\n    this.setState({zip:e.target.value})\n  }\n\n  cityChange(e){\n    this.setState({city:e.target.value})\n  }\n\n  address2Change(e){\n    this.setState({address2:e.target.value})\n  }\n\n  address1Change(e){\n    this.setState({address1:e.target.value})\n  }\n\n  lastNameChange(e){\n    this.setState({lastName:e.target.value})\n  }\n\n  firstNameChange(e){\n    this.setState({firstName:e.target.value})\n  }\n\n  passwordChange(e){\n    this.setState({password:e.target.value})\n  }\n\n  userIdChange(e){\n    this.setState({userId:e.target.value})\n  }\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n    return (\n      <div id=\"UserInsert\">\n          <a class=\"HomeLink\" href=\"/\">back to home</a>\n          <div class=\"h1\">\n          Register User\n          </div>\n          <fieldset>\n            <div className=\"row\">\n                <div id=\"flexColLeft\">\n                        <br/>User Id:\n                        <input id=\"userId\" name=\"userId\" style={{marginLeft:'0.5cm'}} type=\"text\"\n                        value={this.state.userId}\n                        onChange={this.userIdChange}>\n                        </input> <br/><br/>\n                        Password:\n                        <input id=\"password\" name=\"password\" type=\"password\"\n                        value={this.state.password}\n                        onChange={this.passwordChange}>\n                        </input><br/><br/>\n                        First Name:\n                        <input id=\"firstName\" name=\"firstName\" type=\"text\" rows=\"10\" size=\"18\"\n                        value={this.state.firstName}\n                        onChange={this.firstNameChange}\n                        ></input><br/><br/>\n                        Last Name:\n                        <input id=\"lastName\" name=\"lastName\" type=\"text\" rows=\"10\" size=\"19\"\n                        value={this.state.lastName}\n                        onChange={this.lastNameChange}>\n                        </input><br/><br/>\n                        Phone:\n                        <input id=\"phone\" name=\"phone\" style={{marginLeft:'0.5cm'}} type=\"text\"\n                        value={this.state.phone}\n                        onChange={this.phoneChange}\n                        ></input><br/><br/>\n                          Cell num:\n                         <input id=\"cell\" name=\"cell\" type=\"text\"\n                         value={this.state.cell}\n                         onChange={this.cellChange}\n                         ></input>\n                </div> {/*end of flexColLeft*/}\n                <div id=\"flexColRight\">\n                       <br/>Address1:\n                       <input id=\"address1\" name=\"address1\" type=\"text\"\n                       value={this.state.address1}\n                       onChange={this.address1Change}\n                       ></input><br/><br/>\n                       Address2:\n                      <input id=\"address2\" name=\"address2\" type=\"text\"\n                      value={this.state.address2}\n                      onChange={this.address2Change}\n                        ></input><br/><br/>\n                      City:\n                      <input style={{marginLeft:'1cm'}} id=\"city\" name=\"city\" type=\"text\"\n                      value={this.state.city}\n                      onChange={this.cityChange}\n                       ></input><br/><br/>\n                      Zip:\n                      <input style={{marginLeft:'1.2cm'}} id=\"zip\" name=\"zip\" type=\"text\"\n                      value={this.state.zip}\n                      onChange={this.zipChange}\n                      ></input><br/><br/>\n                       Email:\n                       <input style={{marginLeft:'1cm'}} id=\"email\" name=\"email\" type=\"text\"\n                       value={this.state.email}\n                       onChange={this.emailChange}\n                        >\n                       </input><br/><br/>\n                        <input type=\"submit\" style={{width: '20%'}} value=\"submit\"\n                        onClick={this.handleSubmit}/>\n                                      </div> {/*end of flexColRight*/}\n                                  </div>{/*end of row*/}\n          </fieldset>\n      </div>\n    )\n  }\n\n}\n\nexport default UserInsert;\n","import React from 'react';\n\nclass UserEditDialog extends React.Component{\n\n  render(){\n    //console.log(this.props.objectForEdit);\n    const visibilityClassName=this.props.show\n    ? \"simple-dialog-overlay simple-dialog-display-block\"\n    :\"simple-dialog-overlay simple-dialog-display-none\";\n\n    return (\n      <div id=\"UserInsert\" className={visibilityClassName}>\n           <div className=\"simple-dialog\">\n               <button id = \"x\" onClick={this.props.handleDismiss}>\n                X\n               </button>\n               <h2>Edit Profile</h2>\n               <hr class=\"rounded\"/>\n               <div className=\"row\">\n                   <div id=\"flexColLeft\">\n                          <br/>User Id:\n                          <input type=\"text\" id=\"userId\" style={{marginLeft:'23px'}}\n                          value={this.props.objectForEdit.id}\n                          readonly></input>\n                          <br/><br/>\n                          First Name:\n                          <input type=\"text\" id=\"firstName\"\n                          onChange={this.props.firstNameChange}\n                          value={this.props.objectForEdit.firstName}></input>\n                          <br/><br/>\n                          Last Name:\n                          <input type=\"text\" id=\"lastName\"\n                          onChange={this.props.lastNameChange}\n                          value={this.props.objectForEdit.lastName}></input>\n                          <br/><br/>\n                          Address1:\n                          <input type=\"text\" id=\"address1\" style={{marginLeft:'14px'}}\n                          onChange={this.props.address1Change}\n                          value={this.props.objectForEdit.address1}></input>\n                          <br/><br/>\n                          Address2:\n                          <input type=\"text\" id=\"address2\" style={{marginLeft:'10px'}}\n                          onChange={this.props.address2Change}\n                          value={this.props.objectForEdit.address2}></input>\n                   </div>\n                   <div id=\"flexColLeft\">\n                      <br/>Email:\n                      <input type=\"text\" id=\"email\" style={{marginLeft:'25px'}}\n                      onChange={this.props.emailChange}\n                      value={this.props.objectForEdit.email}></input>\n                      <br/><br/>\n                      City:\n                      <input type=\"text\" id=\"city\" style={{marginLeft:'40px'}}\n                      onChange={this.props.cityChange}\n                      value={this.props.objectForEdit.city}></input>\n                      <br/><br/>\n                      Phone:\n                      <input type=\"text\" id=\"phone\" style={{marginLeft:'20px'}}\n                      onChange={this.props.phoneChange}\n                      value={this.props.objectForEdit.phone}></input>\n                      <br/><br/>\n                      Zip:\n                      <input type=\"text\" id=\"zip\" style={{marginLeft:'35px'}}\n                      onChange={this.props.zipChange}\n                      value={this.props.objectForEdit.zip}></input>\n                      <br/><br/>\n                      Mobile:\n                      <input type=\"text\" id=\"mobile\" style={{marginLeft:'25px'}}\n                      onChange={this.props.mobileChange}\n                      value={this.props.objectForEdit.mobile}></input>\n                   </div>\n               </div>\n               <br/><br/>\n<input type=\"button\" value=\"Save Updates\" onClick={this.props.handleSubmit}/>\n<button id=\"x\" style={{width:'100px', textAlign:'center'}}\n  onClick={this.props.handleDismiss}>close\n</button>\n         </div>\n    </div>)\n  }\n}\n\nexport default UserEditDialog;\n","import React from 'react';\nimport UserEditDialog from './UserEditDialog';\nimport {  Redirect } from 'react-router-dom';\n\nclass UserShowSelected extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      showEditUserDialog:false,\n      userObj:{},\n      coursesArray:[],\n      userObjForEdit:{}\n    }\n    this.handleEditUserDialogDismiss=this.handleEditUserDialogDismiss.bind(this);\n    this.editUserHandler=this.editUserHandler.bind(this);\n    this.saveUpdateHandler=this.saveUpdateHandler.bind(this);\n    this.firstNameChange=this.firstNameChange.bind(this);\n    this.lastNameChange=this.lastNameChange.bind(this);\n    this.address1Change=this.address1Change.bind(this);\n    this.address2Change=this.address2Change.bind(this);\n    this.cityChange=this.cityChange.bind(this);\n    this.zipChange=this.zipChange.bind(this);\n    this.phoneChange=this.phoneChange.bind(this);\n    this.mobileChange=this.mobileChange.bind(this);\n    this.emailChange=this.emailChange.bind(this);\n  }\n\n  componentDidMount(){\n    this.setState({spinner:true});\n    const {params}= this.props.match;\n\n    var reqBody=\"userId=\"+encodeURIComponent(params.id);\n    console.log(params.id);\n    fetch(`/api/getTheUser`, {\n      headers:{\n        'Accept':'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      data.id=params.id;\n      fetch(`/api/getCourseListForUser`,{\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data1=>{\n          //console.log(data1);\n          this.setState({spinner:false, userObj: data, userObjForEdit: data, coursesArray: data1});\n      })\n    })\n  }\n\n  firstNameChange(e){\n    const copied = Object.assign({}, this.state.userObjForEdit)\n    copied.firstName=e.target.value;\n    this.setState({userObjForEdit:copied});\n  }\n\n  lastNameChange(e){\n    const copied = Object.assign({}, this.state.userObjForEdit)\n    copied.lastName=e.target.value;\n    this.setState({userObjForEdit:copied});\n  }\n\n  address1Change(e){\n    const copied = Object.assign({}, this.state.userObjForEdit)\n    copied.address1=e.target.value;\n    this.setState({userObjForEdit:copied});\n  }\n\n  address2Change(e){\n    const copied = Object.assign({}, this.state.userObjForEdit)\n    copied.address2=e.target.value;\n    this.setState({userObjForEdit:copied});\n  }\n\n  cityChange(e){\n    const copied = Object.assign({}, this.state.userObjForEdit)\n    copied.city=e.target.value;\n    this.setState({userObjForEdit:copied});\n  }\n\n  zipChange(e){\n    const copied = Object.assign({}, this.state.userObjForEdit)\n    copied.zip=e.target.value;\n    this.setState({userObjForEdit:copied});\n  }\n\n  phoneChange(e){\n    const copied = Object.assign({}, this.state.userObjForEdit)\n    copied.phone=e.target.value;\n    this.setState({userObjForEdit:copied});\n  }\n\n  mobileChange(e){\n    const copied = Object.assign({}, this.state.userObjForEdit)\n    copied.mobile=e.target.value;\n    this.setState({userObjForEdit:copied});\n  }\n  emailChange(e){\n    const copied = Object.assign({}, this.state.userObjForEdit)\n    copied.email=e.target.value;\n    this.setState({userObjForEdit:copied});\n  }\n\n  handleEditUserDialogDismiss(){\n    this.setState({userObjForEdit: this.state.userObj, showEditUserDialog:false});\n  }\n\n  editUserHandler(){\n    this.setState({showEditUserDialog:true});\n  }\n\n  saveUpdateHandler(){\n    this.props.showSpinner();\n    //console.log(newCourseObj);\n    var reqBody=\"id=\"+encodeURIComponent(this.state.userObjForEdit.id);\n    reqBody+='&firstName='+encodeURIComponent(this.state.userObjForEdit.firstName);\n    reqBody+='&lastName='+encodeURIComponent(this.state.userObjForEdit.lastName);\n    reqBody+='&address1='+encodeURIComponent(this.state.userObjForEdit.address1);\n    reqBody+='&address2='+encodeURIComponent(this.state.userObjForEdit.address2);\n    reqBody+='&city='+encodeURIComponent(this.state.userObjForEdit.city);\n    reqBody+='&zip='+encodeURIComponent(this.state.userObjForEdit.zip);\n    reqBody+='&phone='+encodeURIComponent(this.state.userObjForEdit.phone);\n    reqBody+='&mobile='+encodeURIComponent(this.state.userObjForEdit.mobile);\n    reqBody+='&email='+encodeURIComponent(this.state.userObjForEdit.email);\n\n    fetch(`/api/updateUser`, {\n      headers:{\n        'Accept':'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    })\n    .then(res=>res.json())\n    .then(data=>{\n        if(data.updatestatus===\"ok\"){\n            this.props.loadUsers();\n            let usersArrayCopy=JSON.parse(JSON.stringify(this.props.usersArray));\n            usersArrayCopy.forEach((obj)=>{\n              if(obj.id===this.state.userObjForEdit.id){\n                 obj.firstName=this.state.userObjForEdit.firstName;\n                 obj.lastName=this.state.userObjForEdit.lastName;\n                 obj.address1=this.state.userObjForEdit.address1;\n                 obj.address2=this.state.userObjForEdit.address2;\n                 obj.city=this.state.userObjForEdit.city;\n                 obj.zip=this.state.userObjForEdit.zip;\n                 obj.mobile=this.state.userObjForEdit.mobile;\n                 obj.phone=this.state.userObjForEdit.phone;\n                 obj.email=this.state.userObjForEdit.email;\n              }\n            });\n            this.props.setUsers(usersArrayCopy);\n            this.setState({userObj: this.state.userObjForEdit, showEditUserDialog:false});\n            this.props.hideSpinner();\n            alert('User updated');\n        }\n    })\n  }\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n    console.log(this.props.admin);\n\n    return (\n      <div className=\"Panel\">\n          {/*\n            this.state.spinner===true?(<div id=\"spinner\" className=\"container\"><div className=\"loading\"></div></div>):null\n          */}\n          <a className=\"HomeLink\" href=\"/\">back to home</a>\n          <div class=\"h1\">\n            {this.state.userObj.firstName} {this.state.userObj.lastName}\n          </div>\n          {(this.props.loggedInUser===this.state.userObj.id||this.props.admin===\"1\")?\n            (<input type=\"button\" className=\"EditButton\"\n            onClick={()=>this.editUserHandler()}\n            id={`e${this.state.userObj.id}`} value=\"Edit User\"/>):null\n          }\n          <br/><br/>\n          <b>Address:</b> {this.state.userObj.address1} {this.state.userObj.address2}  <br/>\n          <p>  <b>City:</b> {this.state.userObj.city}</p>\n          <p>  <b>Zip:</b> {this.state.userObj.zip}</p>\n          <b>Phone:</b> {this.state.userObj.phone}  <br/><br/>\n          <b>Mobile:</b> {this.state.userObj.mobile} <br/><br/>\n          <b>Email:</b> {this.state.userObj.email}\n          <div className=\"row\">\n            <div>\n              <br/>\n              <b>List of Courses:</b>\n              <br/><br/>\n              {\n                this.state.coursesArray.map(obj=>(\n                   <div>\n                      <a href={`http://${window.location.hostname}:${window.location.port}/courseShowSelected/${obj.id}`}>{obj.name}</a><br/>\n                   </div>\n                  )\n                )\n              }\n            </div>\n          </div>\n          <UserEditDialog\n                  objectForEdit={this.state.userObjForEdit}\n                  show={this.state.showEditUserDialog}\n                  handleDismiss={this.handleEditUserDialogDismiss}\n                  handleSubmit={this.saveUpdateHandler}\n                  firstNameChange={this.firstNameChange}\n                  lastNameChange={this.lastNameChange}\n                  address1Change={this.address1Change}\n                  address2Change={this.address2Change}\n                  cityChange={this.cityChange}\n                  zipChange={this.zipChange}\n                  phoneChange={this.phoneChange}\n                  mobileChange={this.mobileChange}\n                  emailChange={this.emailChange}\n          />\n     </div>\n    )\n  }\n\n\n}\n\nexport default UserShowSelected;\n","\nimport React from 'react';\n\nclass CoursesBrowse extends React.Component{\n\n  componentDidMount(){\n    this.props.loadCourses();\n  }\n\n  render(){\n    return (\n      <div>\n          <a class=\"HomeLink\" href=\"/\">back to home</a>\n          <div class=\"h1\">\n            Browse Courses\n          </div>\n         <table className=\"displayTable\" style={{width:\"100%\"}}>\n           <tr>\n              <th>Course name</th><th>Description</th><th>Owner</th>\n           </tr>\n           {\n             this.props.coursesArray.map(obj=>(\n               <tr>\n                 <td><a href={`./courseShowSelected/${obj.id}`}>{obj.name}</a></td>\n                 <td>{obj.description}</td>\n                 <td>{obj.author_id}</td>\n               </tr>\n               )\n             )\n           }\n         </table>\n     </div>\n\n    )\n  }\n\n  constructor(props){\n    super(props);\n    this.state={\n      spinner:false,\n      objArray:[]\n    }\n  }\n}\n\nexport default CoursesBrowse;\n","import React from 'react';\nimport {  Redirect } from 'react-router-dom';\n\nclass CourseInsert extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      description:'',\n      name:''\n    }\n    this.baseState=this.state;\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.nameChange=this.nameChange.bind(this);\n    this.handleSubmit=this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(){\n    if(this.state.name===''||this.state.description===''){\n      alert('Name/Description cannot be empty');\n      return;\n    }\n    else{\n      this.props.showSpinner();\n      var reqBody='courseName='+encodeURIComponent(this.state.name);\n      reqBody+='&courseDescription='+encodeURIComponent(this.state.description);\n      reqBody+='&ownerId='+encodeURIComponent(this.props.loggedInUser);\n\n      fetch(`/api/insertCourseAction`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data=>{\n          //if(data.updatestatus==\"ok\")\n              let coursesArrayCopy=[...this.props.coursesArray];\n              let obj={\n                id: data.courseId,\n                name:this.state.name,\n                description: this.state.description,\n                author_id:this.props.loggedInUser\n              };\n              coursesArrayCopy.push(obj);\n              this.props.setCourses(coursesArrayCopy);\n              this.setState(this.baseState);\n              this.props.hideSpinner();\n              alert('Course inserted');\n              window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/coursesBrowse\");\n      })\n\n    }\n\n  }\n\n  descriptionChange(e){\n    const new_description=e.target.value;\n    //console.log(e.target.value);\n    this.setState({description:new_description});\n  }\n\n  nameChange(e){\n    const new_name=e.target.value;\n    //console.log(e.target.value);\n    this.setState({name:new_name});\n  }\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n    return (\n      <div>\n      <a class=\"HomeLink\" href=\"/\">back to home</a>\n      <div class=\"h1\">\n        Insert Course\n      </div>\n        <fieldset>\n            Course Name:<br/>\n            <input id=\"courseName\" name=\"courseName\" type=\"text\"\n            onChange={this.nameChange}\n            value={this.state.name}\n            >\n            </input>\n            <br/>\n            <br/>\n            Course Description:<br/>\n            <textarea id=\"courseDescription\" name=\"courseDescription\" type=\"text\"\n             value={this.state.description}\n              onChange={this.descriptionChange}\n             rows=\"10\" style={{width:'90%'}}>\n            </textarea>\n            <br/>\n            <br/>\n            Owner:<br/>\n            <input id=\"ownerId\" name=\"ownerId\" type=\"text\" required=\"true\"\n            style={{width:'100px', textAlign: 'center'}}\n            value={this.props.loggedInUser} readonly>\n            </input> <br/>\n            <br/>\n            <input type=\"button\" value=\"Insert Course\" onClick={this.handleSubmit}/>\n        </fieldset>\n      </div>\n    )\n  }\n\n}\n\nexport default CourseInsert;\n","import React from 'react';\n\nclass CourseEditDialog extends React.Component{\n\n  render(){\n    console.log(this.props.objectForEdit);\n    const visibilityClassName=this.props.show\n    ? \"simple-dialog-overlay simple-dialog-display-block\"\n    : \"simple-dialog-overlay simple-dialog-display-none\";\n\n    return (\n          <div className={visibilityClassName}>\n              <div className=\"simple-dialog\">\n                 <button id = \"x\" onClick={this.props.handleDismiss}>\n                  X\n                 </button>\n                 <h2>Edit Course</h2>\n                 <hr class=\"rounded\"/>\n                  Course Id:\n                  <input type=\"text\" id=\"courseId\" value={this.props.objectForEdit.courseId} readonly></input>\n                  <br/><br/>\n                   Name:\n                   <input type=\"text\" id=\"courseName\" style={{marginLeft:'20px'}}\n                   onChange={this.props.nameChange}\n                   value={this.props.courseNameEdited}></input>\n                   <br/><br/>\n                   Description:<br/>\n                   <textarea id=\"courseDescription\" name=\"courseDescription\" type=\"text\" rows=\"10\"\n                   style={{width:'90%'}}\n                    onChange={this.props.descriptionChange}\n                    value={this.props.courseDescriptionEdited}></textarea>\n                    <br/><br/>\n                    Creator:\n                    <input type=\"text\" id=\"Creator\" value={this.props.objectForEdit.ownerId} readonly></input>\n                    <br/><br/><br/><br/><br/><br/>\n                   <input type=\"button\" value=\"Save Updates\" onClick={this.props.handleSubmit}/>\n                   <button id=\"x\" style={{width:'100px', textAlign:'center'}}\n                     onClick={this.props.handleDismiss}>close\n                   </button>\n             </div>\n        </div>\n  )\n  }\n}\n\nexport default CourseEditDialog;\n","import React from 'react';\nimport CourseEditDialog from './CourseEditDialog';\nimport {  Redirect } from 'react-router-dom';\n\nclass CourseShowSelected extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      courseObj:{},\n      courseNameEdited:'',\n      courseDescriptionEdited:'',\n      quizesArray:[],\n      showEditCourseDialog:false\n    }\n    this.handleEditCourseDialogDismiss=this.handleEditCourseDialogDismiss.bind(this);\n    this.editCourseHandler=this.editCourseHandler.bind(this);\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.nameChange=this.nameChange.bind(this);\n    this.saveUpdateHandler=this.saveUpdateHandler.bind(this);\n  }\n\n  componentDidMount(){\n    const {params}= this.props.match;\n\n    this.props.showSpinner();\n    var reqBody=\"courseId=\"+encodeURIComponent(params.id);\n    fetch(`/api/getTheCourse`, {\n      headers:{\n        'Accept':'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      fetch(`/api/getQuizListForCourse`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data1=>{\n          //console.log(data1);\n          data.courseId=params.id;\n          this.setState(\n          {\n            courseObj: data,\n            courseNameEdited:data.name,\n            courseDescriptionEdited: data.description,\n            quizesArray: data1\n          });\n          this.props.hideSpinner();\n       })\n    })\n  }\n\n  editCourseHandler(e){\n     this.setState({showEditCourseDialog:true});\n  }\n\n  deleteCourseHandler(id){\n    let b=window.confirm('Are you sure you want to delete')\n    if(b===true){\n      this.props.showSpinner();\n        var reqBody=\"id=\"+encodeURIComponent(id);\n        fetch(`/api/deleteCourse`, {\n          headers:{\n            'Accept':'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            if(data.deletestatus===\"ok\"){\n                let coursesArrayCopy=this.props.coursesArray.filter((obj)=>obj.id!==id);\n                this.props.setCourses(coursesArrayCopy);\n                this.props.hideSpinner();\n                alert('Course deleted');\n                window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/coursesBrowse\");\n            }\n        })\n    }//end of if b==true\n  }\n\n  descriptionChange(e){\n    this.setState({courseDescriptionEdited: e.target.value})\n  }\n\n  nameChange(e){\n    this.setState({courseNameEdited: e.target.value})\n  }\n\n  handleEditCourseDialogDismiss(e){\n     this.setState({showEditCourseDialog:false,\n       courseNameEdited:this.state.courseObj.name,\n       courseDescriptionEdited:this.state.courseObj.description\n     });\n  }\n\n  saveUpdateHandler(e){\n     this.props.showSpinner();\n     const newCourseObj = Object.assign({}, this.state.courseObj)\n     newCourseObj.name=this.state.courseNameEdited;\n     newCourseObj.description=this.state.courseDescriptionEdited;\n     //console.log(newCourseObj);\n     var reqBody=\"courseId=\"+encodeURIComponent(newCourseObj.courseId);\n     reqBody+='&name='+encodeURIComponent(newCourseObj.name);\n     reqBody+='&description='+encodeURIComponent(newCourseObj.description);\n\n     fetch(`/api/updateCourse`, {\n       headers:{\n         'Accept':'application/json',\n         'Content-type': 'application/x-www-form-urlencoded'\n       },\n       method: 'POST',\n       body: reqBody\n     })\n     .then(res=>res.json())\n     .then(data=>{\n         if(data.updatestatus===\"ok\"){\n             this.props.loadCourses();\n             let coursesArrayCopy=JSON.parse(JSON.stringify(this.props.coursesArray));\n             coursesArrayCopy.forEach((obj)=>{\n               if(obj.courseId===newCourseObj.courseId){\n                  obj.description=newCourseObj.description;\n                  obj.name=newCourseObj.name;\n               }\n             });\n             this.props.setCourses(coursesArrayCopy);\n             this.setState({courseObj: newCourseObj, showEditCourseDialog:false});\n             this.props.hideSpinner();\n             alert('Course updated');\n         }\n     })\n  }\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n    console.log(this.state.courseObj);\n    return (\n      <div className=\"Panel\">\n          <a className=\"HomeLink\" href=\"/\">back to home</a>\n          <br/>\n          <div className=\"h1\">\n            Course: {this.state.courseObj.name}\n          </div>\n          <p style={{textAlign:'left'}}> <b>Description</b>: {this.state.courseObj.description} <br/></p>\n          {(this.props.loggedInUser===this.state.courseObj.ownerId||this.props.admin===\"1\")?\n          (<div>\n          <input type=\"button\" className=\"EditButton\"\n            onClick={()=>this.editCourseHandler()}\n            id={`e${this.state.courseObj.id}`} value=\"Edit Course\"/><br/><br/>\n          <input type=\"button\" className=\"EditButton\"\n            onClick={()=>this.deleteCourseHandler(this.state.courseObj.courseId)}\n            id={`d${this.state.courseObj.id}`} value=\"Delete Course\"/>\n          </div>):null}\n          <br/>\n          <b> Creator</b>: {this.state.courseObj.ownerId}\n          <div class=\"row\">\n             <div><br/><b>List of Quizes:</b><br/><br/>\n             {\n               this.state.quizesArray.map(obj=>(\n                  <div>\n                     <a href={`http://${window.location.hostname}:${window.location.port}/quizShowSelected/${obj.id}`}>{obj.description}</a><br/>\n                  </div>\n                 )\n               )\n             }\n             </div>{/*end of LeftWindow*/}\n          </div>{/*end of row*/}\n          <CourseEditDialog\n                  objectForEdit={this.state.courseObj}\n                  courseNameEdited={this.state.courseNameEdited}\n                  courseDescriptionEdited={this.state.courseDescriptionEdited}\n                  show={this.state.showEditCourseDialog}\n                  descriptionChange={this.descriptionChange}\n                  nameChange={this.nameChange}\n                  handleDismiss={this.handleEditCourseDialogDismiss}\n                  handleSubmit={this.saveUpdateHandler}\n          />\n     </div>\n    )\n  }\n\n\n}\n\nexport default CourseShowSelected;\n","import React from 'react';\nimport './css/App.css';\nimport Header from './components/Header';\nimport ImageSlider from './components/ImageSlider';\nimport DropdownMenuHover from './components/DropdownMenuHover';\nimport ProblemsBrowse from './components/ProblemsBrowse';\nimport ProblemInsert from './components/ProblemInsert';\nimport QuizesBrowse from './components/QuizesBrowse';\nimport QuizInsert from './components/QuizInsert';\nimport QuizShowSelected from './components/QuizShowSelected';\nimport UsersBrowse from './components/UsersBrowse';\nimport UserInsert from './components/UserInsert';\nimport UserShowSelected from './components/UserShowSelected';\nimport CoursesBrowse from './components/CoursesBrowse';\nimport CourseInsert from './components/CourseInsert';\nimport CourseShowSelected from './components/CourseShowSelected';\nimport { Route, BrowserRouter as Router} from 'react-router-dom'\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      spinner:false,\n      userId:null,\n      password:null,\n      loggedInUser:localStorage.getItem('loggedInUser') || '',\n      admin:localStorage.getItem('admin')||\"0\",\n      errorMessage:null,\n      coursesArray:[],\n      problemsArray:[],\n      quizesArray:[],\n      usersArray:[],\n      startedQuiz:localStorage.getItem('startedQuiz')?JSON.parse(localStorage.getItem('startedQuiz')):null,\n      startedQuizAnswers:localStorage.getItem('startedQuizAnswers')?JSON.parse(localStorage.getItem('startedQuizAnswers')):null\n    }\n    this.userIdChange=this.userIdChange.bind(this);\n    this.passwordChange=this.passwordChange.bind(this);\n    this.handleLoginSubmit=this.handleLoginSubmit.bind(this);\n    this.logoutUser=this.logoutUser.bind(this);\n    this.setErrorMessage=this.setErrorMessage.bind(this);\n    this.setCourses=this.setCourses.bind(this);\n    this.setProblems=this.setProblems.bind(this);\n    this.setQuizes=this.setQuizes.bind(this);\n    this.setUsers=this.setUsers.bind(this);\n    this.loadCourses=this.loadCourses.bind(this);\n    this.loadProblems=this.loadProblems.bind(this);\n    this.loadQuizes=this.loadQuizes.bind(this);\n    this.loadUsers=this.loadUsers.bind(this);\n    this.showSpinner=this.showSpinner.bind(this);\n    this.hideSpinner=this.hideSpinner.bind(this);\n    this.startQuiz=this.startQuiz.bind(this);\n    this.isQuizStarted=this.isQuizStarted.bind(this);\n    this.startedQuizOptionChange=this.startedQuizOptionChange.bind(this);\n    this.startedQuizSubmit=this.startedQuizSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    var timer = setInterval(() => {this.reviseQuizMinsRemaining();}, 60000)\n  }\n\n  loadCourses(){\n    this.setState({spinner:true});\n    fetch(`/api/getCourses`, {\n      headers:{\n        'Accept':'application/json'\n      }\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      //console.log(data);\n      this.setState({coursesArray: data, spinner: false});\n    })\n  }\n\n  setCourses(arr){\n    this.setState({coursesArray:arr});\n  }\n\n  startedQuizOptionChange(problemId, optionSelectedValue){\n    const copied = Object.assign({}, this.state.startedQuizAnswers);\n    copied[problemId]=optionSelectedValue;\n    this.setState({startedQuizAnswers:copied});\n    //console.log(copied);\n    localStorage.setItem('startedQuizAnswers', JSON.stringify(copied));\n  }\n\n  startQuiz(quizObj){\n    if(this.state.startedQuiz===null){\n      if(window.confirm('Are you sure you want to start the quiz:\\r\\n'+quizObj.description)===true){\n        const current_timestamp=new Date();\n        let mm=current_timestamp.getMonth()+1;\n        mm=mm<10?\"0\"+mm:\"\"+mm;\n        let dd=current_timestamp.getDate();\n        dd=dd<10?\"0\"+dd:\"\"+dd;\n        let hh=current_timestamp.getHours();\n        hh=hh<10?\"0\"+hh:\"\"+hh;\n        let mins=current_timestamp.getMinutes();\n        mins=mins<10?\"0\"+mins:\"\"+mins;\n        let ss=current_timestamp.getSeconds();\n        ss=ss<10?\"0\"+ss:\"\"+ss;\n        quizObj['start_time']=current_timestamp.getFullYear()+'-'+mm+'-'+\n        dd+'T'+hh+':'+mins+':'+ss;\n        quizObj['mins_remaining']=quizObj['duration_minutes'];\n        var reqBody=\"quizId=\"+encodeURIComponent(quizObj.id);\n            reqBody+='&startTime='+encodeURIComponent(quizObj.start_time);\n            reqBody+='&userId='+encodeURIComponent(this.state.loggedInUser);\n        fetch(`api/quizStart`, {\n          headers:{\n            'Accept':'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        })\n        .then(res=>res.json())\n        .then(\n          data=>{\n            console.log(data);\n            if(data.insertstatus=== \"ok\"){\n              quizObj['quizInstanceId']=data.quizInstanceId;\n              this.setState({startedQuiz:quizObj});\n              localStorage.setItem('startedQuiz', JSON.stringify(quizObj));\n            }\n            else{\n              alert('An error occurred in connecting to the server to start the quiz');\n            }\n          });\n      }\n    }\n    else{\n      alert('There is already a started quiz:\\r\\n'+\n             this.state.startedQuiz.description+\n            '\\r\\n Please submit this quiz to start a new quiz')\n    }\n     console.log(this.state.startedQuiz);\n  }\n\n  startedQuizSubmit(){\n    console.log(this.state.startedQuizAnswers);\n    console.log(this.state.startedQuiz);\n\n    var reqBody=\"quizId=\"+encodeURIComponent(this.state.startedQuiz.id);\n        reqBody+='&quizInstanceId='+encodeURIComponent(this.state.startedQuiz.quizInstanceId);\n        reqBody+='&answersObject='+encodeURIComponent(JSON.stringify(this.state.startedQuizAnswers));\n\n        fetch(`/api/quizAnwersSubmit`, {\n          headers:{\n            'Accept':'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        })\n        .then(res=>res.json())\n        .then(\n          data=>{\n            //console.log(data);\n            if(data.insertstatus=== \"ok\"){\n              localStorage.removeItem('startedQuiz');\n              localStorage.removeItem('startedQuizAnswers');\n              this.setState({startedQuiz:null, startedQuizAnswers:null});\n              alert('Quiz Submitted');\n            }\n          }\n        );\n  }\n\n  reviseQuizMinsRemaining(){\n    if(this.state.startedQuiz!==null){\n          const start_timestamp=Date.parse(this.state.startedQuiz.start_time);\n          var startTime=new Date();\n          startTime.setTime(start_timestamp);\n          const current_timestamp=Date.now();\n\n          const MsRemaining=start_timestamp+\n                            parseInt(this.state.startedQuiz.duration_minutes)*60*1000-current_timestamp;\n          //var mins_remaining = Math.round(((MsRemaining % 86400000) % 3600000) / 60000); // minutes\n          var mins_remaining= Math.round(MsRemaining/60000);\n          if(mins_remaining>0){\n            console.log(startTime);\n            console.log(mins_remaining);\n            const copied = Object.assign({}, this.state.startedQuiz);\n            copied['mins_remaining']=mins_remaining;\n            this.setState({startedQuiz:copied});\n            localStorage.setItem('startedQuiz', JSON.stringify(copied));\n         }\n         else{\n           this.startedQuizSubmit();\n         }\n    }\n  }\n\n\n\n  isQuizStarted(quizId){\n    if(this.state.startedQuiz!==null&&this.state.startedQuiz.id===quizId)\n        return true;\n    else\n        return false;\n  }\n\n  loadProblems(){\n    this.setState({spinner:true});\n    fetch(`/api/getProblems`, {\n      headers:{\n        'Accept':'application/json'\n      }\n    })\n    .then(res=>res.json())\n    .then(data=>{\n        this.setState({problemsArray: data, spinner: false});\n    })\n  }\n\n  setProblems(arr){\n    this.setState({problemsArray:arr});\n  }\n\n  loadQuizes(){\n    this.setState({spinner:true});\n    fetch(`/api/getQuizes`, {\n      headers:{\n        'Accept':'application/json'\n      }\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      //console.log(data);\n      this.setState({ quizesArray: data, spinner: false});\n    })\n  }\n\n  setQuizes(arr){\n    this.setState({quizesArray:arr});\n  }\n\n  loadUsers(){\n    this.setState({spinner:true});\n    fetch(`/api/getUsers`, {\n      headers:{\n        'Accept':'application/json'\n      }\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      this.setState({usersArray: data, spinner:false});\n    })\n  }\n\n  setUsers(arr){\n    this.setState({usersArray:arr});\n  }\n\n  showSpinner(){\n    this.setState({spinner:true});\n  }\n\n  hideSpinner(){\n    this.setState({spinner:false});\n  }\n\n  handleLoginSubmit(event){\n    if(this.state.userId===null\n        ||this.state.password===null\n        ||this.state.password.length===0\n        ||this.state.userId.length===0)\n    {\n      event.preventDefault();\n      this.setState({errorMessage: \"UserId/password cannot be empty\"})\n      return;\n    }\n    var reqBody=\"userId=\"+encodeURIComponent(this.state.userId);\n        reqBody+='&password='+encodeURIComponent(this.state.password);\n\n        fetch(`/api/login`, {\n          headers:{\n            'Accept':'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        })\n        .then(res=>res.json())\n        .then(\n          data=>{\n            console.log(data);\n            if(data.login===\"ok\"){\n              localStorage.setItem('loggedInUser', this.state.userId);\n              localStorage.setItem('admin', data.admin);\n              this.setState({errorMessage:null, loggedInUser: this.state.userId, admin: data.admin});\n            }\n            else{\n              this.setState({errorMessage: \"Login Failed: UserId/password Mismatch\"});\n            }\n          }\n        );\n    event.preventDefault();\n\n  }\n\n  userIdChange(e){\n    const newUserId=e.target.value;\n    this.setState({userId: newUserId});\n  }\n\n  passwordChange(e){\n    const newPassword=e.target.value;\n    this.setState({password: newPassword});\n  }\n\n  logoutUser(e){\n    //e.preventDefault();\n    let b=window.confirm('Are you sure you want to logout')\n    if(b===true){\n      if(this.state.startedQuiz!==null)\n         this.startedQuizSubmit();\n      localStorage.setItem('loggedInUser', '');\n      localStorage.setItem('admin', \"0\");\n      localStorage.removeItem('startedQuiz');\n      localStorage.removeItem('startedQuizAnswers');\n      this.setState({errorMessage:null, loggedInUser: '', admin:\"0\",\n                      startedQuiz:null, startedQuizAnswers:null});\n    }\n    else{\n      e.preventDefault();\n    }\n  }\n\n  setErrorMessage(errMsg){\n    this.setState({errorMessage:errMsg});\n  }\n\n\n    render(){\n      return (\n        <Router>\n          <div>\n            <Route path=\"/\" render={(props)=><Header\n                                                {...props}\n                                                userId={this.state.userId}\n                                                password={this.state.password}\n                                                errorMessage={this.state.errorMessage}\n                                                passwordChange={this.passwordChange}\n                                                userIdChange={this.userIdChange}\n                                                handleSubmit={this.handleLoginSubmit}\n                                                logoutUser={this.logoutUser}\n                                                loggedInUser={this.state.loggedInUser}\n                                                startedQuiz={this.state.startedQuiz}\n                                              />}\n            />\n            <Route path=\"/\" render={(props)=><DropdownMenuHover\n                                              {...props}\n                                               loggedInUser={this.state.loggedInUser}\n                                               setErrorMessage={this.setErrorMessage}\n                                              />\n                                    }\n             />\n             {\n               this.state.spinner===true?(<div id=\"spinner\" className=\"loadingContainer\"><div className=\"loading\"></div></div>):null\n             }\n            <Route exact path=\"/\" component={ImageSlider} />\n            <Route path=\"/problemsBrowse\" render={(props)=><ProblemsBrowse {...props}\n                                                            problemsArray={this.state.problemsArray}\n                                                            quizesArray={this.state.quizesArray}\n                                                            loadProblems={this.loadProblems}\n                                                            setProblems={this.setProblems}\n                                                            loadQuizes={this.loadQuizes}\n                                                            showSpinner={this.showSpinner}\n                                                            hideSpinner={this.hideSpinner}\n                                                            loggedInUser={this.state.loggedInUser}\n                                                            admin={this.state.admin}\n                                                            />\n                                                 }\n            />\n            <Route path=\"/problemInsert\" render={(props)=><ProblemInsert {...props}\n                                                           problemsArray={this.state.problemsArray}\n                                                           quizesArray={this.state.quizesArray}\n                                                           loadQuizes={this.loadQuizes}\n                                                           setProblems={this.setProblems}\n                                                           showSpinner={this.showSpinner}\n                                                           hideSpinner={this.hideSpinner}\n                                                           loggedInUser={this.state.loggedInUser}\n                                                          />\n                                                }\n            />\n            <Route path=\"/quizesBrowse\" render={(props)=><QuizesBrowse\n                                                          quizesArray={this.state.quizesArray}\n                                                          loadQuizes={this.loadQuizes}\n                                                        />\n                                               }\n             />\n            <Route path=\"/quizInsert\" render={(props)=><QuizInsert {...props}\n                                                        quizesArray={this.state.quizesArray}\n                                                        coursesArray={this.state.coursesArray}\n                                                        loadCourses={this.loadCourses}\n                                                        setQuizes={this.setQuizes}\n                                                        showSpinner={this.showSpinner}\n                                                        hideSpinner={this.hideSpinner}\n                                                        loggedInUser={this.state.loggedInUser}\n                                                       />\n                                             }\n            />\n            <Route path=\"/quizShowSelected/:id\" render={(props)=><QuizShowSelected {...props}\n                                                                  loadQuizes={this.loadQuizes}\n                                                                  quizesArray={this.state.quizesArray}\n                                                                  setQuizes={this.setQuizes}\n                                                                  loadCourses={this.loadCourses}\n                                                                  coursesArray={this.state.coursesArray}\n                                                                  showSpinner={this.showSpinner}\n                                                                  hideSpinner={this.hideSpinner}\n                                                                  loggedInUser={this.state.loggedInUser}\n                                                                  startQuiz={this.startQuiz}\n                                                                  admin={this.state.admin}\n                                                                  setErrorMessage={this.setErrorMessage}\n                                                                  isQuizStarted={this.isQuizStarted}\n                                                                  optionChange={this.startedQuizOptionChange}\n                                                                  submitQuiz={this.startedQuizSubmit}\n                                                                  startedQuizAnswers={this.state.startedQuizAnswers}\n                                                                 />\n                                                       }\n            />\n            <Route path=\"/usersBrowse\" render={(props)=><UsersBrowse {...props}\n                                                          usersArray={this.state.usersArray}\n                                                          loadUsers={this.loadUsers}\n                                                        />\n                                              }\n            />\n            <Route path=\"/userInsert\" render={(props)=><UserInsert {...props}\n                                                        usersArray={this.state.usersArray}\n                                                        setUsers={this.setUsers}\n                                                        showSpinner={this.showSpinner}\n                                                        hideSpinner={this.hideSpinner}\n                                                       />\n                                             }\n            />\n            <Route path=\"/UserShowSelected/:id\" render={(props)=><UserShowSelected {...props}\n                                                                  loadUsers={this.loadUsers}\n                                                                  usersArray={this.state.usersArray}\n                                                                  setUsers={this.setUsers}\n                                                                  showSpinner={this.showSpinner}\n                                                                  hideSpinner={this.hideSpinner}\n                                                                  loggedInUser={this.state.loggedInUser}\n                                                                  admin={this.state.admin}\n                                                                  setErrorMessage={this.setErrorMessage}\n                                                                 />\n                                                       }\n            />\n            <Route path=\"/coursesBrowse\" render={(props)=><CoursesBrowse\n                                                           coursesArray={this.state.coursesArray}\n                                                           loadCourses={this.loadCourses}\n                                                          />\n                                                }\n            />\n            <Route path=\"/courseInsert\" render={(props)=><CourseInsert {...props}\n                                                          coursesArray={this.state.coursesArray}\n                                                          setCourses={this.setCourses}\n                                                          showSpinner={this.showSpinner}\n                                                          hideSpinner={this.hideSpinner}\n                                                          loggedInUser={this.state.loggedInUser}\n                                                          />\n                                               }\n            />\n            <Route path=\"/CourseShowSelected/:id\" render={(props)=><CourseShowSelected {...props}\n                                                                    loadCourses={this.loadCourses}\n                                                                    coursesArray={this.state.coursesArray}\n                                                                    setCourses={this.setCourses}\n                                                                    showSpinner={this.showSpinner}\n                                                                    hideSpinner={this.hideSpinner}\n                                                                    loggedInUser={this.state.loggedInUser}\n                                                                    admin={this.state.admin}\n                                                                    setErrorMessage={this.setErrorMessage}\n                                                                  />\n                                                          }\n            />\n            {\n            this.state.loggedInUser===\"\" && <Route path=\"/errorLogin\" render={(props)=>(<div\n                                                           style={{color:\"red\", fontSize: \"1.5em\",\n                                                             paddingTop:\"1%\",\n                                                            textAlign:\"center\"}}>\n                                                            Error: User not Logged In!\n                                                       </div>\n                                                       )\n                                              }\n           />\n           }\n\n          </div>\n        </Router>\n      )\n    }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}