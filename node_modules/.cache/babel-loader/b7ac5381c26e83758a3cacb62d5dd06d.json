{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/CourseShowSelected.js\";\nimport React from 'react';\nimport CourseEditDialog from './CourseEditDialog';\nimport { Redirect } from 'react-router-dom';\nimport data from \"./data\";\nimport { showSpinner, hideSpinner, loadCourses, setCourses } from '../stores/appStoreActions';\n\nclass CourseShowSelected extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courseObj: {},\n      courseNameEdited: '',\n      courseDescriptionEdited: '',\n      quizesArray: [],\n      quizesArrayForEdit: [],\n      showEditCourseDialog: false,\n      icons: data.icons\n    };\n    this.handleEditCourseDialogDismiss = this.handleEditCourseDialogDismiss.bind(this);\n    this.editCourseHandler = this.editCourseHandler.bind(this);\n    this.descriptionChange = this.descriptionChange.bind(this);\n    this.nameChange = this.nameChange.bind(this);\n    this.saveUpdateHandler = this.saveUpdateHandler.bind(this);\n    this.removeQuizFromQuizesArray = this.removeQuizFromQuizesArray.bind(this);\n    this.addQuizToQuizesArray = this.addQuizToQuizesArray.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props.match;\n    let dispatch = this.props.dispatch;\n    showSpinner(dispatch);\n    var reqBody = \"courseId=\" + encodeURIComponent(params.id);\n    let coursePromise = fetch(`/api/getTheCourse`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    });\n    let quizesPromise = fetch(`/api/getQuizListForCourse`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    });\n    Promise.all([coursePromise, quizesPromise]).then(responses => {\n      Promise.all(responses.map(response => response.json())).then(jsons => {\n        jsons[0].courseId = params.id;\n        console.log(jsons);\n        this.setState({\n          courseObj: jsons[0],\n          courseNameEdited: jsons[0].name,\n          courseDescriptionEdited: jsons[0].description,\n          quizesArray: jsons[1],\n          quizesArrayForEdit: jsons[1]\n        });\n        hideSpinner(dispatch);\n      });\n    });\n  }\n\n  editCourseHandler(e) {\n    this.setState({\n      showEditCourseDialog: true\n    });\n  }\n\n  deleteCourseHandler(id) {\n    let dispatch = this.props.dispatch;\n    let globalState = this.props.state;\n    let b = window.confirm('Are you sure you want to delete');\n\n    if (b === true) {\n      showSpinner(dispatch);\n      var reqBody = \"id=\" + encodeURIComponent(id);\n      fetch(`/api/deleteCourse`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data => {\n        if (data.deletestatus === \"ok\") {\n          let coursesArrayCopy = globalState.coursesArray.filter(obj => obj.id !== id);\n          setCourses(coursesArrayCopy, dispatch);\n          hideSpinner(dispatch);\n          alert('Course deleted');\n          window.location.assign(\"https://\" + window.location.hostname + ':' + window.location.port + \"/coursesBrowse\");\n        }\n      });\n    } //end of if b==true\n\n  }\n\n  descriptionChange(e) {\n    this.setState({\n      courseDescriptionEdited: e.target.value\n    });\n  }\n\n  nameChange(e) {\n    this.setState({\n      courseNameEdited: e.target.value\n    });\n  }\n\n  handleEditCourseDialogDismiss(e) {\n    this.setState({\n      showEditCourseDialog: false,\n      courseNameEdited: this.state.courseObj.name,\n      courseDescriptionEdited: this.state.courseObj.description,\n      quizesArrayForEdit: this.state.quizesArray\n    });\n  }\n\n  saveUpdateHandler(e) {\n    let dispatch = this.props.dispatch;\n    let globalState = this.props.state;\n    showSpinner(dispatch);\n    const newCourseObj = Object.assign({}, this.state.courseObj);\n    newCourseObj.name = this.state.courseNameEdited;\n    newCourseObj.description = this.state.courseDescriptionEdited; //console.log(newCourseObj);\n\n    var reqBody = \"courseId=\" + encodeURIComponent(newCourseObj.courseId);\n    reqBody += '&name=' + encodeURIComponent(newCourseObj.name);\n    reqBody += '&description=' + encodeURIComponent(newCourseObj.description);\n    reqBody += '&quizesArray=' + encodeURIComponent(JSON.stringify(this.state.quizesArrayForEdit));\n    fetch(`/api/updateCourse`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    }).then(res => res.json()).then(data => {\n      if (data.updatestatus === \"ok\") {\n        loadCourses(dispatch);\n        let coursesArrayCopy = JSON.parse(JSON.stringify(globalState.coursesArray));\n        coursesArrayCopy.forEach(obj => {\n          if (obj.courseId === newCourseObj.courseId) {\n            obj.description = newCourseObj.description;\n            obj.name = newCourseObj.name;\n          }\n        });\n        setCourses(coursesArrayCopy, dispatch);\n        this.setState({\n          courseObj: newCourseObj,\n          quizesArray: this.state.quizesArrayForEdit,\n          showEditCourseDialog: false\n        });\n        hideSpinner(dispatch);\n        alert('Course updated');\n      }\n    });\n  }\n\n  removeQuizFromQuizesArray(e, quizId) {\n    let quizesArray = this.state.quizesArrayForEdit.filter(val => val.id !== quizId);\n    this.setState({\n      quizesArrayForEdit: quizesArray\n    }); //console.log(quizesArray);\n  }\n\n  addQuizToQuizesArray(e, quizObj) {\n    let quizesArray = [...this.state.quizesArrayForEdit];\n\n    if (quizesArray.filter(val => val.id === quizObj.id).length > 0) {\n      alert('Quiz redundant');\n    } else {\n      quizesArray.push(quizObj);\n      this.setState({\n        quizesArrayForEdit: quizesArray\n      });\n    }\n  }\n\n  render() {\n    {\n      /*if(this.props.loggedInUser===''){\n       return <Redirect to=\"/errorLogin\"/>\n      }*/\n    }\n    let globalState = this.props.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"HomeLink\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"homeIcon\",\n      src: this.state.icons.home,\n      alt: \"back to home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, \"Course Details\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }, this.state.courseObj.name), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 42\n      }\n    }, \"Description\"), \": \", this.state.courseObj.description, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 97\n      }\n    })), globalState.loggedInUser === this.state.courseObj.ownerId || globalState.admin === \"1\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"LeftButton\",\n      onClick: () => this.editCourseHandler(),\n      id: `e${this.state.courseObj.id}`,\n      value: \"Edit Course\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"LeftButton\",\n      onClick: () => this.deleteCourseHandler(this.state.courseObj.courseId),\n      id: `d${this.state.courseObj.id}`,\n      value: \"Delete Course\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, \" Creator\"), \": \", this.state.courseObj.ownerId, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 24\n      }\n    }, \"List of Quizes:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 46\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 51\n      }\n    }), this.state.quizesArray.map(obj => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: `https://${window.location.hostname}:${window.location.port}/quizShowSelected/${obj.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 22\n      }\n    }, obj.description), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 142\n      }\n    }))))), /*#__PURE__*/React.createElement(CourseEditDialog, {\n      objectForEdit: this.state.courseObj,\n      courseNameEdited: this.state.courseNameEdited,\n      courseDescriptionEdited: this.state.courseDescriptionEdited,\n      show: this.state.showEditCourseDialog,\n      descriptionChange: this.descriptionChange,\n      nameChange: this.nameChange,\n      handleDismiss: this.handleEditCourseDialogDismiss,\n      handleSubmit: this.saveUpdateHandler,\n      quizesArrayForEdit: this.state.quizesArrayForEdit,\n      removeQuizFromQuizesArray: this.removeQuizFromQuizesArray,\n      addQuizToQuizesArray: this.addQuizToQuizesArray,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default CourseShowSelected;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/CourseShowSelected.js"],"names":["React","CourseEditDialog","Redirect","data","showSpinner","hideSpinner","loadCourses","setCourses","CourseShowSelected","Component","constructor","props","state","courseObj","courseNameEdited","courseDescriptionEdited","quizesArray","quizesArrayForEdit","showEditCourseDialog","icons","handleEditCourseDialogDismiss","bind","editCourseHandler","descriptionChange","nameChange","saveUpdateHandler","removeQuizFromQuizesArray","addQuizToQuizesArray","componentDidMount","params","match","dispatch","reqBody","encodeURIComponent","id","coursePromise","fetch","headers","method","body","quizesPromise","Promise","all","then","responses","map","response","json","jsons","courseId","console","log","setState","name","description","e","deleteCourseHandler","globalState","b","window","confirm","res","deletestatus","coursesArrayCopy","coursesArray","filter","obj","alert","location","assign","hostname","port","target","value","newCourseObj","Object","JSON","stringify","updatestatus","parse","forEach","quizId","val","quizObj","length","push","render","home","textAlign","loggedInUser","ownerId","admin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CourseEditDialog from './CourseEditDialog';\nimport {  Redirect } from 'react-router-dom';\nimport data from \"./data\";\nimport {showSpinner, hideSpinner, loadCourses, setCourses} from '../stores/appStoreActions';\n\nclass CourseShowSelected extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      courseObj:{},\n      courseNameEdited:'',\n      courseDescriptionEdited:'',\n      quizesArray:[],\n      quizesArrayForEdit:[],\n      showEditCourseDialog:false,\n      icons: data.icons\n    }\n    this.handleEditCourseDialogDismiss=this.handleEditCourseDialogDismiss.bind(this);\n    this.editCourseHandler=this.editCourseHandler.bind(this);\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.nameChange=this.nameChange.bind(this);\n    this.saveUpdateHandler=this.saveUpdateHandler.bind(this);\n    this.removeQuizFromQuizesArray=this.removeQuizFromQuizesArray.bind(this);\n    this.addQuizToQuizesArray=this.addQuizToQuizesArray.bind(this);\n  }\n\n\n  componentDidMount(){\n    const {params}= this.props.match;\n    let dispatch=this.props.dispatch;\n\n    showSpinner(dispatch);\n    var reqBody=\"courseId=\"+encodeURIComponent(params.id);\n    let coursePromise=fetch(`/api/getTheCourse`, {\n      headers:{\n        'Accept':'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    });\n    let quizesPromise= fetch(`/api/getQuizListForCourse`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      });\n      Promise.all([coursePromise, quizesPromise]).then(\n        (responses)=>{\n          Promise.all(responses.map((response)=>response.json())).then(\n            (jsons)=>{\n              jsons[0].courseId=params.id;\n              console.log(jsons);\n              this.setState({\n                  courseObj: jsons[0],\n                  courseNameEdited:jsons[0].name,\n                  courseDescriptionEdited: jsons[0].description,\n                  quizesArray: jsons[1],\n                  quizesArrayForEdit: jsons[1]\n              })\n              hideSpinner(dispatch);\n            }\n          )\n        }\n      );\n  }\n\n\n  editCourseHandler(e){\n     this.setState({showEditCourseDialog:true});\n  }\n\n  deleteCourseHandler(id){\n    let dispatch=this.props.dispatch;\n    let globalState=this.props.state;\n\n    let b=window.confirm('Are you sure you want to delete')\n    if(b===true){\n      showSpinner(dispatch);\n        var reqBody=\"id=\"+encodeURIComponent(id);\n        fetch(`/api/deleteCourse`, {\n          headers:{\n            'Accept':'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            if(data.deletestatus===\"ok\"){\n                let coursesArrayCopy=globalState.coursesArray.filter((obj)=>obj.id!==id);\n                setCourses(coursesArrayCopy, dispatch);\n                hideSpinner(dispatch);\n                alert('Course deleted');\n                window.location.assign(\"https://\"+window.location.hostname+':'+window.location.port+\"/coursesBrowse\");\n            }\n        })\n    }//end of if b==true\n  }\n\n  descriptionChange(e){\n    this.setState({courseDescriptionEdited: e.target.value})\n  }\n\n  nameChange(e){\n    this.setState({courseNameEdited: e.target.value})\n  }\n\n  handleEditCourseDialogDismiss(e){\n     this.setState({showEditCourseDialog:false,\n       courseNameEdited:this.state.courseObj.name,\n       courseDescriptionEdited:this.state.courseObj.description,\n       quizesArrayForEdit: this.state.quizesArray\n     });\n  }\n\n  saveUpdateHandler(e){\n    let dispatch=this.props.dispatch;\n    let globalState=this.props.state;\n\n     showSpinner(dispatch);\n     const newCourseObj = Object.assign({}, this.state.courseObj)\n     newCourseObj.name=this.state.courseNameEdited;\n     newCourseObj.description=this.state.courseDescriptionEdited;\n     //console.log(newCourseObj);\n     var reqBody=\"courseId=\"+encodeURIComponent(newCourseObj.courseId);\n     reqBody+='&name='+encodeURIComponent(newCourseObj.name);\n     reqBody+='&description='+encodeURIComponent(newCourseObj.description);\n     reqBody+='&quizesArray='+encodeURIComponent(JSON.stringify(this.state.quizesArrayForEdit));\n\n     fetch(`/api/updateCourse`, {\n       headers:{\n         'Accept':'application/json',\n         'Content-type': 'application/x-www-form-urlencoded'\n       },\n       method: 'POST',\n       body: reqBody\n     })\n     .then(res=>res.json())\n     .then(data=>{\n         if(data.updatestatus===\"ok\"){\n             loadCourses(dispatch);\n             let coursesArrayCopy=JSON.parse(JSON.stringify(globalState.coursesArray));\n             coursesArrayCopy.forEach((obj)=>{\n               if(obj.courseId===newCourseObj.courseId){\n                  obj.description=newCourseObj.description;\n                  obj.name=newCourseObj.name;\n               }\n             });\n             setCourses(coursesArrayCopy, dispatch);\n             this.setState({courseObj: newCourseObj,\n               quizesArray: this.state.quizesArrayForEdit,\n               showEditCourseDialog:false});\n             hideSpinner(dispatch);\n             alert('Course updated');\n         }\n     })\n  }\n\n  removeQuizFromQuizesArray(e,quizId){\n    let quizesArray =  this.state.quizesArrayForEdit.filter(val=>val.id!==quizId)\n    this.setState({quizesArrayForEdit:quizesArray});\n    //console.log(quizesArray);\n  }\n\n  addQuizToQuizesArray(e,quizObj){\n    let quizesArray =  [...this.state.quizesArrayForEdit];\n    if(quizesArray.filter(val=>val.id===quizObj.id).length>0){\n      alert('Quiz redundant')\n    }\n    else {\n       quizesArray.push(quizObj);\n       this.setState({quizesArrayForEdit:quizesArray});\n    }\n  }\n\n  render(){\n    {/*if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }*/}\n    let globalState=this.props.state;\n    \n    return (\n      <div>\n          <a class=\"HomeLink\" href=\"/\">\n              <img className=\"homeIcon\" src={this.state.icons.home} alt=\"back to home\"/>\n              {/*back to home*/}\n          </a>\n          <div className=\"h1\">\n            Course Details\n          </div>\n      <div className=\"Panel\">\n          <br/>\n          <div className=\"h1\">\n              {this.state.courseObj.name}\n          </div>\n          <p style={{textAlign:'left'}}> <b>Description</b>: {this.state.courseObj.description} <br/></p>\n          {(globalState.loggedInUser===this.state.courseObj.ownerId||globalState.admin===\"1\")?\n          (<div>\n          <input type=\"button\" className=\"LeftButton\"\n            onClick={()=>this.editCourseHandler()}\n            id={`e${this.state.courseObj.id}`} value=\"Edit Course\"/><br/>\n          <input type=\"button\" className=\"LeftButton\"\n            onClick={()=>this.deleteCourseHandler(this.state.courseObj.courseId)}\n            id={`d${this.state.courseObj.id}`} value=\"Delete Course\"/>\n          </div>):null}\n          <br/>\n          <b> Creator</b>: {this.state.courseObj.ownerId}\n          <div class=\"row\">\n             <div><br/><b>List of Quizes:</b><br/><br/>\n             {\n               this.state.quizesArray.map(obj=>(\n                  <div>\n                     <a href={`https://${window.location.hostname}:${window.location.port}/quizShowSelected/${obj.id}`}>{obj.description}</a><br/>\n                  </div>\n                 )\n               )\n             }\n             </div>{/*end of LeftWindow*/}\n          </div>{/*end of row*/}\n          <CourseEditDialog\n                  objectForEdit={this.state.courseObj}\n                  courseNameEdited={this.state.courseNameEdited}\n                  courseDescriptionEdited={this.state.courseDescriptionEdited}\n                  show={this.state.showEditCourseDialog}\n                  descriptionChange={this.descriptionChange}\n                  nameChange={this.nameChange}\n                  handleDismiss={this.handleEditCourseDialogDismiss}\n                  handleSubmit={this.saveUpdateHandler}\n                  quizesArrayForEdit={this.state.quizesArrayForEdit}\n                  removeQuizFromQuizesArray={this.removeQuizFromQuizesArray}\n                  addQuizToQuizesArray={this.addQuizToQuizesArray}\n          />\n     </div>\n     </div>\n    )\n  }\n\n\n}\n\nexport default CourseShowSelected;\n"]},"metadata":{},"sourceType":"module"}