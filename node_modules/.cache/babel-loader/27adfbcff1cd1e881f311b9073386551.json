{"ast":null,"code":"import { decrypt } from './utils';\nexport async function retrieveProblems(state) {\n  let url = '/api/getProblems';\n\n  if (state.currentProblemsPage !== undefined && state.pageSize !== undefined) {\n    url += '?currentPage=' + state.currentProblemsPage + '&pageSize=' + state.pageSize;\n  }\n\n  let resObj = await fetch(url, {\n    headers: {\n      'Accept': 'application/json'\n    }\n  });\n  let jsonStr = await resObj.json();\n  let decStr = decrypt(jsonStr);\n  let jsonArray = JSON.parse(decStr); //console.log(jsonArray);\n\n  return jsonArray;\n}\nexport async function retrieveQuizes(state) {\n  let url = '/api/getQuizes';\n\n  if (state.currentQuizesPage !== undefined && state.pageSize !== undefined) {\n    url += '?currentPage=' + state.currentQuizesPage + '&pageSize=' + state.pageSize;\n  }\n\n  let resArray = await fetch(url, {\n    headers: {\n      'Accept': 'application/json'\n    }\n  });\n  let jsonArray = await resArray.json();\n  return jsonArray;\n}\nexport async function retrieveCourses(state) {\n  let url = '/api/getCourses';\n\n  if (state.currentCoursesPage !== undefined && state.pageSize !== undefined) {\n    url += '?currentPage=' + state.currentCoursesPage + '&pageSize=' + state.pageSize;\n  }\n\n  let resArray = await fetch(url, {\n    headers: {\n      'Accept': 'application/json'\n    }\n  });\n  let jsonArray = await resArray.json();\n  return jsonArray;\n}\nexport async function retrieveUsers(state) {\n  let url = '/api/getUsers';\n\n  if (state.currentUsersPage !== undefined && state.pageSize !== undefined) {\n    url += '?currentPage=' + state.currentUsersPage + '&pageSize=' + state.pageSize;\n  }\n\n  let resArray = await fetch(url, {\n    headers: {\n      'Accept': 'application/json'\n    }\n  });\n  let jsonArray = await resArray.json();\n  return jsonArray;\n}\nexport async function retrieveMeetings(state) {\n  let url = '/api/getMeetings';\n\n  if (state.currentMeetingsPage !== undefined && state.pageSize !== undefined) {\n    url += '?currentPage=' + state.currentMeetingsPage + '&pageSize=' + state.pageSize;\n  }\n\n  let resArray = await fetch(url, {\n    headers: {\n      'Accept': 'application/json'\n    }\n  });\n  let jsonArray = await resArray.json();\n  return jsonArray;\n}","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/utils/appUtils.js"],"names":["decrypt","retrieveProblems","state","url","currentProblemsPage","undefined","pageSize","resObj","fetch","headers","jsonStr","json","decStr","jsonArray","JSON","parse","retrieveQuizes","currentQuizesPage","resArray","retrieveCourses","currentCoursesPage","retrieveUsers","currentUsersPage","retrieveMeetings","currentMeetingsPage"],"mappings":"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","sourcesContent":["import {decrypt} from './utils';\n\nexport async function retrieveProblems(state){\n  let url='/api/getProblems';\n\n  if(state.currentProblemsPage!==undefined&&state.pageSize!==undefined){\n    url+='?currentPage='+state.currentProblemsPage+'&pageSize='+state.pageSize;\n  }\n\n  let resObj=await fetch(url, {\n    headers:{\n      'Accept':'application/json'\n    }\n  });\n\n  let jsonStr=await resObj.json();\n  let decStr=decrypt(jsonStr);\n  let jsonArray=JSON.parse(decStr);\n  //console.log(jsonArray);\n\n  return jsonArray;\n\n}\n\nexport async function retrieveQuizes(state){\n  let url='/api/getQuizes';\n\n  if(state.currentQuizesPage!==undefined&&state.pageSize!==undefined){\n    url+='?currentPage='+state.currentQuizesPage+'&pageSize='+state.pageSize;\n  }\n\n  let resArray=await fetch(url, {\n    headers:{\n      'Accept':'application/json'\n    }\n  });\n  let jsonArray=await resArray.json();\n  return jsonArray;\n}\n\nexport async function retrieveCourses(state){\n  let url='/api/getCourses';\n\n  if(state.currentCoursesPage!==undefined&&state.pageSize!==undefined){\n    url+='?currentPage='+state.currentCoursesPage+'&pageSize='+state.pageSize;\n  }\n\n  let resArray=await fetch(url, {\n    headers:{\n      'Accept':'application/json'\n    }\n  });\n  let jsonArray=await resArray.json();\n  return jsonArray;\n}\n\nexport async function retrieveUsers(state){\n  let url='/api/getUsers';\n\n  if(state.currentUsersPage!==undefined&&state.pageSize!==undefined){\n    url+='?currentPage='+state.currentUsersPage+'&pageSize='+state.pageSize;\n  }\n\n  let resArray=await fetch(url, {\n    headers:{\n      'Accept':'application/json'\n    }\n  });\n  let jsonArray=await resArray.json();\n  return jsonArray;\n}\n\nexport async function retrieveMeetings(state){\n  let url='/api/getMeetings';\n\n  if(state.currentMeetingsPage!==undefined&&state.pageSize!==undefined){\n    url+='?currentPage='+state.currentMeetingsPage+'&pageSize='+state.pageSize;\n  }\n\n  let resArray=await fetch(url, {\n    headers:{\n      'Accept':'application/json'\n    }\n  });\n  let jsonArray=await resArray.json();\n  return jsonArray;\n}\n"]},"metadata":{},"sourceType":"module"}