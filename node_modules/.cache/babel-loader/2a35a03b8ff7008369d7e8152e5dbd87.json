{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/QuizEditDialog.js\";\nimport React from 'react';\n\nclass QuizEditDialog extends React.Component {\n  componentDidMount() {\n    this.props.loadCourses();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchKey: '',\n      selectedCourseId: '',\n      objectsFiltered: [],\n      augmentedObjects: [],\n      augmentedObjectsPrior: [],\n      problemSearchKey: '',\n      problemSearchResults: []\n    };\n    this.checkStatic = this.checkStatic.bind(this);\n    this.searchBoxChange = this.searchBoxChange.bind(this);\n    this.objectsFilteredClick = this.objectsFilteredClick.bind(this);\n    this.problemSearchKeyChange = this.problemSearchKeyChange.bind(this); //this.handleSearchSubmit=this.handleSearchSubmit.bind(this);\n\n    this.checkStaticProblem = this.checkStaticProblem.bind(this);\n  }\n\n  problemSearchKeyChange(e) {\n    const strSearchKey = e.target.value;\n    var timer = setTimeout(() => {\n      this.checkStaticProblem(strSearchKey);\n    }, 1000);\n    this.setState({\n      problemSearchKey: strSearchKey\n    });\n  }\n\n  async checkStaticProblem(currentValue) {\n    if (currentValue === this.state.problemSearchKey && currentValue !== '') {\n      //console.log('static value'+currentValue);\n      var reqBody = \"searchKey=\" + encodeURIComponent(this.state.problemSearchKey);\n      let searchResults = await fetch(`/api/searchProblems`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      });\n      let searchJson = await searchResults.json();\n      console.log(searchJson);\n      this.setState({\n        problemSearchResults: searchJson\n      });\n    }\n  }\n\n  objectsFilteredClick(str, courseId, e) {\n    this.setState({\n      searchKey: str,\n      selectedCourseId: courseId,\n      objectsFiltered: [],\n      augmentedObjectsPrior: this.state.augmentedObjects,\n      augmentedObjects: []\n    });\n  }\n\n  searchBoxChange(e) {\n    let strSearchKey = e.target.value;\n    var timer = setTimeout(() => {\n      this.checkStatic(strSearchKey);\n    }, 1000);\n    const objectsFiltered = e.target.value !== '' ? this.props.coursesArray.filter(val => val.name.toUpperCase().startsWith(strSearchKey.toUpperCase())) : []; //const objectsFiltered=this.props.coursesArray.filter((val)=>val.description.toUpperCase().startsWith(e.target.value.toUpperCase()));\n\n    this.setState({\n      searchKey: e.target.value,\n      objectsFiltered: objectsFiltered\n    });\n  }\n\n  async checkStatic(currentValue) {\n    if (currentValue === this.state.searchKey && currentValue !== '') {\n      //console.log('static value'+currentValue);\n      var reqBody = \"searchKey=\" + encodeURIComponent(this.state.searchKey);\n      let searchResults = await fetch(`/api/searchCoursesForPrefix`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      });\n      let prefixSearchResults = await searchResults.json();\n      let augmentedObjects = [];\n      prefixSearchResults.forEach(ele => {\n        let len = this.state.objectsFiltered.filter(val => val.id === ele.id).length;\n        if (len <= 0) augmentedObjects.push(ele);\n      }); //console.log(augmentedObjects);\n\n      this.setState({\n        augmentedObjects: augmentedObjects\n      });\n    }\n  }\n\n  AddToCourseSubmit(e) {\n    let objectsFilteredAugmented = [...this.props.coursesArray];\n    objectsFilteredAugmented = objectsFilteredAugmented.concat(this.state.augmentedObjectsPrior);\n    const filteredArray = objectsFilteredAugmented.filter(val => val.name.toUpperCase() === this.state.searchKey.toUpperCase() && val.id === this.state.selectedCourseId);\n\n    if (filteredArray.length < 1) {\n      alert('Search key does not match any available  \\n\\t quiz description');\n    } else if (filteredArray.length > 1) {\n      alert('Search key matches multiple quizes\\' description!\\n\\t please choose another one');\n    } else {\n      console.log('filterd course object\\n' + JSON.stringify(filteredArray[0]));\n      this.props.addCourseToCoursesArraySubmit(filteredArray[0]);\n      this.setState({\n        searchKey: '',\n        selectedCourseId: ''\n      });\n    }\n  }\n\n  render() {\n    //console.log(this.props.coursesArray);\n    //console.log(this.props.objectForEdit);\n    const visibilityClassName = this.props.show ? \"simple-dialog-overlay simple-dialog-display-block\" : \"simple-dialog-overlay simple-dialog-display-none\";\n    let objectsFilteredAugmented = [...this.state.objectsFiltered];\n    objectsFilteredAugmented = objectsFilteredAugmented.concat(this.state.augmentedObjects);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: visibilityClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"simple-dialog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"x\",\n      onClick: this.props.handleDismiss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 10\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 12\n      }\n    }, \"Edit Profile\"), /*#__PURE__*/React.createElement(\"hr\", {\n      class: \"rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 12\n      }\n    }), \"Quiz Id:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"userId\",\n      style: {\n        marginLeft: '23px'\n      },\n      value: this.props.objectForEdit.id,\n      readonly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 32\n      }\n    }), \"Duration (minutes):\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 46\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"durationMinutes\",\n      style: {\n        marginLeft: '23px'\n      },\n      onChange: this.props.durationChange,\n      value: this.props.objectForEdit.duration_minutes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 32\n      }\n    }), \"Description:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"description\",\n      style: {\n        marginLeft: '25px',\n        width: '90%'\n      },\n      type: \"text\",\n      rows: \"10\",\n      onChange: this.props.descriptionChange,\n      value: this.props.objectForEdit.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 31\n      }\n    }), \"Courses:\", /*#__PURE__*/React.createElement(\"div\", {\n      id: \"AddToDialog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"searchBox\",\n      type: \"text\",\n      name: \"searchBox\",\n      value: this.state.searchKey,\n      onChange: this.searchBoxChange,\n      placeholder: \"Type first letters of quiz \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }, objectsFilteredAugmented.map(obj => /*#__PURE__*/React.createElement(\"div\", {\n      onClick: e => this.objectsFilteredClick(obj.name, obj.id, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 70\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 137\n      }\n    }, obj.name.substring(0, this.state.searchKey.length)), obj.name.substring(this.state.searchKey.length), \"(\", obj.id, \")\")))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add Course\",\n      onClick: e => this.AddToCourseSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 30\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 26\n      }\n    }, this.props.objectForEdit.coursesArray !== undefined ? this.props.objectForEdit.coursesArray.map(objQ => /*#__PURE__*/React.createElement(\"div\", {\n      id: objQ.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 34\n      }\n    }, \"|\", objQ.name, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"closeBtn\",\n      onClick: e => this.props.removeCourseFromCoursesArray(e, objQ.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 35\n      }\n    }, \"\\xD7\"), \"\\xA0|\")) : null), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 31\n      }\n    }), \"Creator:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"creator\",\n      style: {\n        marginLeft: '23px'\n      },\n      value: this.props.objectForEdit.instructorId,\n      readonly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 31\n      }\n    }), \"Quiz Problems:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 40\n      }\n    }), this.props.problemsArrayForEdit !== undefined ? this.props.problemsArrayForEdit.map(obj => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 32\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 32\n        }\n      }, \"Description\"), \":\", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"button\",\n        id: 'b' + obj.id,\n        value: \"remove from quiz\",\n        onClick: e => this.props.removeProblemFromProblemsArray(e, obj.id),\n        className: \"EditButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        id: 'P' + obj.id,\n        dangerouslySetInnerHTML: {\n          __html: obj.description\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 32\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 33\n        }\n      }, \"Author\"), \": \", obj.author_id);\n    }) : null, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 26\n      }\n    }, \"Add Problem\"), \":\", /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"problemSearchKey\",\n      style: {\n        width: '50%'\n      },\n      onChange: this.problemSearchKeyChange,\n      placeholder: \"type your search key here\",\n      value: this.state.problemSearchKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 32\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 27\n      }\n    }), this.state.problemSearchResults !== undefined && this.state.problemSearchResults.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '1.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 116\n      }\n    }, \"Search Results\") : null, this.state.problemSearchResults.map(obj => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: `par$,${obj.id}`,\n      className: \"probParent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      id: 'a' + obj.id,\n      value: \"add to quiz\",\n      onClick: e => this.props.addProblemToProblemsArray(e, obj),\n      className: \"EditButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 33\n      }\n    }, \"Problem Description: \"), /*#__PURE__*/React.createElement(\"a\", {\n      href: `./problemShowSelected/${obj.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: `problemDescription$,${obj.id}`,\n      dangerouslySetInnerHTML: {\n        __html: obj.description\n      },\n      className: \"Question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 33\n      }\n    }, \"Author: \"), /*#__PURE__*/React.createElement(\"a\", {\n      href: `http://${window.location.hostname}:${window.location.port}/userShowSelected/${obj.author_id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: `author$,${obj.id}`,\n      style: {\n        marginLeft: '30px'\n      },\n      className: \"Quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 35\n      }\n    }, obj.author_id)), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"hidden\",\n      id: `quizId$,'${obj.id}`,\n      value: obj.quiz_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      id: \"x\",\n      value: \"Save\",\n      style: {\n        width: '100px',\n        float: \"right\"\n      },\n      onClick: this.props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"x\",\n      style: {\n        width: '100px'\n      },\n      onClick: this.props.handleDismiss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 12\n      }\n    }, \"close\")));\n  }\n\n}\n\nexport default QuizEditDialog;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/QuizEditDialog.js"],"names":["React","QuizEditDialog","Component","componentDidMount","props","loadCourses","constructor","state","searchKey","selectedCourseId","objectsFiltered","augmentedObjects","augmentedObjectsPrior","problemSearchKey","problemSearchResults","checkStatic","bind","searchBoxChange","objectsFilteredClick","problemSearchKeyChange","checkStaticProblem","e","strSearchKey","target","value","timer","setTimeout","setState","currentValue","reqBody","encodeURIComponent","searchResults","fetch","headers","method","body","searchJson","json","console","log","str","courseId","coursesArray","filter","val","name","toUpperCase","startsWith","prefixSearchResults","forEach","ele","len","id","length","push","AddToCourseSubmit","objectsFilteredAugmented","concat","filteredArray","alert","JSON","stringify","addCourseToCoursesArraySubmit","render","visibilityClassName","show","handleDismiss","marginLeft","objectForEdit","durationChange","duration_minutes","width","descriptionChange","description","map","obj","substring","undefined","objQ","removeCourseFromCoursesArray","instructorId","problemsArrayForEdit","removeProblemFromProblemsArray","__html","author_id","textAlign","fontSize","addProblemToProblemsArray","window","location","hostname","port","quiz_id","float","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass QuizEditDialog extends React.Component{\n\n  componentDidMount(){\n    this.props.loadCourses();\n  }\n\n\n  constructor(props){\n    super(props);\n    this.state={\n      searchKey: '',\n      selectedCourseId:'',\n      objectsFiltered:[],\n      augmentedObjects:[],\n      augmentedObjectsPrior:[],\n      problemSearchKey:'',\n      problemSearchResults:[],\n    }\n\n    this.checkStatic=this.checkStatic.bind(this);\n    this.searchBoxChange=this.searchBoxChange.bind(this);\n    this.objectsFilteredClick=this.objectsFilteredClick.bind(this);\n    this.problemSearchKeyChange=this.problemSearchKeyChange.bind(this);\n    //this.handleSearchSubmit=this.handleSearchSubmit.bind(this);\n    this.checkStaticProblem=this.checkStaticProblem.bind(this);\n  }\n\n  problemSearchKeyChange(e){\n    const strSearchKey=e.target.value;\n    var timer = setTimeout(() => {this.checkStaticProblem(strSearchKey);}, 1000);\n    this.setState({problemSearchKey: strSearchKey});\n  }\n\n  async checkStaticProblem(currentValue){\n    if(currentValue===this.state.problemSearchKey&&currentValue!==''){\n      //console.log('static value'+currentValue);\n      var reqBody=\"searchKey=\"+encodeURIComponent(this.state.problemSearchKey);\n      let searchResults=await fetch(`/api/searchProblems`, {\n              headers:{\n                'Accept':'application/json',\n                'Content-type': 'application/x-www-form-urlencoded'\n              },\n              method: 'POST',\n              body: reqBody\n            });\n      let searchJson=await searchResults.json();\n      console.log(searchJson);\n      this.setState({problemSearchResults:searchJson});\n    }\n  }\n\n  objectsFilteredClick(str, courseId, e){\n    this.setState({searchKey: str, selectedCourseId: courseId, objectsFiltered: [],\n        augmentedObjectsPrior: this.state.augmentedObjects, augmentedObjects:[]});\n  }\n\n\n\n  searchBoxChange(e){\n    let strSearchKey=e.target.value;\n    var timer = setTimeout(() => {this.checkStatic(strSearchKey);}, 1000);\n    const objectsFiltered=e.target.value!==''?this.props.coursesArray.filter((val)=>val.name.toUpperCase().startsWith(strSearchKey.toUpperCase())):[];\n    //const objectsFiltered=this.props.coursesArray.filter((val)=>val.description.toUpperCase().startsWith(e.target.value.toUpperCase()));\n    this.setState({searchKey: e.target.value, objectsFiltered: objectsFiltered});\n  }\n\n  async checkStatic(currentValue){\n    if(currentValue===this.state.searchKey && currentValue!==''){\n      //console.log('static value'+currentValue);\n      var reqBody=\"searchKey=\"+encodeURIComponent(this.state.searchKey);\n      let searchResults=await fetch(`/api/searchCoursesForPrefix`, {\n              headers:{\n                'Accept':'application/json',\n                'Content-type': 'application/x-www-form-urlencoded'\n              },\n              method: 'POST',\n              body: reqBody\n            });\n      let prefixSearchResults=await searchResults.json();\n\n      let augmentedObjects=[];\n      prefixSearchResults.forEach(ele=>{\n        let len=this.state.objectsFiltered.filter(val=>val.id===ele.id).length;\n        if(len<=0)\n          augmentedObjects.push(ele);\n      })\n      //console.log(augmentedObjects);\n      this.setState({augmentedObjects:augmentedObjects});\n    }\n  }\n\n  AddToCourseSubmit(e){\n        let objectsFilteredAugmented=[...this.props.coursesArray];\n        objectsFilteredAugmented=objectsFilteredAugmented.concat(this.state.augmentedObjectsPrior);\n\n        const filteredArray=objectsFilteredAugmented.filter((val)=>val.name.toUpperCase()===this.state.searchKey.toUpperCase()&&val.id===this.state.selectedCourseId);\n        if(filteredArray.length<1){\n          alert('Search key does not match any available  \\n\\t quiz description');\n        }\n        else if(filteredArray.length>1){\n          alert('Search key matches multiple quizes\\' description!\\n\\t please choose another one');\n        }\n        else {\n          console.log('filterd course object\\n'+JSON.stringify(filteredArray[0]));\n          this.props.addCourseToCoursesArraySubmit(filteredArray[0]);\n          this.setState({searchKey:'', selectedCourseId:''})\n        }\n  }\n\n\n  render(){\n    //console.log(this.props.coursesArray);\n    //console.log(this.props.objectForEdit);\n    const visibilityClassName=this.props.show\n    ? \"simple-dialog-overlay simple-dialog-display-block\"\n    :\"simple-dialog-overlay simple-dialog-display-none\";\n\n    let objectsFilteredAugmented=[...this.state.objectsFiltered];\n    objectsFilteredAugmented=objectsFilteredAugmented.concat(this.state.augmentedObjects);\n\n    return (\n      <div className={visibilityClassName}>\n         <div className=\"simple-dialog\">\n         <button id = \"x\" onClick={this.props.handleDismiss}>\n          X\n         </button>\n           <h2>Edit Profile</h2>\n           <hr class=\"rounded\"/>\n                          Quiz Id:<br/>\n                          <input type=\"text\" id=\"userId\" style={{marginLeft:'23px'}}\n                          value={this.props.objectForEdit.id}\n                          readonly></input>\n                          <br/><br/>\n                          Duration (minutes):<br/>\n                          <input type=\"text\" id=\"durationMinutes\" style={{marginLeft:'23px'}}\n                          onChange={this.props.durationChange}\n                          value={this.props.objectForEdit.duration_minutes}></input>\n                          {/*<select id=\"courseId\" onChange={this.props.selectChange}\n                          style={{marginLeft:'23px'}}\n                          name=\"courseId\" required=\"true\">\n                              <option value=\"null\">UnAssigned</option>\n                          {\n                              this.props.coursesArray.map(objQ=>(\n                                <option value={objQ.id}>{objQ.name}</option>\n                                )\n                              )\n                          }\n                          </select>*/}\n                          <br/><br/>\n                         Description:<br/>\n                         <textarea id=\"description\" style={{marginLeft:'25px', width:'90%'}} type=\"text\" rows=\"10\"\n                          onChange={this.props.descriptionChange}\n                         value={this.props.objectForEdit.description}></textarea>\n                         <br/><br/>\n                         Courses:\n                         <div id=\"AddToDialog\">\n                             <div className=\"autocomplete\">\n                                <input id=\"searchBox\" type=\"text\" name=\"searchBox\"\n                                value={this.state.searchKey}\n                                onChange={this.searchBoxChange} placeholder=\"Type first letters of quiz \"/>\n                                <div className=\"autocomplete-items\">\n                                {\n                                  objectsFilteredAugmented.map(obj=>(<div onClick={(e)=>this.objectsFilteredClick(obj.name, obj.id, e)}><strong>{obj.name.substring(0,this.state.searchKey.length)}</strong>{obj.name.substring(this.state.searchKey.length)}({obj.id})</div>))\n                                }\n                                </div>\n                             </div>\n                             <input type=\"submit\" value=\"Add Course\" onClick={(e)=>this.AddToCourseSubmit(e)}/>\n                         </div>\n                         <br/>\n                         <div>\n                         {\n                             this.props.objectForEdit.coursesArray!==undefined?\n                             ( this.props.objectForEdit.coursesArray.map(objQ=>(\n                                 <div   id={objQ.id} >|{objQ.name}\n                                  <span className=\"closeBtn\"\n                                    onClick={(e)=>this.props.removeCourseFromCoursesArray(e, objQ.id)}>&times;</span>&nbsp;|\n                                 </div>\n                                 )\n                               )\n                             ):null\n                         }\n                         </div>\n                         <br/><br/>\n                         Creator:<br/>\n                         <input type=\"text\" id=\"creator\" style={{marginLeft:'23px'}}\n                         value={this.props.objectForEdit.instructorId}\n                         readonly></input>\n                         <br/><br/>\n                         Quiz Problems:<br/>\n                         {\n                           this.props.problemsArrayForEdit!==undefined?\n                           ( this.props.problemsArrayForEdit.map(obj=>{\n                             return (\n                               <>\n                               <hr/>\n                               <b>Description</b>:\n                                <input type=\"button\" id={'b'+obj.id} value=\"remove from quiz\" onClick={(e)=>this.props.removeProblemFromProblemsArray(e,obj.id)} className=\"EditButton\"/>\n                               <span id={'P'+obj.id}\n                                dangerouslySetInnerHTML={{\n                                  __html: obj.description\n                                }}/>\n                                <b>Author</b>: {obj.author_id}\n                               </>)\n                           })\n                           ):null\n                         }\n                         <hr/>\n                         <br/><br/>\n                         <b>Add Problem</b>:\n                         <div style={{textAlign: 'center'}}>\n                               <input type=\"text\" id=\"problemSearchKey\" style={{width:'50%'}}\n                               onChange={this.problemSearchKeyChange}\n                               placeholder=\"type your search key here\"\n                               value={this.state.problemSearchKey}></input>\n                          </div>\n                          <br/>\n                          {\n                            this.state.problemSearchResults!==undefined&&this.state.problemSearchResults.length>0?(<div style={{textAlign: 'center', fontSize: '1.5em'}}>Search Results</div>):null\n                          }\n                          {\n                           this.state.problemSearchResults.map(obj=>(\n                            <>\n                            <div id={`par$,${obj.id}`} className=\"probParent\">\n                              <input type=\"button\" id={'a'+obj.id} value=\"add to quiz\" onClick={(e)=>this.props.addProblemToProblemsArray(e,obj)} className=\"EditButton\"/>\n                                <b>Problem Description: </b>\n                                <a href={`./problemShowSelected/${obj.id}`}>\n                                    <div id={`problemDescription$,${obj.id}`}\n                                    dangerouslySetInnerHTML={{__html: obj.description}}\n                                    className=\"Question\"></div>\n                                </a>\n                                <br/>\n                                {/*<b>Solution: </b>\n                                <a href={`./problemShowSelected/${obj.id}`}>\n                                    <div id={`solution$,${obj.id}`}\n                                    dangerouslySetInnerHTML={{__html: obj.solution}}\n                                    className=\"Question\"></div>\n                                </a>\n                                 <br/>\n                                <b>Source: </b> <a target=\"_blank\" href={obj.source!==null?\"https://\"+obj.source:null}>{obj.source}</a>\n                                <br/>*/}\n                                <b>Author: </b>\n                                <a href={`http://${window.location.hostname}:${window.location.port}/userShowSelected/${obj.author_id}`}>\n                                  <div id={`author$,${obj.id}`} style={{marginLeft:'30px'}} className=\"Quiz\">\n                                  {obj.author_id}\n                                  </div>\n                                </a>\n                                <input type=\"hidden\" id={`quizId$,'${obj.id}`} value={obj.quiz_id}/>\n                              </div>\n                              <hr />\n                              </>\n                              )\n                            )\n                          }\n            <br/><br/><br/><br/><br/><br/>\n           <input type=\"button\" id=\"x\" value=\"Save\" style={{width:'100px', float: \"right\"}} onClick={this.props.handleSubmit}/>\n           <br/><br/>\n           <button id=\"x\" style={{width:'100px'}}\n             onClick={this.props.handleDismiss}>close\n           </button>\n         </div>\n    </div>)\n  }\n}\n\nexport default QuizEditDialog;\n"]},"metadata":{},"sourceType":"module"}