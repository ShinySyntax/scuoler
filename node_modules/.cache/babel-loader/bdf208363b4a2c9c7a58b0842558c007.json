{"ast":null,"code":";\n\n(function (root, factory, undef) {\n  if (typeof exports === \"object\") {\n    // CommonJS\n    module.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD\n    define([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n  } else {\n    // Global (browser)\n    factory(root.CryptoJS);\n  }\n})(this, function (CryptoJS) {\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_x64 = C.x64;\n    var X64Word = C_x64.Word;\n    var X64WordArray = C_x64.WordArray;\n    var C_algo = C.algo;\n    var SHA512 = C_algo.SHA512;\n    /**\n     * SHA-384 hash algorithm.\n     */\n\n    var SHA384 = C_algo.SHA384 = SHA512.extend({\n      _doReset: function () {\n        this._hash = new X64WordArray.init([new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507), new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939), new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511), new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)]);\n      },\n      _doFinalize: function () {\n        var hash = SHA512._doFinalize.call(this);\n\n        hash.sigBytes -= 16;\n        return hash;\n      }\n    });\n    /**\n     * Shortcut function to the hasher's object interface.\n     *\n     * @param {WordArray|string} message The message to hash.\n     *\n     * @return {WordArray} The hash.\n     *\n     * @static\n     *\n     * @example\n     *\n     *     var hash = CryptoJS.SHA384('message');\n     *     var hash = CryptoJS.SHA384(wordArray);\n     */\n\n    C.SHA384 = SHA512._createHelper(SHA384);\n    /**\n     * Shortcut function to the HMAC's object interface.\n     *\n     * @param {WordArray|string} message The message to hash.\n     * @param {WordArray|string} key The secret key.\n     *\n     * @return {WordArray} The HMAC.\n     *\n     * @static\n     *\n     * @example\n     *\n     *     var hmac = CryptoJS.HmacSHA384(message, key);\n     */\n\n    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n  })();\n\n  return CryptoJS.SHA384;\n});","map":{"version":3,"sources":["/home/mathew/javascript/ischools/node_modules/crypto-js/sha384.js"],"names":["root","factory","undef","exports","module","require","define","amd","CryptoJS","C","C_x64","x64","X64Word","Word","X64WordArray","WordArray","C_algo","algo","SHA512","SHA384","extend","_doReset","_hash","init","_doFinalize","hash","call","sigBytes","_createHelper","HmacSHA384","_createHmacHelper"],"mappings":"AAAA;;AAAE,WAAUA,IAAV,EAAgBC,OAAhB,EAAyBC,KAAzB,EAAgC;AACjC,MAAI,OAAOC,OAAP,KAAmB,QAAvB,EAAiC;AAChC;AACAC,IAAAA,MAAM,CAACD,OAAP,GAAiBA,OAAO,GAAGF,OAAO,CAACI,OAAO,CAAC,QAAD,CAAR,EAAoBA,OAAO,CAAC,YAAD,CAA3B,EAA2CA,OAAO,CAAC,UAAD,CAAlD,CAAlC;AACA,GAHD,MAIK,IAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AACpD;AACAD,IAAAA,MAAM,CAAC,CAAC,QAAD,EAAW,YAAX,EAAyB,UAAzB,CAAD,EAAuCL,OAAvC,CAAN;AACA,GAHI,MAIA;AACJ;AACAA,IAAAA,OAAO,CAACD,IAAI,CAACQ,QAAN,CAAP;AACA;AACD,CAbC,EAaA,IAbA,EAaM,UAAUA,QAAV,EAAoB;AAE1B,eAAY;AACT;AACA,QAAIC,CAAC,GAAGD,QAAR;AACA,QAAIE,KAAK,GAAGD,CAAC,CAACE,GAAd;AACA,QAAIC,OAAO,GAAGF,KAAK,CAACG,IAApB;AACA,QAAIC,YAAY,GAAGJ,KAAK,CAACK,SAAzB;AACA,QAAIC,MAAM,GAAGP,CAAC,CAACQ,IAAf;AACA,QAAIC,MAAM,GAAGF,MAAM,CAACE,MAApB;AAEA;;;;AAGA,QAAIC,MAAM,GAAGH,MAAM,CAACG,MAAP,GAAgBD,MAAM,CAACE,MAAP,CAAc;AACvCC,MAAAA,QAAQ,EAAE,YAAY;AAClB,aAAKC,KAAL,GAAa,IAAIR,YAAY,CAACS,IAAjB,CAAsB,CAC/B,IAAIX,OAAO,CAACW,IAAZ,CAAiB,UAAjB,EAA6B,UAA7B,CAD+B,EACW,IAAIX,OAAO,CAACW,IAAZ,CAAiB,UAAjB,EAA6B,UAA7B,CADX,EAE/B,IAAIX,OAAO,CAACW,IAAZ,CAAiB,UAAjB,EAA6B,UAA7B,CAF+B,EAEW,IAAIX,OAAO,CAACW,IAAZ,CAAiB,UAAjB,EAA6B,UAA7B,CAFX,EAG/B,IAAIX,OAAO,CAACW,IAAZ,CAAiB,UAAjB,EAA6B,UAA7B,CAH+B,EAGW,IAAIX,OAAO,CAACW,IAAZ,CAAiB,UAAjB,EAA6B,UAA7B,CAHX,EAI/B,IAAIX,OAAO,CAACW,IAAZ,CAAiB,UAAjB,EAA6B,UAA7B,CAJ+B,EAIW,IAAIX,OAAO,CAACW,IAAZ,CAAiB,UAAjB,EAA6B,UAA7B,CAJX,CAAtB,CAAb;AAMH,OARsC;AAUvCC,MAAAA,WAAW,EAAE,YAAY;AACrB,YAAIC,IAAI,GAAGP,MAAM,CAACM,WAAP,CAAmBE,IAAnB,CAAwB,IAAxB,CAAX;;AAEAD,QAAAA,IAAI,CAACE,QAAL,IAAiB,EAAjB;AAEA,eAAOF,IAAP;AACH;AAhBsC,KAAd,CAA7B;AAmBA;;;;;;;;;;;;;;;AAcAhB,IAAAA,CAAC,CAACU,MAAF,GAAWD,MAAM,CAACU,aAAP,CAAqBT,MAArB,CAAX;AAEA;;;;;;;;;;;;;;;AAcAV,IAAAA,CAAC,CAACoB,UAAF,GAAeX,MAAM,CAACY,iBAAP,CAAyBX,MAAzB,CAAf;AACH,GA9DA,GAAD;;AAiEA,SAAOX,QAAQ,CAACW,MAAhB;AAEA,CAlFC,CAAD","sourcesContent":[";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));"]},"metadata":{},"sourceType":"script"}