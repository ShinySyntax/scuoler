{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/QuizEditDialog.js\";\nimport React from 'react';\n\nclass QuizEditDialog extends React.Component {\n  componentDidMount() {\n    this.props.loadCourses();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchKey: '',\n      selectedCourseId: '',\n      objectsFiltered: [],\n      augmentedObjects: [],\n      augmentedObjectsPrior: []\n    };\n    this.checkStatic = this.checkStatic.bind(this);\n    this.searchBoxChange = this.searchBoxChange.bind(this);\n    this.objectsFilteredClick = this.objectsFilteredClick.bind(this);\n  }\n\n  objectsFilteredClick(str, courseId, e) {\n    this.setState({\n      searchKey: str,\n      selectedCourseId: courseId,\n      objectsFiltered: [],\n      augmentedObjectsPrior: this.state.augmentedObjects,\n      augmentedObjects: []\n    });\n  }\n\n  searchBoxChange(e) {\n    let strSearchKey = e.target.value;\n    var timer = setTimeout(() => {\n      this.checkStatic(strSearchKey);\n    }, 1000);\n    const objectsFiltered = e.target.value !== '' ? this.props.coursesArray.filter(val => val.name.toUpperCase().startsWith(strSearchKey.toUpperCase())) : []; //const objectsFiltered=this.props.coursesArray.filter((val)=>val.description.toUpperCase().startsWith(e.target.value.toUpperCase()));\n\n    this.setState({\n      searchKey: e.target.value,\n      objectsFiltered: objectsFiltered\n    });\n  }\n\n  async checkStatic(currentValue) {\n    if (currentValue === this.state.searchKey && currentValue !== '') {\n      //console.log('static value'+currentValue);\n      var reqBody = \"searchKey=\" + encodeURIComponent(this.state.searchKey);\n      let searchResults = await fetch(`/api/searchCoursesForPrefix`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      });\n      let prefixSearchResults = await searchResults.json();\n      let augmentedObjects = [];\n      prefixSearchResults.forEach(ele => {\n        let len = this.state.objectsFiltered.filter(val => val.id === ele.id).length;\n        if (len <= 0) augmentedObjects.push(ele);\n      }); //console.log(augmentedObjects);\n\n      this.setState({\n        augmentedObjects: augmentedObjects\n      });\n    }\n  }\n\n  AddToCourseSubmit(e) {\n    let objectsFilteredAugmented = [...this.props.coursesArray];\n    objectsFilteredAugmented = objectsFilteredAugmented.concat(this.state.augmentedObjectsPrior);\n    const filteredArray = objectsFilteredAugmented.filter(val => val.name.toUpperCase() === this.state.searchKey.toUpperCase() && val.id === this.state.selectedCourseId);\n\n    if (filteredArray.length < 1) {\n      alert('Search key does not match any available  \\n\\t quiz description');\n    } else if (filteredArray.length > 1) {\n      alert('Search key matches multiple quizes\\' description!\\n\\t please choose another one');\n    } else {\n      console.log('filterd course object\\n' + JSON.stringify(filteredArray[0]));\n      this.props.addCourseToCoursesArraySubmit(filteredArray[0]);\n      this.setState({\n        searchKey: '',\n        selectedCourseId: ''\n      });\n    }\n  }\n\n  render() {\n    //console.log(this.props.coursesArray);\n    //console.log(this.props.objectForEdit);\n    const visibilityClassName = this.props.show ? \"simple-dialog-overlay simple-dialog-display-block\" : \"simple-dialog-overlay simple-dialog-display-none\";\n    let objectsFilteredAugmented = [...this.state.objectsFiltered];\n    objectsFilteredAugmented = objectsFilteredAugmented.concat(this.state.augmentedObjects);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: visibilityClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"simple-dialog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"x\",\n      onClick: this.props.handleDismiss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }\n    }, \"Edit Profile\"), /*#__PURE__*/React.createElement(\"hr\", {\n      class: \"rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 12\n      }\n    }), \"Quiz Id:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"userId\",\n      style: {\n        marginLeft: '23px'\n      },\n      value: this.props.objectForEdit.id,\n      readonly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 32\n      }\n    }), \"Duration (minutes):\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 46\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"durationMinutes\",\n      style: {\n        marginLeft: '23px'\n      },\n      onChange: this.props.durationChange,\n      value: this.props.objectForEdit.duration_minutes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 32\n      }\n    }), \"Description:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"description\",\n      style: {\n        marginLeft: '25px',\n        width: '90%'\n      },\n      type: \"text\",\n      rows: \"10\",\n      onChange: this.props.descriptionChange,\n      value: this.props.objectForEdit.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 31\n      }\n    }), \"Courses:\", /*#__PURE__*/React.createElement(\"div\", {\n      id: \"AddToDialog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"searchBox\",\n      type: \"text\",\n      name: \"searchBox\",\n      value: this.state.searchKey,\n      onChange: this.searchBoxChange,\n      placeholder: \"Type first letters of quiz \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, objectsFilteredAugmented.map(obj => /*#__PURE__*/React.createElement(\"div\", {\n      onClick: e => this.objectsFilteredClick(obj.name, obj.id, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 70\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 137\n      }\n    }, obj.name.substring(0, this.state.searchKey.length)), obj.name.substring(this.state.searchKey.length), \"(\", obj.id, \")\")))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add Course\",\n      onClick: e => this.AddToCourseSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 30\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 26\n      }\n    }, this.props.objectForEdit.coursesArray !== undefined ? this.props.objectForEdit.coursesArray.map(objQ => /*#__PURE__*/React.createElement(\"div\", {\n      id: objQ.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 34\n      }\n    }, \"|\", objQ.name, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"closeBtn\",\n      onClick: e => this.props.removeCourseFromCoursesArray(e, objQ.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 35\n      }\n    }, \"\\xD7\"), \"\\xA0|\")) : null), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 31\n      }\n    }), \"Creator:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"creator\",\n      style: {\n        marginLeft: '23px'\n      },\n      value: this.props.objectForEdit.instructorId,\n      readonly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 31\n      }\n    }), \"Quiz Problems:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 40\n      }\n    }), this.props.problemsArray !== undefined ? this.props.problemsArray.map(obj => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 32\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: 'P' + obj.id,\n        dangerouslySetInnerHTML: {\n          __html: obj.description\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 32\n        }\n      }));\n    }) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      id: \"x\",\n      value: \"Save\",\n      style: {\n        width: '100px',\n        float: \"right\"\n      },\n      onClick: this.props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"x\",\n      style: {\n        width: '100px'\n      },\n      onClick: this.props.handleDismiss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 12\n      }\n    }, \"close\")));\n  }\n\n}\n\nexport default QuizEditDialog;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/QuizEditDialog.js"],"names":["React","QuizEditDialog","Component","componentDidMount","props","loadCourses","constructor","state","searchKey","selectedCourseId","objectsFiltered","augmentedObjects","augmentedObjectsPrior","checkStatic","bind","searchBoxChange","objectsFilteredClick","str","courseId","e","setState","strSearchKey","target","value","timer","setTimeout","coursesArray","filter","val","name","toUpperCase","startsWith","currentValue","reqBody","encodeURIComponent","searchResults","fetch","headers","method","body","prefixSearchResults","json","forEach","ele","len","id","length","push","AddToCourseSubmit","objectsFilteredAugmented","concat","filteredArray","alert","console","log","JSON","stringify","addCourseToCoursesArraySubmit","render","visibilityClassName","show","handleDismiss","marginLeft","objectForEdit","durationChange","duration_minutes","width","descriptionChange","description","map","obj","substring","undefined","objQ","removeCourseFromCoursesArray","instructorId","problemsArray","__html","float","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass QuizEditDialog extends React.Component{\n\n  componentDidMount(){\n    this.props.loadCourses();\n  }\n\n\n  constructor(props){\n    super(props);\n    this.state={\n      searchKey: '',\n      selectedCourseId:'',\n      objectsFiltered:[],\n      augmentedObjects:[],\n      augmentedObjectsPrior:[]\n    }\n\n    this.checkStatic=this.checkStatic.bind(this);\n    this.searchBoxChange=this.searchBoxChange.bind(this);\n    this.objectsFilteredClick=this.objectsFilteredClick.bind(this);\n  }\n\n  objectsFilteredClick(str, courseId, e){\n    this.setState({searchKey: str, selectedCourseId: courseId, objectsFiltered: [],\n        augmentedObjectsPrior: this.state.augmentedObjects, augmentedObjects:[]});\n  }\n\n\n\n  searchBoxChange(e){\n    let strSearchKey=e.target.value;\n    var timer = setTimeout(() => {this.checkStatic(strSearchKey);}, 1000);\n    const objectsFiltered=e.target.value!==''?this.props.coursesArray.filter((val)=>val.name.toUpperCase().startsWith(strSearchKey.toUpperCase())):[];\n    //const objectsFiltered=this.props.coursesArray.filter((val)=>val.description.toUpperCase().startsWith(e.target.value.toUpperCase()));\n    this.setState({searchKey: e.target.value, objectsFiltered: objectsFiltered});\n  }\n\n  async checkStatic(currentValue){\n    if(currentValue===this.state.searchKey && currentValue!==''){\n      //console.log('static value'+currentValue);\n      var reqBody=\"searchKey=\"+encodeURIComponent(this.state.searchKey);\n      let searchResults=await fetch(`/api/searchCoursesForPrefix`, {\n              headers:{\n                'Accept':'application/json',\n                'Content-type': 'application/x-www-form-urlencoded'\n              },\n              method: 'POST',\n              body: reqBody\n            });\n      let prefixSearchResults=await searchResults.json();\n\n      let augmentedObjects=[];\n      prefixSearchResults.forEach(ele=>{\n        let len=this.state.objectsFiltered.filter(val=>val.id===ele.id).length;\n        if(len<=0)\n          augmentedObjects.push(ele);\n      })\n      //console.log(augmentedObjects);\n      this.setState({augmentedObjects:augmentedObjects});\n    }\n  }\n\n  AddToCourseSubmit(e){\n        let objectsFilteredAugmented=[...this.props.coursesArray];\n        objectsFilteredAugmented=objectsFilteredAugmented.concat(this.state.augmentedObjectsPrior);\n\n        const filteredArray=objectsFilteredAugmented.filter((val)=>val.name.toUpperCase()===this.state.searchKey.toUpperCase()&&val.id===this.state.selectedCourseId);\n        if(filteredArray.length<1){\n          alert('Search key does not match any available  \\n\\t quiz description');\n        }\n        else if(filteredArray.length>1){\n          alert('Search key matches multiple quizes\\' description!\\n\\t please choose another one');\n        }\n        else {\n          console.log('filterd course object\\n'+JSON.stringify(filteredArray[0]));\n          this.props.addCourseToCoursesArraySubmit(filteredArray[0]);\n          this.setState({searchKey:'', selectedCourseId:''})\n        }\n  }\n\n\n  render(){\n    //console.log(this.props.coursesArray);\n    //console.log(this.props.objectForEdit);\n    const visibilityClassName=this.props.show\n    ? \"simple-dialog-overlay simple-dialog-display-block\"\n    :\"simple-dialog-overlay simple-dialog-display-none\";\n\n    let objectsFilteredAugmented=[...this.state.objectsFiltered];\n    objectsFilteredAugmented=objectsFilteredAugmented.concat(this.state.augmentedObjects);\n\n    return (\n      <div className={visibilityClassName}>\n         <div className=\"simple-dialog\">\n         <button id = \"x\" onClick={this.props.handleDismiss}>\n          X\n         </button>\n           <h2>Edit Profile</h2>\n           <hr class=\"rounded\"/>\n                          Quiz Id:<br/>\n                          <input type=\"text\" id=\"userId\" style={{marginLeft:'23px'}}\n                          value={this.props.objectForEdit.id}\n                          readonly></input>\n                          <br/><br/>\n                          Duration (minutes):<br/>\n                          <input type=\"text\" id=\"durationMinutes\" style={{marginLeft:'23px'}}\n                          onChange={this.props.durationChange}\n                          value={this.props.objectForEdit.duration_minutes}></input>\n                          {/*<select id=\"courseId\" onChange={this.props.selectChange}\n                          style={{marginLeft:'23px'}}\n                          name=\"courseId\" required=\"true\">\n                              <option value=\"null\">UnAssigned</option>\n                          {\n                              this.props.coursesArray.map(objQ=>(\n                                <option value={objQ.id}>{objQ.name}</option>\n                                )\n                              )\n                          }\n                          </select>*/}\n                          <br/><br/>\n                         Description:<br/>\n                         <textarea id=\"description\" style={{marginLeft:'25px', width:'90%'}} type=\"text\" rows=\"10\"\n                          onChange={this.props.descriptionChange}\n                         value={this.props.objectForEdit.description}></textarea>\n                         <br/><br/>\n                         Courses:\n                         <div id=\"AddToDialog\">\n                             <div className=\"autocomplete\">\n                                <input id=\"searchBox\" type=\"text\" name=\"searchBox\"\n                                value={this.state.searchKey}\n                                onChange={this.searchBoxChange} placeholder=\"Type first letters of quiz \"/>\n                                <div className=\"autocomplete-items\">\n                                {\n                                  objectsFilteredAugmented.map(obj=>(<div onClick={(e)=>this.objectsFilteredClick(obj.name, obj.id, e)}><strong>{obj.name.substring(0,this.state.searchKey.length)}</strong>{obj.name.substring(this.state.searchKey.length)}({obj.id})</div>))\n                                }\n                                </div>\n                             </div>\n                             <input type=\"submit\" value=\"Add Course\" onClick={(e)=>this.AddToCourseSubmit(e)}/>\n                         </div>\n                         <br/>\n                         <div>\n                         {\n                             this.props.objectForEdit.coursesArray!==undefined?\n                             ( this.props.objectForEdit.coursesArray.map(objQ=>(\n                                 <div   id={objQ.id} >|{objQ.name}\n                                  <span className=\"closeBtn\"\n                                    onClick={(e)=>this.props.removeCourseFromCoursesArray(e, objQ.id)}>&times;</span>&nbsp;|\n                                 </div>\n                                 )\n                               )\n                             ):null\n                         }\n                         </div>\n                         <br/><br/>\n                         Creator:<br/>\n                         <input type=\"text\" id=\"creator\" style={{marginLeft:'23px'}}\n                         value={this.props.objectForEdit.instructorId}\n                         readonly></input>\n                         <br/><br/>\n                         Quiz Problems:<br/>\n                         {\n                           this.props.problemsArray!==undefined?\n                           ( this.props.problemsArray.map(obj=>{\n                             return (\n                               <>\n                               <hr/>\n                               <div id={'P'+obj.id}\n                                dangerouslySetInnerHTML={{\n                                  __html: obj.description\n                                }}>\n                               </div>\n                               </>)\n                           })\n                           ):null\n                         }\n            <br/><br/><br/><br/><br/><br/>\n           <input type=\"button\" id=\"x\" value=\"Save\" style={{width:'100px', float: \"right\"}} onClick={this.props.handleSubmit}/>\n           <br/><br/>\n           <button id=\"x\" style={{width:'100px'}}\n             onClick={this.props.handleDismiss}>close\n           </button>\n         </div>\n    </div>)\n  }\n}\n\nexport default QuizEditDialog;\n"]},"metadata":{},"sourceType":"module"}