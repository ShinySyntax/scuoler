{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/MeetingShowSelected.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport socketIOClient from \"socket.io-client\";\nimport data from \"./data\";\nimport '../css/Chat.css';\nimport VideoExt from './chat/VideoExt';\nimport SocketX from './chat/SocketX';\nimport PeerConnectionExt from './chat/PeerConnectionExt';\nconst ICE_SERVERS = [{\n  urls: 'turn:numb.viagenie.ca',\n  credential: 'muazkh',\n  username: 'webrtc@live.com'\n}, {\n  url: 'turn:192.158.29.39:3478?transport=tcp',\n  credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n  username: '28224511:1379330808'\n}, {\n  url: 'turn:turn.anyfirewall.com:443?transport=tcp',\n  credential: 'webrtc',\n  username: 'webrtc'\n}, {\n  url: 'turn:13.250.13.83:3478?transport=tcp',\n  credential: 'YzYNCouZM1mhqhmseWk6',\n  username: 'YzYNCouZM1mhqhmseWk6'\n}, {\n  urls: 'stun:stun.l.google.com:19302'\n},\n/*{ urls: 'stun:stun1.l.google.com:19302' },\n{ urls: 'stun:stun2.l.google.com:19302' },\n{ urls: 'stun:stun3.l.google.com:19302' },\n{ urls: 'stun:stun4.l.google.com:19302' },*/\n{\n  urls: 'stun:stun.ekiga.net'\n}];\n\nclass MeetingShowSelected extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSocketConnect = () => {\n      if (this.socket) {\n        this.socket.emit(\"map\", {\n          userName: this.props.loggedInUserFullName,\n          userId: this.props.loggedInUser\n        });\n        console.log(this.socket);\n        console.log(' mapped to ' + this.props.loggedInUser);\n      }\n    };\n\n    this.onUpdateUserList = data => {\n      let userIds = [...this.state.userIds];\n      let newUserIds = data.userIds;\n      newUserIds.forEach(id => {\n        if (!userIds.includes(id)) userIds.push(id);\n      });\n      console.log('In update user list');\n      console.log(userIds);\n      console.log(data.nameMap);\n      this.setState({\n        userIds,\n        userNameMap: data.nameMap\n      });\n    };\n\n    this.state = {\n      icons: data.icons,\n      userIds: [],\n      userNameMap: {},\n      message: 'Select a user on the left menu to start sharing.'\n    };\n    const {\n      params\n    } = this.props.match;\n    this.meetingId = params.id;\n    this.organiserId = params.organiserId;\n\n    if (this.organiserId !== this.props.loggedInUser) {\n      this.peerConnections = new RTCPeerConnection({\n        iceServers: ICE_SERVERS\n      });\n    } else this.peerConnections = {}; //this.socket = socketIOClient(ENDPOINT);\n\n\n    this.socket = socketIOClient(\"/\" + this.meetingId);\n    this.displayMediaOptions = {\n      video: {\n        cursor: \"always\"\n      },\n      audio: {\n        echoCancellation: true,\n        noiseSuppression: true\n      }\n    };\n    this.camMediaOptions = {\n      video: true,\n      audio: {\n        echoCancellation: true,\n        noiseSuppression: true\n      }\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    if (this.props.loggedInUserFullName === '') {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/errorLogin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 16\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, \"Meeting Show Selected\", /*#__PURE__*/React.createElement(SocketX, {\n        socket: this.socket,\n        onSocketConnect: this.onSocketConnect,\n        onUpdateUserList: this.onUpdateUserList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 14\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"active-users-panel\",\n        id: \"active-user-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"panel-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }\n      }, \"Callable Users:\"), this.state.userIds.map(val => /*#__PURE__*/React.createElement(\"div\", {\n        id: val,\n        key: val,\n        onClick: e => {\n          this.callUser(val, e).then();\n        },\n        className: \"active-user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 57\n        }\n      }, this.state.userNameMap[val], \"(\", val, \")\"))))));\n    }\n  }\n\n}\n\nexport default MeetingShowSelected;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/MeetingShowSelected.js"],"names":["React","Redirect","socketIOClient","data","VideoExt","SocketX","PeerConnectionExt","ICE_SERVERS","urls","credential","username","url","MeetingShowSelected","Component","constructor","props","onSocketConnect","socket","emit","userName","loggedInUserFullName","userId","loggedInUser","console","log","onUpdateUserList","userIds","state","newUserIds","forEach","id","includes","push","nameMap","setState","userNameMap","icons","message","params","match","meetingId","organiserId","peerConnections","RTCPeerConnection","iceServers","displayMediaOptions","video","cursor","audio","echoCancellation","noiseSuppression","camMediaOptions","componentDidMount","render","map","val","e","callUser","then"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {  Redirect } from 'react-router-dom';\nimport socketIOClient from \"socket.io-client\";\nimport data from \"./data\";\nimport '../css/Chat.css';\nimport VideoExt from './chat/VideoExt';\nimport SocketX from './chat/SocketX';\nimport PeerConnectionExt from './chat/PeerConnectionExt';\n\nconst ICE_SERVERS=[\n  {\n    urls: 'turn:numb.viagenie.ca',\n    credential: 'muazkh',\n    username: 'webrtc@live.com'\n  },\n  {\n      url: 'turn:192.158.29.39:3478?transport=tcp',\n      credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n      username: '28224511:1379330808'\n  },\n  {\n      url: 'turn:turn.anyfirewall.com:443?transport=tcp',\n      credential: 'webrtc',\n      username: 'webrtc'\n  },\n  {\n      url: 'turn:13.250.13.83:3478?transport=tcp',\n      credential: 'YzYNCouZM1mhqhmseWk6',\n      username: 'YzYNCouZM1mhqhmseWk6'\n  },\n  { urls: 'stun:stun.l.google.com:19302' },\n  /*{ urls: 'stun:stun1.l.google.com:19302' },\n  { urls: 'stun:stun2.l.google.com:19302' },\n  { urls: 'stun:stun3.l.google.com:19302' },\n  { urls: 'stun:stun4.l.google.com:19302' },*/\n  { urls: 'stun:stun.ekiga.net'}\n];\n\nclass MeetingShowSelected extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      icons: data.icons,\n      userIds:[],\n      userNameMap:{},\n      message: 'Select a user on the left menu to start sharing.'\n    }\n    const {params}= this.props.match;\n\n    this.meetingId=params.id;\n    this.organiserId=params.organiserId;\n\n    if(this.organiserId!==this.props.loggedInUser){\n      this.peerConnections= new RTCPeerConnection({ iceServers: ICE_SERVERS });\n    }\n    else\n      this.peerConnections={};\n    //this.socket = socketIOClient(ENDPOINT);\n    this.socket = socketIOClient(\"/\"+this.meetingId);\n\n    this.displayMediaOptions = {\n      video: {\n        cursor: \"always\"\n      },\n      audio: {\n        echoCancellation: true,\n        noiseSuppression: true\n      }\n    };\n    this.camMediaOptions={\n      video: true,\n      audio: {\n        echoCancellation: true,\n        noiseSuppression: true\n      }\n    };\n  }\n\n  onSocketConnect=()=>{\n    if(this.socket){\n      this.socket.emit(\"map\", {\n        userName: this.props.loggedInUserFullName,\n        userId: this.props.loggedInUser\n      });\n      console.log(this.socket);\n      console.log(' mapped to '+this.props.loggedInUser);\n    }\n  }\n\n  onUpdateUserList=(data) => {\n    let userIds=[...this.state.userIds];\n    let newUserIds=data.userIds;\n    newUserIds.forEach(id=>{\n      if(!userIds.includes(id))\n        userIds.push(id);\n    });\n    console.log('In update user list');\n    console.log(userIds);\n    console.log(data.nameMap);\n    this.setState({userIds, userNameMap: data.nameMap});\n  };\n\n  componentDidMount(){\n\n  }\n\n  render(){\n      if(this.props.loggedInUserFullName===''){\n        return <Redirect to=\"/errorLogin\"/>\n      }\n      else\n      {\n          return (\n            <div>\n            Meeting Show Selected\n             <SocketX\n              socket={this.socket}\n              onSocketConnect={this.onSocketConnect}\n              onUpdateUserList={this.onUpdateUserList}\n              />\n              <div className=\"content-container\">\n                    <div className=\"active-users-panel\"  id=\"active-user-container\">\n                      <h3 className=\"panel-title\">Callable Users:</h3>\n                      {this.state.userIds.map(val=>(<div id={val} key={val} onClick={(e)=>{this.callUser(val, e).then()}} className=\"active-user\">\n                                                        <p className=\"username\">\n                                                          {this.state.userNameMap[val]}({val})\n                                                        </p>\n                                                       </div>\n                                                       )\n                                            )}\n                    </div>\n              </div>\n            </div>\n          )\n      }\n  }\n}\n\nexport default MeetingShowSelected;\n"]},"metadata":{},"sourceType":"module"}