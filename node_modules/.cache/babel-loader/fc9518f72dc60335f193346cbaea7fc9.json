{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parser = require('engine.io-parser');\n\nvar parseqs = require('parseqs');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) {}\n}\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(WS, Transport);\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {};\n\n  if (!this.isReactNative) {\n    opts.agent = this.agent;\n    opts.perMessageDeflate = this.perMessageDeflate; // SSL options for Node.js client\n\n    opts.pfx = this.pfx;\n    opts.key = this.key;\n    opts.passphrase = this.passphrase;\n    opts.cert = this.cert;\n    opts.ca = this.ca;\n    opts.ciphers = this.ciphers;\n    opts.rejectUnauthorized = this.rejectUnauthorized;\n  }\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket && !this.isReactNative ? protocols ? new WebSocketImpl(uri, protocols) : new WebSocketImpl(uri) : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false; // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n\n  var total = packets.length;\n\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        } // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n\n\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done() {\n    self.emit('flush'); // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n/**\n * Called upon close\n *\n * @api private\n */\n\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n/**\n * Closes socket.\n *\n * @api private\n */\n\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = ''; // avoid port if default for schema\n\n  if (this.port && ('wss' === schema && Number(this.port) !== 443 || 'ws' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // append timestamp to URI\n\n\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  } // communicate binary support capabilities\n\n\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // prepend ? to query\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};","map":{"version":3,"sources":["/home/mathew/javascript/ischools/node_modules/engine.io-client/lib/transports/websocket.js"],"names":["Transport","require","parser","parseqs","inherit","yeast","debug","BrowserWebSocket","NodeWebSocket","WebSocket","self","MozWebSocket","window","e","WebSocketImpl","module","exports","WS","opts","forceBase64","supportsBinary","perMessageDeflate","usingBrowserWebSocket","forceNode","protocols","call","prototype","name","doOpen","check","uri","isReactNative","agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","extraHeaders","headers","localAddress","ws","err","emit","binaryType","undefined","supports","binary","addEventListeners","onopen","onOpen","onclose","onClose","onmessage","ev","onData","data","onerror","onError","write","packets","writable","total","length","i","l","packet","encodePacket","options","compress","len","Buffer","byteLength","threshold","send","done","setTimeout","doClose","close","query","schema","secure","port","Number","timestampRequests","timestampParam","b64","encode","ipv6","hostname","indexOf","path"],"mappings":"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","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n\n  var opts = {};\n\n  if (!this.isReactNative) {\n    opts.agent = this.agent;\n    opts.perMessageDeflate = this.perMessageDeflate;\n\n    // SSL options for Node.js client\n    opts.pfx = this.pfx;\n    opts.key = this.key;\n    opts.passphrase = this.passphrase;\n    opts.cert = this.cert;\n    opts.ca = this.ca;\n    opts.ciphers = this.ciphers;\n    opts.rejectUnauthorized = this.rejectUnauthorized;\n  }\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws =\n      this.usingBrowserWebSocket && !this.isReactNative\n        ? protocols\n          ? new WebSocketImpl(uri, protocols)\n          : new WebSocketImpl(uri)\n        : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};\n"]},"metadata":{},"sourceType":"script"}