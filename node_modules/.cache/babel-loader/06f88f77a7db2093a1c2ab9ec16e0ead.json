{"ast":null,"code":"import _classCallCheck from\"/home/mathew/javascript/ischools-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mathew/javascript/ischools-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/mathew/javascript/ischools-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/mathew/javascript/ischools-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/mathew/javascript/ischools-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import CourseEditDialog from'./CourseEditDialog';import{Redirect}from'react-router-dom';var CourseShowSelected=/*#__PURE__*/function(_React$Component){_inherits(CourseShowSelected,_React$Component);var _super=_createSuper(CourseShowSelected);function CourseShowSelected(props){var _this;_classCallCheck(this,CourseShowSelected);_this=_super.call(this,props);_this.state={courseObj:{},courseNameEdited:'',courseDescriptionEdited:'',quizesArray:[],showEditCourseDialog:false};_this.handleEditCourseDialogDismiss=_this.handleEditCourseDialogDismiss.bind(_assertThisInitialized(_this));_this.editCourseHandler=_this.editCourseHandler.bind(_assertThisInitialized(_this));_this.descriptionChange=_this.descriptionChange.bind(_assertThisInitialized(_this));_this.nameChange=_this.nameChange.bind(_assertThisInitialized(_this));_this.saveUpdateHandler=_this.saveUpdateHandler.bind(_assertThisInitialized(_this));return _this;}_createClass(CourseShowSelected,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var params=this.props.match.params;this.props.showSpinner();var reqBody=\"courseId=\"+encodeURIComponent(params.id);fetch(\"/api/getTheCourse\",{headers:{'Accept':'application/json','Content-type':'application/x-www-form-urlencoded'},method:'POST',body:reqBody}).then(function(res){return res.json();}).then(function(data){fetch(\"/api/getQuizListForCourse\",{headers:{'Accept':'application/json','Content-type':'application/x-www-form-urlencoded'},method:'POST',body:reqBody}).then(function(res){return res.json();}).then(function(data1){//console.log(data1);\ndata.courseId=params.id;_this2.setState({courseObj:data,courseNameEdited:data.name,courseDescriptionEdited:data.description,quizesArray:data1});_this2.props.hideSpinner();});});}},{key:\"editCourseHandler\",value:function editCourseHandler(e){this.setState({showEditCourseDialog:true});}},{key:\"deleteCourseHandler\",value:function deleteCourseHandler(id){var _this3=this;var b=window.confirm('Are you sure you want to delete');if(b===true){this.props.showSpinner();var reqBody=\"id=\"+encodeURIComponent(id);fetch(\"/api/deleteCourse\",{headers:{'Accept':'application/json','Content-type':'application/x-www-form-urlencoded'},method:'POST',body:reqBody}).then(function(res){return res.json();}).then(function(data){if(data.deletestatus===\"ok\"){var coursesArrayCopy=_this3.props.coursesArray.filter(function(obj){return obj.id!==id;});_this3.props.setCourses(coursesArrayCopy);_this3.props.hideSpinner();alert('Course deleted');window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/coursesBrowse\");}});}//end of if b==true\n}},{key:\"descriptionChange\",value:function descriptionChange(e){this.setState({courseDescriptionEdited:e.target.value});}},{key:\"nameChange\",value:function nameChange(e){this.setState({courseNameEdited:e.target.value});}},{key:\"handleEditCourseDialogDismiss\",value:function handleEditCourseDialogDismiss(e){this.setState({showEditCourseDialog:false,courseNameEdited:this.state.courseObj.name,courseDescriptionEdited:this.state.courseObj.description});}},{key:\"saveUpdateHandler\",value:function saveUpdateHandler(e){var _this4=this;this.props.showSpinner();var newCourseObj=Object.assign({},this.state.courseObj);newCourseObj.name=this.state.courseNameEdited;newCourseObj.description=this.state.courseDescriptionEdited;//console.log(newCourseObj);\nvar reqBody=\"courseId=\"+encodeURIComponent(newCourseObj.courseId);reqBody+='&name='+encodeURIComponent(newCourseObj.name);reqBody+='&description='+encodeURIComponent(newCourseObj.description);fetch(\"/api/updateCourse\",{headers:{'Accept':'application/json','Content-type':'application/x-www-form-urlencoded'},method:'POST',body:reqBody}).then(function(res){return res.json();}).then(function(data){if(data.updatestatus===\"ok\"){_this4.props.loadCourses();var coursesArrayCopy=JSON.parse(JSON.stringify(_this4.props.coursesArray));coursesArrayCopy.forEach(function(obj){if(obj.courseId===newCourseObj.courseId){obj.description=newCourseObj.description;obj.name=newCourseObj.name;}});_this4.props.setCourses(coursesArrayCopy);_this4.setState({courseObj:newCourseObj,showEditCourseDialog:false});_this4.props.hideSpinner();alert('Course updated');}});}},{key:\"render\",value:function render(){var _this5=this;if(this.props.loggedInUser===''){return/*#__PURE__*/React.createElement(Redirect,{to:\"/errorLogin\"});}console.log(this.state.courseObj);return/*#__PURE__*/React.createElement(\"div\",{className:\"Panel\"},/*#__PURE__*/React.createElement(\"a\",{className:\"HomeLink\",href:\"/\"},\"back to home\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"h1\"},\"Course: \",this.state.courseObj.name),/*#__PURE__*/React.createElement(\"p\",{style:{textAlign:'left'}},\" \",/*#__PURE__*/React.createElement(\"b\",null,\"Description\"),\": \",this.state.courseObj.description,\" \",/*#__PURE__*/React.createElement(\"br\",null)),this.props.loggedInUser===this.state.courseObj.ownerId||this.props.admin===\"1\"?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"button\",className:\"EditButton\",onClick:function onClick(){return _this5.editCourseHandler();},id:\"e\".concat(this.state.courseObj.id),value:\"Edit Course\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"input\",{type:\"button\",className:\"EditButton\",onClick:function onClick(){return _this5.deleteCourseHandler(_this5.state.courseObj.courseId);},id:\"d\".concat(this.state.courseObj.id),value:\"Delete Course\"})):null,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"b\",null,\" Creator\"),\": \",this.state.courseObj.ownerId,/*#__PURE__*/React.createElement(\"div\",{class:\"row\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"b\",null,\"List of Quizes:\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),this.state.quizesArray.map(function(obj){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"a\",{href:\"http://\".concat(window.location.hostname,\":\").concat(window.location.port,\"/quizShowSelected/\").concat(obj.id)},obj.description),/*#__PURE__*/React.createElement(\"br\",null));}))),/*#__PURE__*/React.createElement(CourseEditDialog,{objectForEdit:this.state.courseObj,courseNameEdited:this.state.courseNameEdited,courseDescriptionEdited:this.state.courseDescriptionEdited,show:this.state.showEditCourseDialog,descriptionChange:this.descriptionChange,nameChange:this.nameChange,handleDismiss:this.handleEditCourseDialogDismiss,handleSubmit:this.saveUpdateHandler}));}}]);return CourseShowSelected;}(React.Component);export default CourseShowSelected;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/CourseShowSelected.js"],"names":["React","CourseEditDialog","Redirect","CourseShowSelected","props","state","courseObj","courseNameEdited","courseDescriptionEdited","quizesArray","showEditCourseDialog","handleEditCourseDialogDismiss","bind","editCourseHandler","descriptionChange","nameChange","saveUpdateHandler","params","match","showSpinner","reqBody","encodeURIComponent","id","fetch","headers","method","body","then","res","json","data","data1","courseId","setState","name","description","hideSpinner","e","b","window","confirm","deletestatus","coursesArrayCopy","coursesArray","filter","obj","setCourses","alert","location","assign","hostname","port","target","value","newCourseObj","Object","updatestatus","loadCourses","JSON","parse","stringify","forEach","loggedInUser","console","log","textAlign","ownerId","admin","deleteCourseHandler","map","Component"],"mappings":"ozBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,OAAUC,QAAV,KAA0B,kBAA1B,C,GAEMC,CAAAA,kB,oIACJ,4BAAYC,KAAZ,CAAkB,oDAChB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAW,CACTC,SAAS,CAAC,EADD,CAETC,gBAAgB,CAAC,EAFR,CAGTC,uBAAuB,CAAC,EAHf,CAITC,WAAW,CAAC,EAJH,CAKTC,oBAAoB,CAAC,KALZ,CAAX,CAOA,MAAKC,6BAAL,CAAmC,MAAKA,6BAAL,CAAmCC,IAAnC,+BAAnC,CACA,MAAKC,iBAAL,CAAuB,MAAKA,iBAAL,CAAuBD,IAAvB,+BAAvB,CACA,MAAKE,iBAAL,CAAuB,MAAKA,iBAAL,CAAuBF,IAAvB,+BAAvB,CACA,MAAKG,UAAL,CAAgB,MAAKA,UAAL,CAAgBH,IAAhB,+BAAhB,CACA,MAAKI,iBAAL,CAAuB,MAAKA,iBAAL,CAAuBJ,IAAvB,+BAAvB,CAbgB,aAcjB,C,4FAEkB,oBACVK,CAAAA,MADU,CACD,KAAKb,KAAL,CAAWc,KADV,CACVD,MADU,CAGjB,KAAKb,KAAL,CAAWe,WAAX,GACA,GAAIC,CAAAA,OAAO,CAAC,YAAYC,kBAAkB,CAACJ,MAAM,CAACK,EAAR,CAA1C,CACAC,KAAK,qBAAsB,CACzBC,OAAO,CAAC,CACN,SAAS,kBADH,CAEN,eAAgB,mCAFV,CADiB,CAKzBC,MAAM,CAAE,MALiB,CAMzBC,IAAI,CAAEN,OANmB,CAAtB,CAAL,CAQCO,IARD,CAQM,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACC,IAAJ,EAAF,EART,EASCF,IATD,CASM,SAAAG,IAAI,CAAE,CACVP,KAAK,6BAA8B,CACjCC,OAAO,CAAC,CACN,SAAS,kBADH,CAEN,eAAgB,mCAFV,CADyB,CAKjCC,MAAM,CAAE,MALyB,CAMjCC,IAAI,CAAEN,OAN2B,CAA9B,CAAL,CAQCO,IARD,CAQM,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACC,IAAJ,EAAF,EART,EASCF,IATD,CASM,SAAAI,KAAK,CAAE,CACT;AACAD,IAAI,CAACE,QAAL,CAAcf,MAAM,CAACK,EAArB,CACA,MAAI,CAACW,QAAL,CACA,CACE3B,SAAS,CAAEwB,IADb,CAEEvB,gBAAgB,CAACuB,IAAI,CAACI,IAFxB,CAGE1B,uBAAuB,CAAEsB,IAAI,CAACK,WAHhC,CAIE1B,WAAW,CAAEsB,KAJf,CADA,EAOA,MAAI,CAAC3B,KAAL,CAAWgC,WAAX,GACF,CApBF,EAqBD,CA/BD,EAgCD,C,4DAEiBC,C,CAAE,CACjB,KAAKJ,QAAL,CAAc,CAACvB,oBAAoB,CAAC,IAAtB,CAAd,EACF,C,gEAEmBY,E,CAAG,iBACrB,GAAIgB,CAAAA,CAAC,CAACC,MAAM,CAACC,OAAP,CAAe,iCAAf,CAAN,CACA,GAAGF,CAAC,GAAG,IAAP,CAAY,CACV,KAAKlC,KAAL,CAAWe,WAAX,GACE,GAAIC,CAAAA,OAAO,CAAC,MAAMC,kBAAkB,CAACC,EAAD,CAApC,CACAC,KAAK,qBAAsB,CACzBC,OAAO,CAAC,CACN,SAAS,kBADH,CAEN,eAAgB,mCAFV,CADiB,CAKzBC,MAAM,CAAE,MALiB,CAMzBC,IAAI,CAAEN,OANmB,CAAtB,CAAL,CAQCO,IARD,CAQM,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACC,IAAJ,EAAF,EART,EASCF,IATD,CASM,SAAAG,IAAI,CAAE,CACR,GAAGA,IAAI,CAACW,YAAL,GAAoB,IAAvB,CAA4B,CACxB,GAAIC,CAAAA,gBAAgB,CAAC,MAAI,CAACtC,KAAL,CAAWuC,YAAX,CAAwBC,MAAxB,CAA+B,SAACC,GAAD,QAAOA,CAAAA,GAAG,CAACvB,EAAJ,GAASA,EAAhB,EAA/B,CAArB,CACA,MAAI,CAAClB,KAAL,CAAW0C,UAAX,CAAsBJ,gBAAtB,EACA,MAAI,CAACtC,KAAL,CAAWgC,WAAX,GACAW,KAAK,CAAC,gBAAD,CAAL,CACAR,MAAM,CAACS,QAAP,CAAgBC,MAAhB,CAAuB,UAAUV,MAAM,CAACS,QAAP,CAAgBE,QAA1B,CAAmC,GAAnC,CAAuCX,MAAM,CAACS,QAAP,CAAgBG,IAAvD,CAA4D,gBAAnF,EACH,CACJ,CAjBD,EAkBH;AACF,C,4DAEiBd,C,CAAE,CAClB,KAAKJ,QAAL,CAAc,CAACzB,uBAAuB,CAAE6B,CAAC,CAACe,MAAF,CAASC,KAAnC,CAAd,EACD,C,8CAEUhB,C,CAAE,CACX,KAAKJ,QAAL,CAAc,CAAC1B,gBAAgB,CAAE8B,CAAC,CAACe,MAAF,CAASC,KAA5B,CAAd,EACD,C,oFAE6BhB,C,CAAE,CAC7B,KAAKJ,QAAL,CAAc,CAACvB,oBAAoB,CAAC,KAAtB,CACZH,gBAAgB,CAAC,KAAKF,KAAL,CAAWC,SAAX,CAAqB4B,IAD1B,CAEZ1B,uBAAuB,CAAC,KAAKH,KAAL,CAAWC,SAAX,CAAqB6B,WAFjC,CAAd,EAIF,C,4DAEiBE,C,CAAE,iBACjB,KAAKjC,KAAL,CAAWe,WAAX,GACA,GAAMmC,CAAAA,YAAY,CAAGC,MAAM,CAACN,MAAP,CAAc,EAAd,CAAkB,KAAK5C,KAAL,CAAWC,SAA7B,CAArB,CACAgD,YAAY,CAACpB,IAAb,CAAkB,KAAK7B,KAAL,CAAWE,gBAA7B,CACA+C,YAAY,CAACnB,WAAb,CAAyB,KAAK9B,KAAL,CAAWG,uBAApC,CACA;AACA,GAAIY,CAAAA,OAAO,CAAC,YAAYC,kBAAkB,CAACiC,YAAY,CAACtB,QAAd,CAA1C,CACAZ,OAAO,EAAE,SAASC,kBAAkB,CAACiC,YAAY,CAACpB,IAAd,CAApC,CACAd,OAAO,EAAE,gBAAgBC,kBAAkB,CAACiC,YAAY,CAACnB,WAAd,CAA3C,CAEAZ,KAAK,qBAAsB,CACzBC,OAAO,CAAC,CACN,SAAS,kBADH,CAEN,eAAgB,mCAFV,CADiB,CAKzBC,MAAM,CAAE,MALiB,CAMzBC,IAAI,CAAEN,OANmB,CAAtB,CAAL,CAQCO,IARD,CAQM,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACC,IAAJ,EAAF,EART,EASCF,IATD,CASM,SAAAG,IAAI,CAAE,CACR,GAAGA,IAAI,CAAC0B,YAAL,GAAoB,IAAvB,CAA4B,CACxB,MAAI,CAACpD,KAAL,CAAWqD,WAAX,GACA,GAAIf,CAAAA,gBAAgB,CAACgB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,MAAI,CAACxD,KAAL,CAAWuC,YAA1B,CAAX,CAArB,CACAD,gBAAgB,CAACmB,OAAjB,CAAyB,SAAChB,GAAD,CAAO,CAC9B,GAAGA,GAAG,CAACb,QAAJ,GAAesB,YAAY,CAACtB,QAA/B,CAAwC,CACrCa,GAAG,CAACV,WAAJ,CAAgBmB,YAAY,CAACnB,WAA7B,CACAU,GAAG,CAACX,IAAJ,CAASoB,YAAY,CAACpB,IAAtB,CACF,CACF,CALD,EAMA,MAAI,CAAC9B,KAAL,CAAW0C,UAAX,CAAsBJ,gBAAtB,EACA,MAAI,CAACT,QAAL,CAAc,CAAC3B,SAAS,CAAEgD,YAAZ,CAA0B5C,oBAAoB,CAAC,KAA/C,CAAd,EACA,MAAI,CAACN,KAAL,CAAWgC,WAAX,GACAW,KAAK,CAAC,gBAAD,CAAL,CACH,CACJ,CAxBD,EAyBF,C,uCAEO,iBACN,GAAG,KAAK3C,KAAL,CAAW0D,YAAX,GAA0B,EAA7B,CAAgC,CAC9B,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAC,aAAb,EAAP,CACD,CACDC,OAAO,CAACC,GAAR,CAAY,KAAK3D,KAAL,CAAWC,SAAvB,EACA,mBACE,2BAAK,SAAS,CAAC,OAAf,eACI,yBAAG,SAAS,CAAC,UAAb,CAAwB,IAAI,CAAC,GAA7B,iBADJ,cAEI,8BAFJ,cAGI,2BAAK,SAAS,CAAC,IAAf,aACW,KAAKD,KAAL,CAAWC,SAAX,CAAqB4B,IADhC,CAHJ,cAMI,yBAAG,KAAK,CAAE,CAAC+B,SAAS,CAAC,MAAX,CAAV,mBAA+B,2CAA/B,MAAoD,KAAK5D,KAAL,CAAWC,SAAX,CAAqB6B,WAAzE,kBAAsF,8BAAtF,CANJ,CAOM,KAAK/B,KAAL,CAAW0D,YAAX,GAA0B,KAAKzD,KAAL,CAAWC,SAAX,CAAqB4D,OAA/C,EAAwD,KAAK9D,KAAL,CAAW+D,KAAX,GAAmB,GAA5E,cACA,4CACD,6BAAO,IAAI,CAAC,QAAZ,CAAqB,SAAS,CAAC,YAA/B,CACE,OAAO,CAAE,yBAAI,CAAA,MAAI,CAACtD,iBAAL,EAAJ,EADX,CAEE,EAAE,YAAM,KAAKR,KAAL,CAAWC,SAAX,CAAqBgB,EAA3B,CAFJ,CAEqC,KAAK,CAAC,aAF3C,EADC,cAGyD,8BAHzD,cAG8D,8BAH9D,cAID,6BAAO,IAAI,CAAC,QAAZ,CAAqB,SAAS,CAAC,YAA/B,CACE,OAAO,CAAE,yBAAI,CAAA,MAAI,CAAC8C,mBAAL,CAAyB,MAAI,CAAC/D,KAAL,CAAWC,SAAX,CAAqB0B,QAA9C,CAAJ,EADX,CAEE,EAAE,YAAM,KAAK3B,KAAL,CAAWC,SAAX,CAAqBgB,EAA3B,CAFJ,CAEqC,KAAK,CAAC,eAF3C,EAJC,CADA,CAQO,IAfZ,cAgBI,8BAhBJ,cAiBI,wCAjBJ,MAiBsB,KAAKjB,KAAL,CAAWC,SAAX,CAAqB4D,OAjB3C,cAkBI,2BAAK,KAAK,CAAC,KAAX,eACG,4CAAK,8BAAL,cAAU,+CAAV,cAAgC,8BAAhC,cAAqC,8BAArC,CAEE,KAAK7D,KAAL,CAAWI,WAAX,CAAuB4D,GAAvB,CAA2B,SAAAxB,GAAG,qBAC3B,4CACG,yBAAG,IAAI,kBAAYN,MAAM,CAACS,QAAP,CAAgBE,QAA5B,aAAwCX,MAAM,CAACS,QAAP,CAAgBG,IAAxD,8BAAiFN,GAAG,CAACvB,EAArF,CAAP,EAAmGuB,GAAG,CAACV,WAAvG,CADH,cAC0H,8BAD1H,CAD2B,EAA9B,CAFF,CADH,CAlBJ,cA8BI,oBAAC,gBAAD,EACQ,aAAa,CAAE,KAAK9B,KAAL,CAAWC,SADlC,CAEQ,gBAAgB,CAAE,KAAKD,KAAL,CAAWE,gBAFrC,CAGQ,uBAAuB,CAAE,KAAKF,KAAL,CAAWG,uBAH5C,CAIQ,IAAI,CAAE,KAAKH,KAAL,CAAWK,oBAJzB,CAKQ,iBAAiB,CAAE,KAAKI,iBALhC,CAMQ,UAAU,CAAE,KAAKC,UANzB,CAOQ,aAAa,CAAE,KAAKJ,6BAP5B,CAQQ,YAAY,CAAE,KAAKK,iBAR3B,EA9BJ,CADF,CA2CD,C,gCA1L8BhB,KAAK,CAACsE,S,EA+LvC,cAAenE,CAAAA,kBAAf","sourcesContent":["import React from 'react';\nimport CourseEditDialog from './CourseEditDialog';\nimport {  Redirect } from 'react-router-dom';\n\nclass CourseShowSelected extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      courseObj:{},\n      courseNameEdited:'',\n      courseDescriptionEdited:'',\n      quizesArray:[],\n      showEditCourseDialog:false\n    }\n    this.handleEditCourseDialogDismiss=this.handleEditCourseDialogDismiss.bind(this);\n    this.editCourseHandler=this.editCourseHandler.bind(this);\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.nameChange=this.nameChange.bind(this);\n    this.saveUpdateHandler=this.saveUpdateHandler.bind(this);\n  }\n\n  componentDidMount(){\n    const {params}= this.props.match;\n\n    this.props.showSpinner();\n    var reqBody=\"courseId=\"+encodeURIComponent(params.id);\n    fetch(`/api/getTheCourse`, {\n      headers:{\n        'Accept':'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      fetch(`/api/getQuizListForCourse`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data1=>{\n          //console.log(data1);\n          data.courseId=params.id;\n          this.setState(\n          {\n            courseObj: data,\n            courseNameEdited:data.name,\n            courseDescriptionEdited: data.description,\n            quizesArray: data1\n          });\n          this.props.hideSpinner();\n       })\n    })\n  }\n\n  editCourseHandler(e){\n     this.setState({showEditCourseDialog:true});\n  }\n\n  deleteCourseHandler(id){\n    let b=window.confirm('Are you sure you want to delete')\n    if(b===true){\n      this.props.showSpinner();\n        var reqBody=\"id=\"+encodeURIComponent(id);\n        fetch(`/api/deleteCourse`, {\n          headers:{\n            'Accept':'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            if(data.deletestatus===\"ok\"){\n                let coursesArrayCopy=this.props.coursesArray.filter((obj)=>obj.id!==id);\n                this.props.setCourses(coursesArrayCopy);\n                this.props.hideSpinner();\n                alert('Course deleted');\n                window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/coursesBrowse\");\n            }\n        })\n    }//end of if b==true\n  }\n\n  descriptionChange(e){\n    this.setState({courseDescriptionEdited: e.target.value})\n  }\n\n  nameChange(e){\n    this.setState({courseNameEdited: e.target.value})\n  }\n\n  handleEditCourseDialogDismiss(e){\n     this.setState({showEditCourseDialog:false,\n       courseNameEdited:this.state.courseObj.name,\n       courseDescriptionEdited:this.state.courseObj.description\n     });\n  }\n\n  saveUpdateHandler(e){\n     this.props.showSpinner();\n     const newCourseObj = Object.assign({}, this.state.courseObj)\n     newCourseObj.name=this.state.courseNameEdited;\n     newCourseObj.description=this.state.courseDescriptionEdited;\n     //console.log(newCourseObj);\n     var reqBody=\"courseId=\"+encodeURIComponent(newCourseObj.courseId);\n     reqBody+='&name='+encodeURIComponent(newCourseObj.name);\n     reqBody+='&description='+encodeURIComponent(newCourseObj.description);\n\n     fetch(`/api/updateCourse`, {\n       headers:{\n         'Accept':'application/json',\n         'Content-type': 'application/x-www-form-urlencoded'\n       },\n       method: 'POST',\n       body: reqBody\n     })\n     .then(res=>res.json())\n     .then(data=>{\n         if(data.updatestatus===\"ok\"){\n             this.props.loadCourses();\n             let coursesArrayCopy=JSON.parse(JSON.stringify(this.props.coursesArray));\n             coursesArrayCopy.forEach((obj)=>{\n               if(obj.courseId===newCourseObj.courseId){\n                  obj.description=newCourseObj.description;\n                  obj.name=newCourseObj.name;\n               }\n             });\n             this.props.setCourses(coursesArrayCopy);\n             this.setState({courseObj: newCourseObj, showEditCourseDialog:false});\n             this.props.hideSpinner();\n             alert('Course updated');\n         }\n     })\n  }\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n    console.log(this.state.courseObj);\n    return (\n      <div className=\"Panel\">\n          <a className=\"HomeLink\" href=\"/\">back to home</a>\n          <br/>\n          <div className=\"h1\">\n            Course: {this.state.courseObj.name}\n          </div>\n          <p style={{textAlign:'left'}}> <b>Description</b>: {this.state.courseObj.description} <br/></p>\n          {(this.props.loggedInUser===this.state.courseObj.ownerId||this.props.admin===\"1\")?\n          (<div>\n          <input type=\"button\" className=\"EditButton\"\n            onClick={()=>this.editCourseHandler()}\n            id={`e${this.state.courseObj.id}`} value=\"Edit Course\"/><br/><br/>\n          <input type=\"button\" className=\"EditButton\"\n            onClick={()=>this.deleteCourseHandler(this.state.courseObj.courseId)}\n            id={`d${this.state.courseObj.id}`} value=\"Delete Course\"/>\n          </div>):null}\n          <br/>\n          <b> Creator</b>: {this.state.courseObj.ownerId}\n          <div class=\"row\">\n             <div><br/><b>List of Quizes:</b><br/><br/>\n             {\n               this.state.quizesArray.map(obj=>(\n                  <div>\n                     <a href={`http://${window.location.hostname}:${window.location.port}/quizShowSelected/${obj.id}`}>{obj.description}</a><br/>\n                  </div>\n                 )\n               )\n             }\n             </div>{/*end of LeftWindow*/}\n          </div>{/*end of row*/}\n          <CourseEditDialog\n                  objectForEdit={this.state.courseObj}\n                  courseNameEdited={this.state.courseNameEdited}\n                  courseDescriptionEdited={this.state.courseDescriptionEdited}\n                  show={this.state.showEditCourseDialog}\n                  descriptionChange={this.descriptionChange}\n                  nameChange={this.nameChange}\n                  handleDismiss={this.handleEditCourseDialogDismiss}\n                  handleSubmit={this.saveUpdateHandler}\n          />\n     </div>\n    )\n  }\n\n\n}\n\nexport default CourseShowSelected;\n"]},"metadata":{},"sourceType":"module"}