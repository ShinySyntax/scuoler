{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/CourseInsert.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass CourseInsert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: '',\n      name: ''\n    };\n    this.baseState = this.state;\n    this.descriptionChange = this.descriptionChange.bind(this);\n    this.nameChange = this.nameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    if (this.state.name === '' || this.state.description === '') {\n      alert('Name/Description cannot be empty');\n      return;\n    } else {\n      this.props.showSpinner();\n      var reqBody = 'courseName=' + encodeURIComponent(this.state.name);\n      reqBody += '&courseDescription=' + encodeURIComponent(this.state.description);\n      reqBody += '&ownerId=' + encodeURIComponent(this.props.loggedInUser);\n      fetch(`/api/insertCourseAction`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data => {\n        //if(data.updatestatus==\"ok\")\n        let coursesArrayCopy = [...this.props.coursesArray];\n        let obj = {\n          id: data.courseId,\n          name: this.state.name,\n          description: this.state.description,\n          author_id: this.props.loggedInUser\n        };\n        coursesArrayCopy.push(obj);\n        this.props.setCourses(coursesArrayCopy);\n        this.setState(this.baseState);\n        this.props.hideSpinner();\n        alert('Course inserted');\n        window.location.assign(\"http://\" + window.location.hostname + ':' + window.location.port + \"/coursesBrowse\");\n      });\n    }\n  }\n\n  descriptionChange(e) {\n    const new_description = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      description: new_description\n    });\n  }\n\n  nameChange(e) {\n    const new_name = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      name: new_name\n    });\n  }\n\n  render() {\n    if (this.props.loggedInUser === '') {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/errorLogin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"HomeLink\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, \"back to home\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, \"Insert Course\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Course Name:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"courseName\",\n      name: \"courseName\",\n      type: \"text\",\n      onChange: this.nameChange,\n      value: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), \"Course Description:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"courseDescription\",\n      name: \"courseDescription\",\n      type: \"text\",\n      value: this.state.description,\n      onChange: this.descriptionChange,\n      rows: \"10\",\n      style: {\n        width: '90%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }), \"Owner:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"ownerId\",\n      name: \"ownerId\",\n      type: \"text\",\n      required: \"true\",\n      style: {\n        width: '100px',\n        textAlign: 'center'\n      },\n      value: this.props.loggedInUser,\n      readonly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Insert Course\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default CourseInsert;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/CourseInsert.js"],"names":["React","Redirect","CourseInsert","Component","constructor","props","state","description","name","baseState","descriptionChange","bind","nameChange","handleSubmit","alert","showSpinner","reqBody","encodeURIComponent","loggedInUser","fetch","headers","method","body","then","res","json","data","coursesArrayCopy","coursesArray","obj","id","courseId","author_id","push","setCourses","setState","hideSpinner","window","location","assign","hostname","port","e","new_description","target","value","new_name","render","width","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {  Redirect } from 'react-router-dom';\n\nclass CourseInsert extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      description:'',\n      name:''\n    }\n    this.baseState=this.state;\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.nameChange=this.nameChange.bind(this);\n    this.handleSubmit=this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(){\n    if(this.state.name===''||this.state.description===''){\n      alert('Name/Description cannot be empty');\n      return;\n    }\n    else{\n      this.props.showSpinner();\n      var reqBody='courseName='+encodeURIComponent(this.state.name);\n      reqBody+='&courseDescription='+encodeURIComponent(this.state.description);\n      reqBody+='&ownerId='+encodeURIComponent(this.props.loggedInUser);\n\n      fetch(`/api/insertCourseAction`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data=>{\n          //if(data.updatestatus==\"ok\")\n              let coursesArrayCopy=[...this.props.coursesArray];\n              let obj={\n                id: data.courseId,\n                name:this.state.name,\n                description: this.state.description,\n                author_id:this.props.loggedInUser\n              };\n              coursesArrayCopy.push(obj);\n              this.props.setCourses(coursesArrayCopy);\n              this.setState(this.baseState);\n              this.props.hideSpinner();\n              alert('Course inserted');\n              window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/coursesBrowse\");\n      })\n\n    }\n\n  }\n\n  descriptionChange(e){\n    const new_description=e.target.value;\n    //console.log(e.target.value);\n    this.setState({description:new_description});\n  }\n\n  nameChange(e){\n    const new_name=e.target.value;\n    //console.log(e.target.value);\n    this.setState({name:new_name});\n  }\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n    return (\n      <div>\n      <a class=\"HomeLink\" href=\"/\">back to home</a>\n      <div class=\"h1\">\n        Insert Course\n      </div>\n        <fieldset>\n            Course Name:<br/>\n            <input id=\"courseName\" name=\"courseName\" type=\"text\"\n            onChange={this.nameChange}\n            value={this.state.name}\n            >\n            </input>\n            <br/>\n            <br/>\n            Course Description:<br/>\n            <textarea id=\"courseDescription\" name=\"courseDescription\" type=\"text\"\n             value={this.state.description}\n              onChange={this.descriptionChange}\n             rows=\"10\" style={{width:'90%'}}>\n            </textarea>\n            <br/>\n            <br/>\n            Owner:<br/>\n            <input id=\"ownerId\" name=\"ownerId\" type=\"text\" required=\"true\"\n            style={{width:'100px', textAlign: 'center'}}\n            value={this.props.loggedInUser} readonly>\n            </input> <br/>\n            <br/>\n            <input type=\"button\" value=\"Insert Course\" onClick={this.handleSubmit}/>\n        </fieldset>\n      </div>\n    )\n  }\n\n}\n\nexport default CourseInsert;\n"]},"metadata":{},"sourceType":"module"}