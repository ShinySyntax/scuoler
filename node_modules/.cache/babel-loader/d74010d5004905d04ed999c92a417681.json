{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/ProblemShowSelected.js\";\nimport React from 'react';\nimport QuizEditDialog from './QuizEditDialog';\nimport { Redirect } from 'react-router-dom';\n\nclass ProblemShowSelected extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      problemObj: {},\n      showEditProblemDialog: false,\n      problemObjForEdit: {}\n    };\n    this.editProblemHandler = this.editProblemHandler.bind(this);\n    this.handleEditProblemDialogDismiss = this.handleEditProblemDialogDismiss.bind(this);\n    this.saveUpdateHandler = this.saveUpdateHandler.bind(this);\n    this.descriptionChange = this.descriptionChange.bind(this);\n    this.quizDescriptionChange = this.quizDescriptionChange.bind(this);\n    this.selectChange = this.selectChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.showSpinner();\n    const {\n      params\n    } = this.props.match;\n    var reqBody = \"problemId=\" + encodeURIComponent(params.id);\n    fetch(`/api/getTheProblem`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n    });\n  }\n\n  selectChange() {}\n\n  quizDescriptionChange() {}\n\n  descriptionChange() {}\n\n  saveUpdateHandler() {}\n\n  handleEditProblemDialogDismiss() {}\n\n  editProblemHandler() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, \"Edit Problem\");\n  }\n\n}\n\nexport default ProblemShowSelected;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/ProblemShowSelected.js"],"names":["React","QuizEditDialog","Redirect","ProblemShowSelected","Component","constructor","props","state","problemObj","showEditProblemDialog","problemObjForEdit","editProblemHandler","bind","handleEditProblemDialogDismiss","saveUpdateHandler","descriptionChange","quizDescriptionChange","selectChange","componentDidMount","showSpinner","params","match","reqBody","encodeURIComponent","id","fetch","headers","method","body","then","res","json","data","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAUC,QAAV,QAA0B,kBAA1B;;AAEA,MAAMC,mBAAN,SAAkCH,KAAK,CAACI,SAAxC,CAAiD;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,UAAU,EAAC,EADF;AAETC,MAAAA,qBAAqB,EAAC,KAFb;AAGTC,MAAAA,iBAAiB,EAAC;AAHT,KAAX;AAKA,SAAKC,kBAAL,GAAwB,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAAxB;AACA,SAAKC,8BAAL,GAAoC,KAAKA,8BAAL,CAAoCD,IAApC,CAAyC,IAAzC,CAApC;AACA,SAAKE,iBAAL,GAAuB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAvB;AACA,SAAKG,iBAAL,GAAuB,KAAKA,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAAvB;AACA,SAAKI,qBAAL,GAA2B,KAAKA,qBAAL,CAA2BJ,IAA3B,CAAgC,IAAhC,CAA3B;AACA,SAAKK,YAAL,GAAkB,KAAKA,YAAL,CAAkBL,IAAlB,CAAuB,IAAvB,CAAlB;AACD;;AAEDM,EAAAA,iBAAiB,GAAE;AAChB,SAAKZ,KAAL,CAAWa,WAAX;AACA,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKd,KAAL,CAAWe,KAA3B;AAEA,QAAIC,OAAO,GAAC,eAAaC,kBAAkB,CAACH,MAAM,CAACI,EAAR,CAA3C;AACAC,IAAAA,KAAK,CAAE,oBAAF,EAAuB;AAC1BC,MAAAA,OAAO,EAAC;AACN,kBAAS,kBADH;AAEN,wBAAgB;AAFV,OADkB;AAK1BC,MAAAA,MAAM,EAAE,MALkB;AAM1BC,MAAAA,IAAI,EAAEN;AANoB,KAAvB,CAAL,CAQCO,IARD,CAQMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EARX,EASCF,IATD,CASMG,IAAI,IAAE;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAXF;AAYF;;AAEDf,EAAAA,YAAY,GAAE,CAEb;;AAEDD,EAAAA,qBAAqB,GAAE,CAEtB;;AAEDD,EAAAA,iBAAiB,GAAE,CAElB;;AAEDD,EAAAA,iBAAiB,GAAE,CAElB;;AAEDD,EAAAA,8BAA8B,GAAE,CAE/B;;AAEDF,EAAAA,kBAAkB,GAAE,CAEnB;;AAEDwB,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAKD;;AAjE8C;;AAsEjD,eAAehC,mBAAf","sourcesContent":["import React from 'react';\nimport QuizEditDialog from './QuizEditDialog';\nimport {  Redirect } from 'react-router-dom';\n\nclass ProblemShowSelected extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      problemObj:{},\n      showEditProblemDialog:false,\n      problemObjForEdit:{}\n    }\n    this.editProblemHandler=this.editProblemHandler.bind(this);\n    this.handleEditProblemDialogDismiss=this.handleEditProblemDialogDismiss.bind(this);\n    this.saveUpdateHandler=this.saveUpdateHandler.bind(this);\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.quizDescriptionChange=this.quizDescriptionChange.bind(this);\n    this.selectChange=this.selectChange.bind(this);\n  }\n\n  componentDidMount(){\n     this.props.showSpinner();\n     const {params}= this.props.match;\n\n     var reqBody=\"problemId=\"+encodeURIComponent(params.id);\n     fetch(`/api/getTheProblem`, {\n       headers:{\n         'Accept':'application/json',\n         'Content-type': 'application/x-www-form-urlencoded'\n       },\n       method: 'POST',\n       body: reqBody\n     })\n     .then(res=>res.json())\n     .then(data=>{\n        console.log(data);\n      })\n  }\n\n  selectChange(){\n\n  }\n\n  quizDescriptionChange(){\n\n  }\n\n  descriptionChange(){\n\n  }\n\n  saveUpdateHandler(){\n\n  }\n\n  handleEditProblemDialogDismiss(){\n\n  }\n\n  editProblemHandler(){\n\n  }\n\n  render(){\n    return (\n      <div>\n      Edit Problem\n      </div>\n    )\n  }\n\n}\n\n\nexport default ProblemShowSelected;\n"]},"metadata":{},"sourceType":"module"}