{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools/src/components/Header.js\";\nimport React, { Component } from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\nimport configurationLogins from '../ConfigurationLogins';\nimport { getMinutesRemaining } from '../utils/utils';\nimport data from './data';\nimport { userIdChange, passwordChange, setErrorMessage, onLogin, onLogout, setStartedQuiz, submitQuiz, submitStartedQuiz } from '../stores/appStoreActions';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reviseQuizMinsRemaining = () => {\n      let globalState = this.props.state;\n      let dispatch = this.props.dispatch;\n\n      if (globalState.startedQuiz !== null) {\n        var mins_remaining = getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes);\n\n        if (mins_remaining > 0) {\n          console.log(mins_remaining);\n          const copied = Object.assign({}, globalState.startedQuiz);\n          copied['mins_remaining'] = mins_remaining;\n          setStartedQuiz(copied, dispatch); //this.setState({startedQuiz:copied});\n          //localStorage.setItem('startedQuiz', JSON.stringify(copied));\n        } else {\n          submitQuiz(globalState, dispatch); //this.startedQuizSubmit();\n        }\n      }\n    };\n\n    this.handleAltLogin = (strSource, response) => {\n      const AltLoginInitiate = (firstName, lastName, email, id, picture_url, dispatch) => {\n        var reqBody = \"userId=\" + encodeURIComponent(id);\n        reqBody += '&firstName=' + encodeURIComponent(firstName);\n        reqBody += '&lastName=' + encodeURIComponent(lastName);\n        reqBody += '&email=' + encodeURIComponent(email);\n        reqBody += '&pictureUrl=' + encodeURIComponent(picture_url);\n        fetch(`/api/mergeUser`, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        }).then(res => res.json()).then(data => {//console.log(data);\n        });\n        onLogin({\n          errorMessage: null,\n          loggedInUser: id,\n          loggedInUserFullName: firstName + ' ' + lastName,\n          admin: '0'\n        }, dispatch); //console.log(firstName+' '+lastName+' '+email+' '+id+' '+picture_url);\n      };\n\n      if (strSource === 'facebook' && response.id !== undefined) {\n        let fullName = response.name;\n        let firstName = fullName;\n        let lastName = \"\";\n        let arrName = fullName.split(\" \");\n\n        if (arrName.length > 1) {\n          firstName = arrName[0];\n          lastName = arrName[1];\n        }\n\n        let email = response.email;\n        let id = response.id;\n        let picture_url = response.picture.data.url;\n        AltLoginInitiate(firstName, lastName, email, id, picture_url, this.props.dispatch);\n      } else if (strSource === 'google' && response.googleId !== undefined) {\n        let id = response.googleId;\n        let picture_url = response.profileObj.imageUrl;\n        let email = response.profileObj.email;\n        let firstName = response.profileObj.givenName;\n        let lastName = response.profileObj.familyName;\n        AltLoginInitiate(firstName, lastName, email, id, picture_url, this.props.dispatch); //console.log(response);\n      } //alert(strSource);\n\n    };\n\n    this.handleLoginSubmit = event => {\n      let globalState = this.props.state;\n      let dispatch = this.props.dispatch;\n\n      if (globalState.userId === null || globalState.password === null || globalState.password.length === 0 || globalState.userId.length === 0) {\n        event.preventDefault();\n        setErrorMessage(\"UserId/password cannot be empty\", dispatch);\n        return;\n      }\n\n      var reqBody = \"userId=\" + encodeURIComponent(globalState.userId);\n      reqBody += '&password=' + encodeURIComponent(globalState.password);\n      fetch(`/api/login`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.login === \"ok\") {\n          /*localStorage.setItem('loggedInUser', globalState.userId);\n          localStorage.setItem('loggedInUserFullName', data.full_name);\n          localStorage.setItem('admin', data.admin);*/\n          onLogin({\n            errorMessage: null,\n            loggedInUser: globalState.userId,\n            loggedInUserFullName: data.full_name,\n            admin: data.admin\n          }, dispatch);\n        } else {\n          setErrorMessage(\"Login Failed: UserId/password Mismatch\", dispatch);\n        }\n      });\n      event.preventDefault();\n    };\n\n    this.logoutUser = e => {\n      let globalState = this.props.state;\n      let dispatch = this.props.dispatch;\n      let confirmMsg = 'Are you sure you want to logout?';\n\n      if (globalState.startedQuiz !== null) {\n        confirmMsg += 'There is an unsubmitted quiz: \\r\\n' + globalState.startedQuiz.description;\n      }\n\n      let b = window.confirm(confirmMsg);\n\n      if (b === true) {\n        if (globalState.startedQuiz !== null) submitQuiz(globalState, dispatch);\n        /*localStorage.setItem('loggedInUser', '');\n        localStorage.setItem('loggedInUserFullName','');\n        localStorage.setItem('admin', \"0\");\n        localStorage.removeItem('startedQuiz');\n        localStorage.removeItem('startedQuizAnswers');*/\n\n        onLogout({\n          errorMessage: null,\n          loggedInUser: '',\n          admin: \"0\",\n          startedQuiz: null,\n          startedQuizAnswers: null\n        }, dispatch);\n      } else {\n        e.preventDefault();\n      }\n    };\n\n    this.state = {\n      icons: data.icons\n    };\n  }\n\n  componentDidMount() {\n    var timer = setInterval(() => {\n      this.reviseQuizMinsRemaining();\n    }, 60000);\n  }\n  /*startedQuizSubmit=()=>{\n    let globalState=this.props.state;\n    let dispatch=this.props.dispatch;\n    var reqBody=\"quizId=\"+encodeURIComponent(globalState.startedQuiz.id);\n        reqBody+=\"&quizType=\"+encodeURIComponent(globalState.startedQuiz.type);\n        reqBody+='&quizInstanceId='+encodeURIComponent(globalState.startedQuiz.quizInstanceId);\n        reqBody+='&answersObject='+encodeURIComponent(JSON.stringify(globalState.startedQuizAnswers));\n         fetch(`/api/quizAnwersSubmit`, {\n          headers:{\n            'Accept':'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        })\n        .then(res=>res.json())\n        .then(\n          data=>{\n            //console.log(data);\n            if(data.insertstatus=== \"ok\"){\n              submitStartedQuiz(dispatch);\n              alert('Quiz Submitted');\n            }\n          }\n        );\n  }*/\n\n\n  render() {\n    let globalState = this.props.state;\n    let dispatch = this.props.dispatch;\n    return globalState.loggedInUser === \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      action: \"login\",\n      onSubmit: event => this.handleLoginSubmit(event),\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, \"Schools.com\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 59\n      }\n    }), globalState.startedQuiz !== null ? /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: 'maroon',\n        textDecoration: 'underline',\n        cursor: 'pointer'\n      },\n      onClick: e => window.location.assign(\"https://\" + window.location.hostname + ':' + window.location.port + \"/quizShowSelected/\" + globalState.startedQuiz.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 51\n      }\n    }), globalState.startedQuiz.description, \" started (\", getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes), \" mins left) \") : null, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: \"red\",\n        paddingRight: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, globalState.errorMessage)), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColRight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"HeaderRightLink\",\n      href: \"/userInsert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 31\n      }\n    }, \"Register User\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 92\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 97\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 102\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"userId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 31\n      }\n    }, \"user id\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"userName\",\n      name: \"userName\",\n      tabindex: \"1\",\n      onChange: e => userIdChange(e, dispatch),\n      value: globalState.userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 32\n      }\n    }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      tabindex: \"2\",\n      onChange: e => passwordChange(e, dispatch),\n      value: globalState.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      tabindex: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 81\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 86\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alt-login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(GoogleLogin, {\n      className: \"alt-login-component\",\n      style: {\n        fontSize: '10pt'\n      },\n      className: \"alt-login-component\",\n      clientId: configurationLogins.google_client_id //CLIENTID NOT CREATED YET\n      ,\n      buttonText: \"LOGIN WITH GOOGLE\",\n      onSuccess: response => this.handleAltLogin(\"google\", response),\n      onFailure: response => this.handleAltLogin(\"google\", response),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(FacebookLogin //className='alt-login-component'\n    , {\n      cssClass: \"alt-login-component alt-login-component-fb\",\n      icon: this.state.icons.facebook,\n      appId: configurationLogins.facebook_api_key //APP ID NOT CREATED YET\n      ,\n      disableMobileRedirect: true,\n      fields: \"name,email,picture\",\n      callback: response => this.handleAltLogin(\"facebook\", response),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }\n    })))))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Header\",\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }\n    }, \"Schools.com\"), globalState.startedQuiz !== null ? /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: 'maroon',\n        textDecoration: 'underline',\n        cursor: 'pointer'\n      },\n      onClick: e => window.location.assign(\"https://\" + window.location.hostname + ':' + window.location.port + \"/quizShowSelected/\" + globalState.startedQuiz.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 51\n      }\n    }), globalState.startedQuiz.description, \" started (\", getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes), \" mins left) \") : null), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColRight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"loginStatus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"HeaderRightLink\",\n      href: \"/\",\n      style: {\n        textDecoration: \"underline\"\n      },\n      onClick: this.logoutUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 29\n      }\n    }, \"Logout\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 29\n      }\n    }, \"Logged in as: \"), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"userId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 29\n      }\n    }, globalState.loggedInUserFullName))))));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/mathew/javascript/ischools/src/components/Header.js"],"names":["React","Component","FacebookLogin","GoogleLogin","configurationLogins","getMinutesRemaining","data","userIdChange","passwordChange","setErrorMessage","onLogin","onLogout","setStartedQuiz","submitQuiz","submitStartedQuiz","Header","constructor","props","reviseQuizMinsRemaining","globalState","state","dispatch","startedQuiz","mins_remaining","start_time","duration_minutes","console","log","copied","Object","assign","handleAltLogin","strSource","response","AltLoginInitiate","firstName","lastName","email","id","picture_url","reqBody","encodeURIComponent","fetch","headers","method","body","then","res","json","errorMessage","loggedInUser","loggedInUserFullName","admin","undefined","fullName","name","arrName","split","length","picture","url","googleId","profileObj","imageUrl","givenName","familyName","handleLoginSubmit","event","userId","password","preventDefault","login","full_name","logoutUser","e","confirmMsg","description","b","window","confirm","startedQuizAnswers","icons","componentDidMount","timer","setInterval","render","color","textDecoration","cursor","location","hostname","port","paddingRight","fontSize","google_client_id","facebook","facebook_api_key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\nimport configurationLogins from '../ConfigurationLogins'\nimport {getMinutesRemaining} from '../utils/utils';\nimport data from './data';\nimport {userIdChange, passwordChange, setErrorMessage, onLogin, onLogout,\n  setStartedQuiz, submitQuiz, submitStartedQuiz} from '../stores/appStoreActions';\n\nclass Header extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      icons: data.icons\n    }\n  }\n\n  componentDidMount() {\n    var timer = setInterval(() => {this.reviseQuizMinsRemaining();}, 60000)\n  }\n\n  /*startedQuizSubmit=()=>{\n    let globalState=this.props.state;\n    let dispatch=this.props.dispatch;\n    var reqBody=\"quizId=\"+encodeURIComponent(globalState.startedQuiz.id);\n        reqBody+=\"&quizType=\"+encodeURIComponent(globalState.startedQuiz.type);\n        reqBody+='&quizInstanceId='+encodeURIComponent(globalState.startedQuiz.quizInstanceId);\n        reqBody+='&answersObject='+encodeURIComponent(JSON.stringify(globalState.startedQuizAnswers));\n\n        fetch(`/api/quizAnwersSubmit`, {\n          headers:{\n            'Accept':'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        })\n        .then(res=>res.json())\n        .then(\n          data=>{\n            //console.log(data);\n            if(data.insertstatus=== \"ok\"){\n              submitStartedQuiz(dispatch);\n              alert('Quiz Submitted');\n            }\n          }\n        );\n  }*/\n\n  reviseQuizMinsRemaining=()=>{\n    let globalState=this.props.state;\n    let dispatch=this.props.dispatch;\n    if(globalState.startedQuiz!==null){\n          var mins_remaining= getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes);\n\n          if(mins_remaining>0){\n            console.log(mins_remaining);\n            const copied = Object.assign({}, globalState.startedQuiz);\n            copied['mins_remaining']=mins_remaining;\n            setStartedQuiz(copied, dispatch);\n            //this.setState({startedQuiz:copied});\n            //localStorage.setItem('startedQuiz', JSON.stringify(copied));\n         }\n         else{\n           submitQuiz(globalState, dispatch);\n           //this.startedQuizSubmit();\n         }\n    }\n  }\n\n  handleAltLogin=(strSource, response)=>{\n    const AltLoginInitiate=(firstName, lastName, email, id, picture_url, dispatch)=>{\n      var reqBody=\"userId=\"+encodeURIComponent(id);\n      reqBody+='&firstName='+encodeURIComponent(firstName);\n      reqBody+='&lastName='+encodeURIComponent(lastName);\n      reqBody+='&email='+encodeURIComponent(email);\n      reqBody+='&pictureUrl='+encodeURIComponent(picture_url);\n\n      fetch(`/api/mergeUser`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data=>{\n          //console.log(data);\n       });\n       onLogin({errorMessage:null,\n                     loggedInUser: id,\n                     loggedInUserFullName: firstName+' '+lastName,\n                     admin: '0'\n                   }, dispatch);\n       //console.log(firstName+' '+lastName+' '+email+' '+id+' '+picture_url);\n    };\n    if(strSource==='facebook' && response.id!==undefined){\n      let fullName=response.name;\n      let firstName=fullName;\n      let lastName=\"\";\n      let arrName=fullName.split(\" \");\n      if(arrName.length>1){\n        firstName=arrName[0];\n        lastName=arrName[1];\n      }\n      let email=response.email;\n      let id=response.id;\n      let picture_url=response.picture.data.url;\n      AltLoginInitiate(firstName, lastName, email, id, picture_url, this.props.dispatch);\n    }\n    else if(strSource==='google' && response.googleId!==undefined){\n      let id=response.googleId;\n      let picture_url=response.profileObj.imageUrl;\n      let email=response.profileObj.email;\n      let firstName=response.profileObj.givenName;\n      let lastName=response.profileObj.familyName;\n      AltLoginInitiate(firstName, lastName, email, id, picture_url, this.props.dispatch);\n      //console.log(response);\n    }\n    //alert(strSource);\n  }\n\n  handleLoginSubmit=(event)=>{\n      let globalState=this.props.state;\n      let dispatch=this.props.dispatch;\n      if(globalState.userId===null\n          ||globalState.password===null\n          ||globalState.password.length===0\n          ||globalState.userId.length===0)\n      {\n        event.preventDefault();\n        setErrorMessage(\"UserId/password cannot be empty\", dispatch);\n        return;\n      }\n      var reqBody=\"userId=\"+encodeURIComponent(globalState.userId);\n          reqBody+='&password='+encodeURIComponent(globalState.password);\n\n          fetch(`/api/login`, {\n            headers:{\n              'Accept':'application/json',\n              'Content-type': 'application/x-www-form-urlencoded'\n            },\n            method: 'POST',\n            body: reqBody\n          })\n          .then(res=>res.json())\n          .then(\n            data=>{\n              console.log(data);\n              if(data.login===\"ok\"){\n                /*localStorage.setItem('loggedInUser', globalState.userId);\n                localStorage.setItem('loggedInUserFullName', data.full_name);\n                localStorage.setItem('admin', data.admin);*/\n                onLogin({errorMessage:null,\n                              loggedInUser: globalState.userId,\n                              loggedInUserFullName: data.full_name,\n                              admin: data.admin\n                            }, dispatch);\n              }\n              else {\n                setErrorMessage(\"Login Failed: UserId/password Mismatch\", dispatch);\n              }\n            }\n          );\n      event.preventDefault();\n\n  }\n\n  logoutUser=(e)=>{\n    let globalState=this.props.state;\n    let dispatch=this.props.dispatch;\n    let confirmMsg='Are you sure you want to logout?';\n    if(globalState.startedQuiz!==null){\n        confirmMsg+='There is an unsubmitted quiz: \\r\\n'+globalState.startedQuiz.description;\n    }\n    let b=window.confirm(confirmMsg)\n    if(b===true){\n      if(globalState.startedQuiz!==null)\n         submitQuiz(globalState, dispatch);\n      /*localStorage.setItem('loggedInUser', '');\n      localStorage.setItem('loggedInUserFullName','');\n      localStorage.setItem('admin', \"0\");\n      localStorage.removeItem('startedQuiz');\n      localStorage.removeItem('startedQuizAnswers');*/\n      onLogout({errorMessage:null, loggedInUser: '', admin:\"0\",\n                      startedQuiz:null, startedQuizAnswers:null}, dispatch);\n    }\n    else{\n      e.preventDefault();\n    }\n  }\n\n  render(){\n        let globalState=this.props.state;\n        let dispatch=this.props.dispatch;\n        return (globalState.loggedInUser===\"\"?(\n              <div className=\"Header\">\n                <form method=\"post\" action=\"login\" onSubmit={(event)=>this.handleLoginSubmit(event)} noValidate>\n                <div className=\"row\">\n                      <div id=\"flexColLeft\">\n                        <span id=\"logo\">Schools.com</span><br/>\n                        {globalState.startedQuiz!==null?\n                                                (\n                                                  <label style={{color:'maroon', textDecoration:'underline', cursor: 'pointer' }}\n                                                  onClick={(e)=>window.location.assign(\"https://\"+window.location.hostname+':'+window.location.port+\"/quizShowSelected/\"+globalState.startedQuiz.id)}>\n                                                  <br/>{globalState.startedQuiz.description} started ({getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes)} mins left) </label>\n                                                 ):null}\n                        <label style={{color:\"red\", paddingRight:\"50px\"}}>{globalState.errorMessage}</label>\n                      </div>\n                      <div id=\"flexColRight\">\n                              <a  id=\"HeaderRightLink\" href='/userInsert'>Register User</a><br/><br/><br/>\n                              <label for=\"userId\">user id</label>\n                              <input type=\"text\" id=\"userName\" name=\"userName\" tabindex=\"1\"\n                                    onChange={(e)=>userIdChange(e, dispatch)} value={globalState.userId}\n                               ></input>\n                               <label for=\"password\">password</label>\n                               <input type=\"password\" id=\"password\" name=\"password\" tabindex=\"2\"\n                                  onChange={(e)=>passwordChange(e, dispatch)} value={globalState.password}\n                               ></input>\n                               <input type=\"submit\" value=\"Login\" tabindex=\"3\"/><br/><br/>\n                               <div className='alt-login-container'>\n                               <GoogleLogin className='alt-login-component'\n                                style={{fontSize:'10pt'}}\n                                className='alt-login-component'\n                                clientId={configurationLogins.google_client_id} //CLIENTID NOT CREATED YET\n                                buttonText=\"LOGIN WITH GOOGLE\"\n                                onSuccess={(response)=>this.handleAltLogin(\"google\",response)}\n                                onFailure={(response)=>this.handleAltLogin(\"google\",response)}\n                                />\n                                <FacebookLogin\n                                //className='alt-login-component'\n                                 cssClass='alt-login-component alt-login-component-fb'\n                                 icon={this.state.icons.facebook}\n                                 appId={configurationLogins.facebook_api_key} //APP ID NOT CREATED YET\n                                 disableMobileRedirect={true}\n                                 fields=\"name,email,picture\"\n                                 callback={(response)=>this.handleAltLogin(\"facebook\",response)}\n                                 />\n                              </div>\n                      </div>\n                </div>\n                </form>\n              </div>\n        ):\n        (\n          <div className=\"Header\" noValidate>\n          <form method=\"post\">\n              <div className=\"row\">\n                    <div id=\"flexColLeft\">\n                        <span id=\"logo\">Schools.com</span>\n                        {globalState.startedQuiz!==null?\n                                                (\n                                                  <label style={{color:'maroon', textDecoration:'underline', cursor: 'pointer' }}\n                                                  onClick={(e)=>window.location.assign(\"https://\"+window.location.hostname+':'+window.location.port+\"/quizShowSelected/\"+globalState.startedQuiz.id)}>\n                                                  <br/>{globalState.startedQuiz.description} started ({getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes)} mins left) </label>\n                                                 ):null}\n                    </div>\n                    <div id=\"flexColRight\">\n                        <span id=\"loginStatus\">\n                            <a id=\"HeaderRightLink\" href=\"/\" style={{textDecoration:\"underline\"}} onClick={this.logoutUser}>Logout</a>\n                            <br/><br/><br/>\n                            <label>Logged in as: </label>\n                            <label id=\"userId\">\n                            {globalState.loggedInUserFullName}\n                            </label>\n                        </span>\n                    </div>\n              </div>\n          </form>\n          </div>\n        ))\n  }\n\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}