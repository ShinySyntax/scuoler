{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/Header.js\";\nimport React, { Component } from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\nimport configurationLogins from '../ConfigurationLogins';\nimport { getMinutesRemaining } from '../utils/utils';\nimport data from './data';\nimport { userIdChange, passwordChange, setErrorMessage, onLogin, onLogout, submitQuiz } from '../stores/appStoreActions';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginSubmit = event => {\n      let globalState = this.props.state;\n      let dispatch = this.props.dispatch;\n\n      if (globalState.userId === null || globalState.password === null || globalState.password.length === 0 || globalState.userId.length === 0) {\n        event.preventDefault();\n        setErrorMessage(\"UserId/password cannot be empty\", dispatch);\n        return;\n      }\n\n      var reqBody = \"userId=\" + encodeURIComponent(globalState.userId);\n      reqBody += '&password=' + encodeURIComponent(globalState.password);\n      fetch(`/api/login`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.login === \"ok\") {\n          /*localStorage.setItem('loggedInUser', globalState.userId);\n          localStorage.setItem('loggedInUserFullName', data.full_name);\n          localStorage.setItem('admin', data.admin);*/\n          onLogin({\n            errorMessage: null,\n            loggedInUser: globalState.userId,\n            loggedInUserFullName: data.full_name,\n            admin: data.admin\n          }, dispatch);\n        } else {\n          setErrorMessage(\"Login Failed: UserId/password Mismatch\", dispatch);\n        }\n      });\n      event.preventDefault();\n    };\n\n    this.logoutUser = e => {\n      //e.preventDefault();\n      let globalState = this.props.state;\n      let dispatch = this.props.dispatch;\n      let confirmMsg = 'Are you sure you want to logout?';\n\n      if (globalState.startedQuiz !== null) {\n        confirmMsg += 'There is an unsubmitted quiz: \\r\\n' + this.state.startedQuiz.description;\n      }\n\n      let b = window.confirm(confirmMsg);\n\n      if (b === true) {\n        if (globalState.startedQuiz !== null) submitQuiz(globalState, dispatch);\n        /*localStorage.setItem('loggedInUser', '');\n        localStorage.setItem('loggedInUserFullName','');\n        localStorage.setItem('admin', \"0\");\n        localStorage.removeItem('startedQuiz');\n        localStorage.removeItem('startedQuizAnswers');*/\n\n        onLogout({\n          errorMessage: null,\n          loggedInUser: '',\n          admin: \"0\",\n          startedQuiz: null,\n          startedQuizAnswers: null\n        }, dispatch);\n      } else {\n        e.preventDefault();\n      }\n    };\n\n    this.state = {\n      icons: data.icons\n    };\n  }\n\n  handleAltLogin(strSource, response) {\n    const AltLoginInitiate = (firstName, lastName, email, id, picture_url) => {\n      var reqBody = \"userId=\" + encodeURIComponent(id);\n      reqBody += '&firstName=' + encodeURIComponent(firstName);\n      reqBody += '&lastName=' + encodeURIComponent(lastName);\n      reqBody += '&email=' + encodeURIComponent(email);\n      reqBody += '&pictureUrl=' + encodeURIComponent(picture_url);\n      fetch(`/api/mergeUser`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data => {//console.log(data);\n      });\n      localStorage.setItem('loggedInUser', id);\n      localStorage.setItem('loggedInUserFullName', firstName + ' ' + lastName);\n      localStorage.setItem('admin', '0');\n      onLogin({\n        errorMessage: null,\n        loggedInUser: id,\n        loggedInUserFullName: firstName + ' ' + lastName,\n        admin: '0'\n      }, dispatch); //console.log(firstName+' '+lastName+' '+email+' '+id+' '+picture_url);\n    };\n\n    if (strSource === 'facebook' && response.id !== undefined) {\n      let fullName = response.name;\n      let firstName = fullName;\n      let lastName = \"\";\n      let arrName = fullName.split(\" \");\n\n      if (arrName.length > 1) {\n        firstName = arrName[0];\n        lastName = arrName[1];\n      }\n\n      let email = response.email;\n      let id = response.id;\n      let picture_url = response.picture.data.url;\n      AltLoginInitiate(firstName, lastName, email, id, picture_url);\n    } else if (strSource === 'google' && response.googleId !== undefined) {\n      let id = response.googleId;\n      let picture_url = response.profileObj.imageUrl;\n      let email = response.profileObj.email;\n      let firstName = response.profileObj.givenName;\n      let lastName = response.profileObj.familyName;\n      AltLoginInitiate(firstName, lastName, email, id, picture_url); //console.log(response);\n    } //alert(strSource);\n\n  }\n\n  render() {\n    let globalState = this.props.state;\n    let dispatch = this.props.dispatch;\n    return globalState.loggedInUser === \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      action: \"login\",\n      onSubmit: event => this.handleLoginSubmit(event),\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, \"Schools.com\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 59\n      }\n    }), globalState.startedQuiz !== null ? /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: 'maroon',\n        textDecoration: 'underline',\n        cursor: 'pointer'\n      },\n      onClick: e => window.location.assign(\"https://\" + window.location.hostname + ':' + window.location.port + \"/quizShowSelected/\" + globalState.startedQuiz.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 51\n      }\n    }), globalState.startedQuiz.description, \" started (\", getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes), \" mins left) \") : null, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: \"red\",\n        paddingRight: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, globalState.errorMessage)), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColRight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"HeaderRightLink\",\n      href: \"/userInsert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 31\n      }\n    }, \"Register User\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 92\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 97\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 102\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"userId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 31\n      }\n    }, \"user id\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"userName\",\n      name: \"userName\",\n      tabindex: \"1\",\n      onChange: e => userIdChange(e, dispatch),\n      value: globalState.userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 32\n      }\n    }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      tabindex: \"2\",\n      onChange: e => passwordChange(e, dispatch),\n      value: globalState.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      tabindex: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 81\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 86\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"alt-login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(GoogleLogin, {\n      className: \"alt-login-component\",\n      style: {\n        fontSize: '10pt'\n      },\n      className: \"alt-login-component\",\n      clientId: configurationLogins.google_client_id //CLIENTID NOT CREATED YET\n      ,\n      buttonText: \"LOGIN WITH GOOGLE\",\n      onSuccess: response => this.props.handleAltLogin(\"google\", response),\n      onFailure: response => this.props.handleAltLogin(\"google\", response),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(FacebookLogin //className='alt-login-component'\n    , {\n      cssClass: \"alt-login-component alt-login-component-fb\",\n      icon: this.state.icons.facebook,\n      appId: configurationLogins.facebook_api_key //APP ID NOT CREATED YET\n      ,\n      disableMobileRedirect: true,\n      fields: \"name,email,picture\",\n      callback: response => this.props.handleAltLogin(\"facebook\", response),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 33\n      }\n    })))))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Header\",\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, \"Schools.com\"), globalState.startedQuiz !== null ? /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: 'maroon',\n        textDecoration: 'underline',\n        cursor: 'pointer'\n      },\n      onClick: e => window.location.assign(\"https://\" + window.location.hostname + ':' + window.location.port + \"/quizShowSelected/\" + globalState.startedQuiz.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 51\n      }\n    }), globalState.startedQuiz.description, \" started (\", getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes), \" mins left) \") : null), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColRight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"loginStatus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"HeaderRightLink\",\n      href: \"/\",\n      style: {\n        textDecoration: \"underline\"\n      },\n      onClick: this.logoutUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, \"Logout\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 29\n      }\n    }, \"Logged in as: \"), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"userId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }, globalState.loggedInUserFullName))))));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/Header.js"],"names":["React","Component","FacebookLogin","GoogleLogin","configurationLogins","getMinutesRemaining","data","userIdChange","passwordChange","setErrorMessage","onLogin","onLogout","submitQuiz","Header","constructor","props","handleLoginSubmit","event","globalState","state","dispatch","userId","password","length","preventDefault","reqBody","encodeURIComponent","fetch","headers","method","body","then","res","json","console","log","login","errorMessage","loggedInUser","loggedInUserFullName","full_name","admin","logoutUser","e","confirmMsg","startedQuiz","description","b","window","confirm","startedQuizAnswers","icons","handleAltLogin","strSource","response","AltLoginInitiate","firstName","lastName","email","id","picture_url","localStorage","setItem","undefined","fullName","name","arrName","split","picture","url","googleId","profileObj","imageUrl","givenName","familyName","render","color","textDecoration","cursor","location","assign","hostname","port","start_time","duration_minutes","paddingRight","fontSize","google_client_id","facebook","facebook_api_key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\nimport configurationLogins from '../ConfigurationLogins'\nimport {getMinutesRemaining} from '../utils/utils';\nimport data from './data';\nimport {userIdChange, passwordChange, setErrorMessage, onLogin, onLogout, submitQuiz} from '../stores/appStoreActions';\n\nclass Header extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      icons: data.icons\n    }\n  }\n\n  handleAltLogin(strSource, response){\n    const AltLoginInitiate=(firstName, lastName, email, id, picture_url)=>{\n      var reqBody=\"userId=\"+encodeURIComponent(id);\n      reqBody+='&firstName='+encodeURIComponent(firstName);\n      reqBody+='&lastName='+encodeURIComponent(lastName);\n      reqBody+='&email='+encodeURIComponent(email);\n      reqBody+='&pictureUrl='+encodeURIComponent(picture_url);\n\n      fetch(`/api/mergeUser`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data=>{\n          //console.log(data);\n       });\n       localStorage.setItem('loggedInUser', id);\n       localStorage.setItem('loggedInUserFullName', firstName+' '+lastName);\n       localStorage.setItem('admin', '0');\n       onLogin({errorMessage:null,\n                     loggedInUser: id,\n                     loggedInUserFullName: firstName+' '+lastName,\n                     admin: '0'\n                   }, dispatch);\n       //console.log(firstName+' '+lastName+' '+email+' '+id+' '+picture_url);\n    };\n    if(strSource==='facebook' && response.id!==undefined){\n      let fullName=response.name;\n      let firstName=fullName;\n      let lastName=\"\";\n      let arrName=fullName.split(\" \");\n      if(arrName.length>1){\n        firstName=arrName[0];\n        lastName=arrName[1];\n      }\n      let email=response.email;\n      let id=response.id;\n      let picture_url=response.picture.data.url;\n      AltLoginInitiate(firstName, lastName, email, id, picture_url);\n    }\n    else if(strSource==='google' && response.googleId!==undefined){\n      let id=response.googleId;\n      let picture_url=response.profileObj.imageUrl;\n      let email=response.profileObj.email;\n      let firstName=response.profileObj.givenName;\n      let lastName=response.profileObj.familyName;\n      AltLoginInitiate(firstName, lastName, email, id, picture_url);\n      //console.log(response);\n    }\n    //alert(strSource);\n  }\n\n  handleLoginSubmit=(event)=>{\n      let globalState=this.props.state;\n      let dispatch=this.props.dispatch;\n      if(globalState.userId===null\n          ||globalState.password===null\n          ||globalState.password.length===0\n          ||globalState.userId.length===0)\n      {\n        event.preventDefault();\n        setErrorMessage(\"UserId/password cannot be empty\", dispatch);\n        return;\n      }\n      var reqBody=\"userId=\"+encodeURIComponent(globalState.userId);\n          reqBody+='&password='+encodeURIComponent(globalState.password);\n\n          fetch(`/api/login`, {\n            headers:{\n              'Accept':'application/json',\n              'Content-type': 'application/x-www-form-urlencoded'\n            },\n            method: 'POST',\n            body: reqBody\n          })\n          .then(res=>res.json())\n          .then(\n            data=>{\n              console.log(data);\n              if(data.login===\"ok\"){\n                /*localStorage.setItem('loggedInUser', globalState.userId);\n                localStorage.setItem('loggedInUserFullName', data.full_name);\n                localStorage.setItem('admin', data.admin);*/\n                onLogin({errorMessage:null,\n                              loggedInUser: globalState.userId,\n                              loggedInUserFullName: data.full_name,\n                              admin: data.admin\n                            }, dispatch);\n              }\n              else {\n                setErrorMessage(\"Login Failed: UserId/password Mismatch\", dispatch);\n              }\n            }\n          );\n      event.preventDefault();\n\n  }\n\n  logoutUser=(e)=>{\n    //e.preventDefault();\n    let globalState=this.props.state;\n    let dispatch=this.props.dispatch;\n    let confirmMsg='Are you sure you want to logout?';\n    if(globalState.startedQuiz!==null){\n        confirmMsg+='There is an unsubmitted quiz: \\r\\n'+this.state.startedQuiz.description;\n    }\n    let b=window.confirm(confirmMsg)\n    if(b===true){\n      if(globalState.startedQuiz!==null)\n         submitQuiz(globalState, dispatch);\n      /*localStorage.setItem('loggedInUser', '');\n      localStorage.setItem('loggedInUserFullName','');\n      localStorage.setItem('admin', \"0\");\n      localStorage.removeItem('startedQuiz');\n      localStorage.removeItem('startedQuizAnswers');*/\n      onLogout({errorMessage:null, loggedInUser: '', admin:\"0\",\n                      startedQuiz:null, startedQuizAnswers:null}, dispatch);\n    }\n    else{\n      e.preventDefault();\n    }\n  }\n\n  render(){\n        let globalState=this.props.state;\n        let dispatch=this.props.dispatch;\n        return (globalState.loggedInUser===\"\"?(\n              <div className=\"Header\">\n                <form method=\"post\" action=\"login\" onSubmit={(event)=>this.handleLoginSubmit(event)} noValidate>\n                <div className=\"row\">\n                      <div id=\"flexColLeft\">\n                        <span id=\"logo\">Schools.com</span><br/>\n                        {globalState.startedQuiz!==null?\n                                                (\n                                                  <label style={{color:'maroon', textDecoration:'underline', cursor: 'pointer' }}\n                                                  onClick={(e)=>window.location.assign(\"https://\"+window.location.hostname+':'+window.location.port+\"/quizShowSelected/\"+globalState.startedQuiz.id)}>\n                                                  <br/>{globalState.startedQuiz.description} started ({getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes)} mins left) </label>\n                                                 ):null}\n                        <label style={{color:\"red\", paddingRight:\"50px\"}}>{globalState.errorMessage}</label>\n                      </div>\n                      <div id=\"flexColRight\">\n                              <a  id=\"HeaderRightLink\" href='/userInsert'>Register User</a><br/><br/><br/>\n                              <label for=\"userId\">user id</label>\n                              <input type=\"text\" id=\"userName\" name=\"userName\" tabindex=\"1\"\n                                    onChange={(e)=>userIdChange(e, dispatch)} value={globalState.userId}\n                               ></input>\n                               <label for=\"password\">password</label>\n                               <input type=\"password\" id=\"password\" name=\"password\" tabindex=\"2\"\n                                  onChange={(e)=>passwordChange(e, dispatch)} value={globalState.password}\n                               ></input>\n                               <input type=\"submit\" value=\"Login\" tabindex=\"3\"/><br/><br/>\n                               <div class='alt-login-container'>\n                               <GoogleLogin className='alt-login-component'\n                                style={{fontSize:'10pt'}}\n                                className='alt-login-component'\n                                clientId={configurationLogins.google_client_id} //CLIENTID NOT CREATED YET\n                                buttonText=\"LOGIN WITH GOOGLE\"\n                                onSuccess={(response)=>this.props.handleAltLogin(\"google\",response)}\n                                onFailure={(response)=>this.props.handleAltLogin(\"google\",response)}\n                                />\n                                <FacebookLogin\n                                //className='alt-login-component'\n                                 cssClass='alt-login-component alt-login-component-fb'\n                                 icon={this.state.icons.facebook}\n                                 appId={configurationLogins.facebook_api_key} //APP ID NOT CREATED YET\n                                 disableMobileRedirect={true}\n                                 fields=\"name,email,picture\"\n                                 callback={(response)=>this.props.handleAltLogin(\"facebook\",response)}\n                                 />\n                              </div>\n                      </div>\n                </div>\n                </form>\n              </div>\n        ):\n        (\n          <div className=\"Header\" noValidate>\n          <form method=\"post\">\n              <div className=\"row\">\n                    <div id=\"flexColLeft\">\n                        <span id=\"logo\">Schools.com</span>\n                        {globalState.startedQuiz!==null?\n                                                (\n                                                  <label style={{color:'maroon', textDecoration:'underline', cursor: 'pointer' }}\n                                                  onClick={(e)=>window.location.assign(\"https://\"+window.location.hostname+':'+window.location.port+\"/quizShowSelected/\"+globalState.startedQuiz.id)}>\n                                                  <br/>{globalState.startedQuiz.description} started ({getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes)} mins left) </label>\n                                                 ):null}\n                    </div>\n                    <div id=\"flexColRight\">\n                        <span id=\"loginStatus\">\n                            <a id=\"HeaderRightLink\" href=\"/\" style={{textDecoration:\"underline\"}} onClick={this.logoutUser}>Logout</a>\n                            <br/><br/><br/>\n                            <label>Logged in as: </label>\n                            <label id=\"userId\">\n                            {globalState.loggedInUserFullName}\n                            </label>\n                        </span>\n                    </div>\n              </div>\n          </form>\n          </div>\n        ))\n  }\n\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}