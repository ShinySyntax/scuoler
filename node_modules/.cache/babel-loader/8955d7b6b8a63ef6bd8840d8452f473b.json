{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/CourseShowSelected.js\";\nimport React from 'react';\nimport CourseEditDialog from './CourseEditDialog';\nimport { Redirect } from 'react-router-dom';\nimport data from \"./data\";\n\nclass CourseShowSelected extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courseObj: {},\n      courseNameEdited: '',\n      courseDescriptionEdited: '',\n      quizesArray: [],\n      quizesArrayForEdit: [],\n      showEditCourseDialog: false,\n      icons: data.icons\n    };\n    this.handleEditCourseDialogDismiss = this.handleEditCourseDialogDismiss.bind(this);\n    this.editCourseHandler = this.editCourseHandler.bind(this);\n    this.descriptionChange = this.descriptionChange.bind(this);\n    this.nameChange = this.nameChange.bind(this);\n    this.saveUpdateHandler = this.saveUpdateHandler.bind(this);\n  }\n\n  componentDidMount1() {\n    const {\n      params\n    } = this.props.match;\n    this.props.showSpinner();\n    var reqBody = \"courseId=\" + encodeURIComponent(params.id);\n    fetch(`/api/getTheCourse`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    }).then(res => res.json()).then(data => {\n      fetch(`/api/getQuizListForCourse`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data1 => {\n        //console.log(data1);\n        data.courseId = params.id;\n        this.setState({\n          courseObj: data,\n          courseNameEdited: data.name,\n          courseDescriptionEdited: data.description,\n          quizesArray: data1\n        });\n        this.props.hideSpinner();\n      });\n    });\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props.match;\n    this.props.showSpinner();\n    var reqBody = \"courseId=\" + encodeURIComponent(params.id);\n    let coursePromise = fetch(`/api/getTheCourse`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    });\n    let quizesPromise = fetch(`/api/getQuizListForCourse`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    });\n    Promise.all([coursePromise, quizesPromise]).then(responses => {\n      Promise.all(responses.map(response => response.json())).then(jsons => {\n        jsons[0].courseId = params.id;\n        console.log(jsons);\n        this.setState({\n          courseObj: jsons[0],\n          courseNameEdited: jsons[0].name,\n          courseDescriptionEdited: jsons[0].description,\n          quizesArray: jsons[1]\n        });\n        this.props.hideSpinner();\n      });\n    });\n  }\n\n  editCourseHandler(e) {\n    this.setState({\n      showEditCourseDialog: true\n    });\n  }\n\n  deleteCourseHandler(id) {\n    let b = window.confirm('Are you sure you want to delete');\n\n    if (b === true) {\n      this.props.showSpinner();\n      var reqBody = \"id=\" + encodeURIComponent(id);\n      fetch(`/api/deleteCourse`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data => {\n        if (data.deletestatus === \"ok\") {\n          let coursesArrayCopy = this.props.coursesArray.filter(obj => obj.id !== id);\n          this.props.setCourses(coursesArrayCopy);\n          this.props.hideSpinner();\n          alert('Course deleted');\n          window.location.assign(\"http://\" + window.location.hostname + ':' + window.location.port + \"/coursesBrowse\");\n        }\n      });\n    } //end of if b==true\n\n  }\n\n  descriptionChange(e) {\n    this.setState({\n      courseDescriptionEdited: e.target.value\n    });\n  }\n\n  nameChange(e) {\n    this.setState({\n      courseNameEdited: e.target.value\n    });\n  }\n\n  handleEditCourseDialogDismiss(e) {\n    this.setState({\n      showEditCourseDialog: false,\n      courseNameEdited: this.state.courseObj.name,\n      courseDescriptionEdited: this.state.courseObj.description\n    });\n  }\n\n  saveUpdateHandler(e) {\n    this.props.showSpinner();\n    const newCourseObj = Object.assign({}, this.state.courseObj);\n    newCourseObj.name = this.state.courseNameEdited;\n    newCourseObj.description = this.state.courseDescriptionEdited; //console.log(newCourseObj);\n\n    var reqBody = \"courseId=\" + encodeURIComponent(newCourseObj.courseId);\n    reqBody += '&name=' + encodeURIComponent(newCourseObj.name);\n    reqBody += '&description=' + encodeURIComponent(newCourseObj.description);\n    fetch(`/api/updateCourse`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    }).then(res => res.json()).then(data => {\n      if (data.updatestatus === \"ok\") {\n        this.props.loadCourses();\n        let coursesArrayCopy = JSON.parse(JSON.stringify(this.props.coursesArray));\n        coursesArrayCopy.forEach(obj => {\n          if (obj.courseId === newCourseObj.courseId) {\n            obj.description = newCourseObj.description;\n            obj.name = newCourseObj.name;\n          }\n        });\n        this.props.setCourses(coursesArrayCopy);\n        this.setState({\n          courseObj: newCourseObj,\n          showEditCourseDialog: false\n        });\n        this.props.hideSpinner();\n        alert('Course updated');\n      }\n    });\n  }\n\n  render() {\n    {\n      /*if(this.props.loggedInUser===''){\n       return <Redirect to=\"/errorLogin\"/>\n      }*/\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"HomeLink\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"homeIcon\",\n      src: this.state.icons.home,\n      alt: \"back to home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, \"Course Details\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }, this.state.courseObj.name), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 42\n      }\n    }, \"Description\"), \": \", this.state.courseObj.description, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 97\n      }\n    })), this.props.loggedInUser === this.state.courseObj.ownerId || this.props.admin === \"1\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"LeftButton\",\n      onClick: () => this.editCourseHandler(),\n      id: `e${this.state.courseObj.id}`,\n      value: \"Edit Course\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"LeftButton\",\n      onClick: () => this.deleteCourseHandler(this.state.courseObj.courseId),\n      id: `d${this.state.courseObj.id}`,\n      value: \"Delete Course\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, \" Creator\"), \": \", this.state.courseObj.ownerId, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 24\n      }\n    }, \"List of Quizes:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 46\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 51\n      }\n    }), this.state.quizesArray.map(obj => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: `http://${window.location.hostname}:${window.location.port}/quizShowSelected/${obj.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 22\n      }\n    }, obj.description), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 141\n      }\n    }))))), /*#__PURE__*/React.createElement(CourseEditDialog, {\n      objectForEdit: this.state.courseObj,\n      courseNameEdited: this.state.courseNameEdited,\n      courseDescriptionEdited: this.state.courseDescriptionEdited,\n      show: this.state.showEditCourseDialog,\n      descriptionChange: this.descriptionChange,\n      nameChange: this.nameChange,\n      handleDismiss: this.handleEditCourseDialogDismiss,\n      handleSubmit: this.saveUpdateHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default CourseShowSelected;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/CourseShowSelected.js"],"names":["React","CourseEditDialog","Redirect","data","CourseShowSelected","Component","constructor","props","state","courseObj","courseNameEdited","courseDescriptionEdited","quizesArray","quizesArrayForEdit","showEditCourseDialog","icons","handleEditCourseDialogDismiss","bind","editCourseHandler","descriptionChange","nameChange","saveUpdateHandler","componentDidMount1","params","match","showSpinner","reqBody","encodeURIComponent","id","fetch","headers","method","body","then","res","json","data1","courseId","setState","name","description","hideSpinner","componentDidMount","coursePromise","quizesPromise","Promise","all","responses","map","response","jsons","console","log","e","deleteCourseHandler","b","window","confirm","deletestatus","coursesArrayCopy","coursesArray","filter","obj","setCourses","alert","location","assign","hostname","port","target","value","newCourseObj","Object","updatestatus","loadCourses","JSON","parse","stringify","forEach","render","home","textAlign","loggedInUser","ownerId","admin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CourseEditDialog from './CourseEditDialog';\nimport {  Redirect } from 'react-router-dom';\nimport data from \"./data\";\n\nclass CourseShowSelected extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      courseObj:{},\n      courseNameEdited:'',\n      courseDescriptionEdited:'',\n      quizesArray:[],\n      quizesArrayForEdit:[],\n      showEditCourseDialog:false,\n      icons: data.icons\n    }\n    this.handleEditCourseDialogDismiss=this.handleEditCourseDialogDismiss.bind(this);\n    this.editCourseHandler=this.editCourseHandler.bind(this);\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.nameChange=this.nameChange.bind(this);\n    this.saveUpdateHandler=this.saveUpdateHandler.bind(this);\n  }\n\n  componentDidMount1(){\n    const {params}= this.props.match;\n\n    this.props.showSpinner();\n    var reqBody=\"courseId=\"+encodeURIComponent(params.id);\n    fetch(`/api/getTheCourse`, {\n      headers:{\n        'Accept':'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      fetch(`/api/getQuizListForCourse`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data1=>{\n          //console.log(data1);\n          data.courseId=params.id;\n          this.setState(\n          {\n            courseObj: data,\n            courseNameEdited:data.name,\n            courseDescriptionEdited: data.description,\n            quizesArray: data1\n          });\n          this.props.hideSpinner();\n       })\n    })\n  }\n\n  componentDidMount(){\n    const {params}= this.props.match;\n\n    this.props.showSpinner();\n    var reqBody=\"courseId=\"+encodeURIComponent(params.id);\n    let coursePromise=fetch(`/api/getTheCourse`, {\n      headers:{\n        'Accept':'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    });\n    let quizesPromise= fetch(`/api/getQuizListForCourse`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      });\n      Promise.all([coursePromise, quizesPromise]).then(\n        (responses)=>{\n          Promise.all(responses.map((response)=>response.json())).then(\n            (jsons)=>{\n              jsons[0].courseId=params.id;\n              console.log(jsons);\n              this.setState({\n              courseObj: jsons[0],\n              courseNameEdited:jsons[0].name,\n              courseDescriptionEdited: jsons[0].description,\n              quizesArray: jsons[1]\n              })\n              this.props.hideSpinner();\n            }\n          )\n        }\n      );\n  }\n\n  editCourseHandler(e){\n     this.setState({showEditCourseDialog:true});\n  }\n\n  deleteCourseHandler(id){\n    let b=window.confirm('Are you sure you want to delete')\n    if(b===true){\n      this.props.showSpinner();\n        var reqBody=\"id=\"+encodeURIComponent(id);\n        fetch(`/api/deleteCourse`, {\n          headers:{\n            'Accept':'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            if(data.deletestatus===\"ok\"){\n                let coursesArrayCopy=this.props.coursesArray.filter((obj)=>obj.id!==id);\n                this.props.setCourses(coursesArrayCopy);\n                this.props.hideSpinner();\n                alert('Course deleted');\n                window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/coursesBrowse\");\n            }\n        })\n    }//end of if b==true\n  }\n\n  descriptionChange(e){\n    this.setState({courseDescriptionEdited: e.target.value})\n  }\n\n  nameChange(e){\n    this.setState({courseNameEdited: e.target.value})\n  }\n\n  handleEditCourseDialogDismiss(e){\n     this.setState({showEditCourseDialog:false,\n       courseNameEdited:this.state.courseObj.name,\n       courseDescriptionEdited:this.state.courseObj.description\n     });\n  }\n\n  saveUpdateHandler(e){\n     this.props.showSpinner();\n     const newCourseObj = Object.assign({}, this.state.courseObj)\n     newCourseObj.name=this.state.courseNameEdited;\n     newCourseObj.description=this.state.courseDescriptionEdited;\n     //console.log(newCourseObj);\n     var reqBody=\"courseId=\"+encodeURIComponent(newCourseObj.courseId);\n     reqBody+='&name='+encodeURIComponent(newCourseObj.name);\n     reqBody+='&description='+encodeURIComponent(newCourseObj.description);\n\n     fetch(`/api/updateCourse`, {\n       headers:{\n         'Accept':'application/json',\n         'Content-type': 'application/x-www-form-urlencoded'\n       },\n       method: 'POST',\n       body: reqBody\n     })\n     .then(res=>res.json())\n     .then(data=>{\n         if(data.updatestatus===\"ok\"){\n             this.props.loadCourses();\n             let coursesArrayCopy=JSON.parse(JSON.stringify(this.props.coursesArray));\n             coursesArrayCopy.forEach((obj)=>{\n               if(obj.courseId===newCourseObj.courseId){\n                  obj.description=newCourseObj.description;\n                  obj.name=newCourseObj.name;\n               }\n             });\n             this.props.setCourses(coursesArrayCopy);\n             this.setState({courseObj: newCourseObj, showEditCourseDialog:false});\n             this.props.hideSpinner();\n             alert('Course updated');\n         }\n     })\n  }\n\n  render(){\n    {/*if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }*/}\n\n    return (\n      <div>\n          <a class=\"HomeLink\" href=\"/\">\n              <img className=\"homeIcon\" src={this.state.icons.home} alt=\"back to home\"/>\n              {/*back to home*/}\n          </a>\n          <div className=\"h1\">\n            Course Details\n          </div>\n      <div className=\"Panel\">\n          <br/>\n          <div className=\"h1\">\n              {this.state.courseObj.name}\n          </div>\n          <p style={{textAlign:'left'}}> <b>Description</b>: {this.state.courseObj.description} <br/></p>\n          {(this.props.loggedInUser===this.state.courseObj.ownerId||this.props.admin===\"1\")?\n          (<div>\n          <input type=\"button\" className=\"LeftButton\"\n            onClick={()=>this.editCourseHandler()}\n            id={`e${this.state.courseObj.id}`} value=\"Edit Course\"/><br/>\n          <input type=\"button\" className=\"LeftButton\"\n            onClick={()=>this.deleteCourseHandler(this.state.courseObj.courseId)}\n            id={`d${this.state.courseObj.id}`} value=\"Delete Course\"/>\n          </div>):null}\n          <br/>\n          <b> Creator</b>: {this.state.courseObj.ownerId}\n          <div class=\"row\">\n             <div><br/><b>List of Quizes:</b><br/><br/>\n             {\n               this.state.quizesArray.map(obj=>(\n                  <div>\n                     <a href={`http://${window.location.hostname}:${window.location.port}/quizShowSelected/${obj.id}`}>{obj.description}</a><br/>\n                  </div>\n                 )\n               )\n             }\n             </div>{/*end of LeftWindow*/}\n          </div>{/*end of row*/}\n          <CourseEditDialog\n                  objectForEdit={this.state.courseObj}\n                  courseNameEdited={this.state.courseNameEdited}\n                  courseDescriptionEdited={this.state.courseDescriptionEdited}\n                  show={this.state.showEditCourseDialog}\n                  descriptionChange={this.descriptionChange}\n                  nameChange={this.nameChange}\n                  handleDismiss={this.handleEditCourseDialogDismiss}\n                  handleSubmit={this.saveUpdateHandler}\n          />\n     </div>\n     </div>\n    )\n  }\n\n\n}\n\nexport default CourseShowSelected;\n"]},"metadata":{},"sourceType":"module"}