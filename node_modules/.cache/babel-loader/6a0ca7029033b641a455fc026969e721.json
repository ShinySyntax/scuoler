{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/QuizInstances.js\";\nimport React from 'react';\nimport data from './data';\nimport { Redirect } from 'react-router-dom';\nimport QuizInstanceProblemsDialog from './QuizInstanceProblemsDialog';\n\nclass QuizInstances extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quizObj: {},\n      quizInstancesArray: [],\n      quizInstanceProblemsArray: [],\n      quizInstanceProblemsArrayForEdit: [],\n      quizInstanceObjectSelected: {},\n      showInstanceProblemsDialog: false,\n      icons: data.icons\n    };\n    this.handleQuizInstanceProblemsDialogDismiss = this.handleQuizInstanceProblemsDialogDismiss.bind(this);\n    this.marksAwardedChanged = this.marksAwardedChanged.bind(this);\n    this.showQuizInstanceProblemsHandler = this.showQuizInstanceProblemsHandler.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.showSpinner();\n    const {\n      params\n    } = this.props.match;\n    var reqBody = \"quizId=\" + encodeURIComponent(params.id);\n    let promise1 = fetch(`/api/getTheQuiz`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    });\n    let promise2 = fetch(`/api/quizGetScores`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    });\n    Promise.all([promise1, promise2]).then(responses => {\n      Promise.all(responses.map(res => res.json())).then(jsons => {\n        jsons[0].id = params.id; //console.log(jsons[0]);\n\n        this.setState({\n          quizObj: jsons[0],\n          quizInstancesArray: jsons[1]\n        });\n      });\n    });\n    this.props.hideSpinner();\n  }\n\n  handleQuizInstanceProblemsDialogDismiss(e) {\n    this.setState({\n      showQuizInstanceProblemsDialog: false\n    });\n  }\n\n  showQuizInstanceProblemsHandler(e, obj) {\n    //alert(obj.quiz_instance_id);\n    var reqBody = \"quizInstanceId=\" + encodeURIComponent(obj.quiz_instance_id);\n    fetch(`/api/getQuizInstanceProblems`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        quizInstanceProblemsArray: data,\n        quizInstanceProblemsArrayForEdit: data,\n        quizInstanceObjectSelected: obj,\n        showQuizInstanceProblemsDialog: true\n      });\n    });\n  }\n\n  marksAwardedChanged(e, obj, index, arr) {\n    let new_marks_awarded = e.target.value;\n    let newObj = Object.assign({}, arr[index]);\n    newObj.marks_awarded = new_marks_awarded;\n    /*let quizInstanceProblemsArray=[];\n    this.state.quizInstanceProblemsArrayForEdit.forEach(val=>{\n      if(val.problem_id!==obj.problem_id)\n          quizInstanceProblemsArray.push(val);\n      else{\n        let newObj=Object.assign({}, val);\n        newObj.marks_awarded=new_marks_awarded;\n        quizInstanceProblemsArray.push(newObj);\n      }\n    })\n    this.setState({quizInstanceProblemsArrayForEdit:quizInstanceProblemsArray});*/\n\n    console.log(new_marks_awarded);\n  }\n\n  render() {\n    if (this.props.loggedInUser === '') {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/errorLogin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"HomeLink\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"homeIcon\",\n      src: this.state.icons.home,\n      alt: \"back to home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"Quiz Instances Details\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, this.state.quizObj.description), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 18\n      }\n    }, \"Course:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 32\n      }\n    }), this.state.quizObj.coursesArray !== undefined ? this.state.quizObj.coursesArray.map(courseObj => /*#__PURE__*/React.createElement(\"a\", {\n      href: `http://${window.location.hostname}:${window.location.port}/courseShowSelected/${courseObj.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: `courseName$,${courseObj.id}`,\n      className: \"Course\",\n      style: {\n        marginLeft: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 40\n      }\n    }, courseObj.name))) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 18\n      }\n    }, \"Duration (minutes):\"), \" \", this.state.quizObj.duration_minutes, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 18\n      }\n    }, \" Quiz Type:\"), \" \", this.state.quizObj.type === \"d\" ? \"Descriptive\" : \"Multiple Choice\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \" Instructor:\"), \" \", this.state.quizObj.instructorId), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, \"Quiz Results\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Browse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"displayTable\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 20\n      }\n    }, \"Marks Scored\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 41\n      }\n    }, \"User\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 54\n      }\n    }, \"Start Time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 73\n      }\n    }, \"End Time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 90\n      }\n    }, \"Evaluate\")), this.state.quizInstancesArray.map(obj => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 24\n      }\n    }, obj.marks_scored, \"/\", obj.maxmarks), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 24\n      }\n    }, obj.user_id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 24\n      }\n    }, obj.start_timestamp), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 24\n      }\n    }, obj.end_timestamp), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"show problems\",\n      onClick: e => this.showQuizInstanceProblemsHandler(e, obj),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 28\n      }\n    })))))), /*#__PURE__*/React.createElement(QuizInstanceProblemsDialog, {\n      quizInstance: this.state.quizInstanceObjectSelected,\n      quizInstanceProblemsArray: this.state.quizInstanceProblemsArrayForEdit,\n      marksAwardedChanged: this.marksAwardedChanged,\n      show: this.state.showQuizInstanceProblemsDialog,\n      handleDismiss: this.handleQuizInstanceProblemsDialogDismiss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 10\n      }\n    }));\n  }\n\n}\n\nexport default QuizInstances;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/QuizInstances.js"],"names":["React","data","Redirect","QuizInstanceProblemsDialog","QuizInstances","Component","constructor","props","state","quizObj","quizInstancesArray","quizInstanceProblemsArray","quizInstanceProblemsArrayForEdit","quizInstanceObjectSelected","showInstanceProblemsDialog","icons","handleQuizInstanceProblemsDialogDismiss","bind","marksAwardedChanged","showQuizInstanceProblemsHandler","componentDidMount","showSpinner","params","match","reqBody","encodeURIComponent","id","promise1","fetch","headers","method","body","promise2","Promise","all","then","responses","map","res","json","jsons","setState","hideSpinner","e","showQuizInstanceProblemsDialog","obj","quiz_instance_id","index","arr","new_marks_awarded","target","value","newObj","Object","assign","marks_awarded","console","log","render","loggedInUser","home","description","coursesArray","undefined","courseObj","window","location","hostname","port","marginLeft","name","duration_minutes","type","instructorId","width","marks_scored","maxmarks","user_id","start_timestamp","end_timestamp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport data from './data';\nimport {  Redirect } from 'react-router-dom';\nimport QuizInstanceProblemsDialog from './QuizInstanceProblemsDialog';\n\nclass QuizInstances extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      quizObj:{},\n      quizInstancesArray:[],\n      quizInstanceProblemsArray:[],\n      quizInstanceProblemsArrayForEdit:[],\n      quizInstanceObjectSelected:{},\n      showInstanceProblemsDialog:false,\n      icons: data.icons\n    }\n    this.handleQuizInstanceProblemsDialogDismiss=this.handleQuizInstanceProblemsDialogDismiss.bind(this);\n    this.marksAwardedChanged=this.marksAwardedChanged.bind(this);\n    this.showQuizInstanceProblemsHandler=this.showQuizInstanceProblemsHandler.bind(this);\n  }\n\n  componentDidMount(){\n    this.props.showSpinner();\n    const {params}= this.props.match;\n\n    var reqBody=\"quizId=\"+encodeURIComponent(params.id);\n\n    let promise1=fetch(`/api/getTheQuiz`, {\n      headers:{\n        'Accept':'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    });\n\n    let promise2=fetch(`/api/quizGetScores`, {\n                      headers:{\n                        'Accept':'application/json',\n                        'Content-type': 'application/x-www-form-urlencoded'\n                      },\n                      method: 'POST',\n                      body: reqBody\n                    });\n\n    Promise.all([promise1, promise2]).then(responses=>{\n      Promise.all(responses.map(res=>res.json())).then(jsons=>{\n          jsons[0].id=params.id;\n          //console.log(jsons[0]);\n           this.setState({\n              quizObj: jsons[0],\n              quizInstancesArray:jsons[1]\n           });\n      })\n    });\n     this.props.hideSpinner();\n\n  }\n\n  handleQuizInstanceProblemsDialogDismiss(e){\n     this.setState({showQuizInstanceProblemsDialog:false});\n  }\n\n\n  showQuizInstanceProblemsHandler(e, obj){\n    //alert(obj.quiz_instance_id);\n    var reqBody=\"quizInstanceId=\"+encodeURIComponent(obj.quiz_instance_id);\n\n    fetch(`/api/getQuizInstanceProblems`, {\n      headers:{\n        'Accept':'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    })\n    .then(res=>res.json())\n    .then(data=>{\n        this.setState({quizInstanceProblemsArray:data, quizInstanceProblemsArrayForEdit: data, quizInstanceObjectSelected:obj, showQuizInstanceProblemsDialog:true});\n     });\n\n  }\n\n  marksAwardedChanged(e, obj, index, arr){\n    let new_marks_awarded=e.target.value;\n    let newObj=Object.assign({}, arr[index]);\n      newObj.marks_awarded=new_marks_awarded;\n    /*let quizInstanceProblemsArray=[];\n    this.state.quizInstanceProblemsArrayForEdit.forEach(val=>{\n      if(val.problem_id!==obj.problem_id)\n          quizInstanceProblemsArray.push(val);\n      else{\n        let newObj=Object.assign({}, val);\n        newObj.marks_awarded=new_marks_awarded;\n        quizInstanceProblemsArray.push(newObj);\n      }\n    })\n    this.setState({quizInstanceProblemsArrayForEdit:quizInstanceProblemsArray});*/\n    console.log(new_marks_awarded);\n  }\n\n  render(){\n    if(this.props.loggedInUser===''){\n       return <Redirect to=\"/errorLogin\"/>\n    }\n    return (\n      <div>\n          <a class=\"HomeLink\" href=\"/\">\n              <img class=\"homeIcon\" src={this.state.icons.home} alt=\"back to home\"/>\n          {/*back to home*/}\n          </a>\n          <div class=\"h1\">\n            Quiz Instances Details\n          </div>\n          <div className=\"Panel\">\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n                <div className=\"h1\">\n                  {this.state.quizObj.description}\n                </div>\n                 <b>Course:</b><br/>\n                 {this.state.quizObj.coursesArray!==undefined?\n                   (\n                     this.state.quizObj.coursesArray.map(courseObj=>(\n                                     <a href={`http://${window.location.hostname}:${window.location.port}/courseShowSelected/${courseObj.id}`}>\n                                       <div id={`courseName$,${courseObj.id}`}  className=\"Course\" style={{marginLeft:'2em'}}>\n                                       {courseObj.name}\n                                       </div>\n                                     </a>\n                                                                     )\n                     )\n                   ):null\n                 }\n                 <br/>\n                 <b>Duration (minutes):</b> {this.state.quizObj.duration_minutes}\n                 <br/><br/>\n                 <b> Quiz Type:</b> {this.state.quizObj.type===\"d\"?\"Descriptive\": \"Multiple Choice\"}\n                 <br/><br/>\n                <b> Instructor:</b> {this.state.quizObj.instructorId}\n          </div>\n          <div class=\"h2\">\n            Quiz Results\n          </div>\n          <div  className='Browse'>\n               <table className=\"displayTable\" style={{width:\"100%\"}}>\n                 <tr>\n                   <th>Marks Scored</th><th>User</th><th>Start Time</th><th>End Time</th><th>Evaluate</th>\n                 </tr>\n                 {\n                   this.state.quizInstancesArray.map(obj=>(\n                     <tr>\n                       <td>{obj.marks_scored}/{obj.maxmarks}</td>\n                       <td>{obj.user_id}</td>\n                       <td>{obj.start_timestamp}</td>\n                       <td>{obj.end_timestamp}</td>\n                       <td><input type=\"button\" value=\"show problems\" onClick={(e)=>this.showQuizInstanceProblemsHandler(e, obj)}/></td>\n                     </tr>\n                     )\n                   )\n                 }\n               </table>\n         </div>\n         <QuizInstanceProblemsDialog\n                 quizInstance={this.state.quizInstanceObjectSelected}\n                 quizInstanceProblemsArray={this.state.quizInstanceProblemsArrayForEdit}\n                 marksAwardedChanged={this.marksAwardedChanged}\n                 show={this.state.showQuizInstanceProblemsDialog}\n                 handleDismiss={this.handleQuizInstanceProblemsDialogDismiss}\n          />\n      </div>\n    )\n  }\n\n\n}\n\nexport default QuizInstances;\n"]},"metadata":{},"sourceType":"module"}