{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/Header.js\";\nimport React, { Component } from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\nimport configurationLogins from '../ConfigurationLogins';\nimport { getMinutesRemaining } from '../utils/utils';\nimport data from './data';\nimport { userIdChange, passwordChange, setErrorMessage, onLogin } from '../stores/appStoreActions';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginSubmit = (event, globalState, dispatch) => {\n      if (globalState.userId === null || globalState.password === null || globalState.password.length === 0 || globalState.userId.length === 0) {\n        event.preventDefault();\n        setErrorMessage(\"UserId/password cannot be empty\", dispatch);\n        return;\n      }\n\n      var reqBody = \"userId=\" + encodeURIComponent(globalState.userId);\n      reqBody += '&password=' + encodeURIComponent(globalState.password);\n      fetch(`/api/login`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.login === \"ok\") {\n          localStorage.setItem('loggedInUser', globalState.userId);\n          localStorage.setItem('loggedInUserFullName', data.full_name);\n          localStorage.setItem('admin', data.admin);\n          onLogin({\n            errorMessage: null,\n            loggedInUser: this.state.userId,\n            loggedInUserFullName: data.full_name,\n            admin: data.admin\n          }, dispatch);\n        } else {\n          setErrorMessage(\"Login Failed: UserId/password Mismatch\", dispatch);\n        }\n      });\n      event.preventDefault();\n    };\n\n    this.logoutUser = e => {\n      //e.preventDefault();\n      let globalState = this.props.state;\n      let dispatch = this.props.dispatch;\n      let confirmMsg = 'Are you sure you want to logout?';\n\n      if (this.state.startedQuiz !== null) {\n        confirmMsg += 'There is an unsubmitted quiz: \\r\\n' + this.state.startedQuiz.description;\n      }\n\n      let b = window.confirm(confirmMsg);\n\n      if (b === true) {\n        if (this.state.startedQuiz !== null) this.startedQuizSubmit();\n        localStorage.setItem('loggedInUser', '');\n        localStorage.setItem('loggedInUserFullName', '');\n        localStorage.setItem('admin', \"0\");\n        localStorage.removeItem('startedQuiz');\n        localStorage.removeItem('startedQuizAnswers');\n        this.setState({\n          errorMessage: null,\n          loggedInUser: '',\n          admin: \"0\",\n          startedQuiz: null,\n          startedQuizAnswers: null\n        });\n      } else {\n        e.preventDefault();\n      }\n    };\n\n    this.state = {\n      icons: data.icons\n    };\n  }\n\n  render() {\n    //console.log(this.props.loggedInUser);\n    let globalState = this.props.state;\n    let dispatch = this.props.dispatch;\n    return globalState.loggedInUser === \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      action: \"login\",\n      onSubmit: event => this.handleLoginSubmit(event, globalState, dispatch),\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, \"Schools.com\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 59\n      }\n    }), globalState.startedQuiz !== null ? /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: 'maroon',\n        textDecoration: 'underline',\n        cursor: 'pointer'\n      },\n      onClick: e => window.location.assign(\"https://\" + window.location.hostname + ':' + window.location.port + \"/quizShowSelected/\" + globalState.startedQuiz.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 51\n      }\n    }), globalState.startedQuiz.description, \" started (\", getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes), \" mins left) \") : null, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: \"red\",\n        paddingRight: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, globalState.errorMessage)), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColRight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"HeaderRightLink\",\n      href: \"/userInsert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 31\n      }\n    }, \"Register User\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 92\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 97\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 102\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"userId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 31\n      }\n    }, \"user id\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"userName\",\n      name: \"userName\",\n      tabindex: \"1\",\n      onChange: e => userIdChange(e, dispatch),\n      value: globalState.userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 32\n      }\n    }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      tabindex: \"2\",\n      onChange: e => passwordChange(e, dispatch),\n      value: globalState.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      tabindex: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 81\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 86\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"alt-login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(GoogleLogin, {\n      className: \"alt-login-component\",\n      style: {\n        fontSize: '10pt'\n      },\n      className: \"alt-login-component\",\n      clientId: configurationLogins.google_client_id //CLIENTID NOT CREATED YET\n      ,\n      buttonText: \"LOGIN WITH GOOGLE\",\n      onSuccess: response => this.props.handleAltLogin(\"google\", response),\n      onFailure: response => this.props.handleAltLogin(\"google\", response),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(FacebookLogin //className='alt-login-component'\n    , {\n      cssClass: \"alt-login-component alt-login-component-fb\",\n      icon: this.state.icons.facebook,\n      appId: configurationLogins.facebook_api_key //APP ID NOT CREATED YET\n      ,\n      disableMobileRedirect: true,\n      fields: \"name,email,picture\",\n      callback: response => this.props.handleAltLogin(\"facebook\", response),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    })))))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Header\",\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, \"Schools.com\"), globalState.startedQuiz !== null ? /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: 'maroon',\n        textDecoration: 'underline',\n        cursor: 'pointer'\n      },\n      onClick: e => window.location.assign(\"https://\" + window.location.hostname + ':' + window.location.port + \"/quizShowSelected/\" + globalState.startedQuiz.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 51\n      }\n    }), globalState.startedQuiz.description, \" started (\", getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes), \" mins left) \") : null), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColRight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"loginStatus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"HeaderRightLink\",\n      href: \"/\",\n      style: {\n        textDecoration: \"underline\"\n      },\n      onClick: this.props.logoutUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, \"Logout\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, \"Logged in as: \"), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"userId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    }, globalState.loggedInUserFullName))))));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/Header.js"],"names":["React","Component","FacebookLogin","GoogleLogin","configurationLogins","getMinutesRemaining","data","userIdChange","passwordChange","setErrorMessage","onLogin","Header","constructor","props","handleLoginSubmit","event","globalState","dispatch","userId","password","length","preventDefault","reqBody","encodeURIComponent","fetch","headers","method","body","then","res","json","console","log","login","localStorage","setItem","full_name","admin","errorMessage","loggedInUser","state","loggedInUserFullName","logoutUser","e","confirmMsg","startedQuiz","description","b","window","confirm","startedQuizSubmit","removeItem","setState","startedQuizAnswers","icons","render","color","textDecoration","cursor","location","assign","hostname","port","id","start_time","duration_minutes","paddingRight","fontSize","google_client_id","response","handleAltLogin","facebook","facebook_api_key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\nimport configurationLogins from '../ConfigurationLogins'\nimport {getMinutesRemaining} from '../utils/utils';\nimport data from './data';\nimport {userIdChange, passwordChange, setErrorMessage, onLogin} from '../stores/appStoreActions';\n\nclass Header extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      icons: data.icons\n    }\n  }\n\nhandleLoginSubmit=(event, globalState, dispatch)=>{\n    if(globalState.userId===null\n        ||globalState.password===null\n        ||globalState.password.length===0\n        ||globalState.userId.length===0)\n    {\n      event.preventDefault();\n      setErrorMessage(\"UserId/password cannot be empty\", dispatch);\n      return;\n    }\n    var reqBody=\"userId=\"+encodeURIComponent(globalState.userId);\n        reqBody+='&password='+encodeURIComponent(globalState.password);\n\n        fetch(`/api/login`, {\n          headers:{\n            'Accept':'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        })\n        .then(res=>res.json())\n        .then(\n          data=>{\n            console.log(data);\n            if(data.login===\"ok\"){\n              localStorage.setItem('loggedInUser', globalState.userId);\n              localStorage.setItem('loggedInUserFullName', data.full_name);\n              localStorage.setItem('admin', data.admin);\n              onLogin({errorMessage:null,\n                            loggedInUser: this.state.userId,\n                            loggedInUserFullName: data.full_name,\n                            admin: data.admin\n                          }, dispatch);\n            }\n            else {\n              setErrorMessage(\"Login Failed: UserId/password Mismatch\", dispatch);\n            }\n          }\n        );\n    event.preventDefault();\n\n  }\n\n  logoutUser=(e)=>{\n    //e.preventDefault();\n    let globalState=this.props.state;\n    let dispatch=this.props.dispatch;\n    let confirmMsg='Are you sure you want to logout?';\n    if(this.state.startedQuiz!==null){\n        confirmMsg+='There is an unsubmitted quiz: \\r\\n'+this.state.startedQuiz.description;\n    }\n    let b=window.confirm(confirmMsg)\n    if(b===true){\n      if(this.state.startedQuiz!==null)\n         this.startedQuizSubmit();\n      localStorage.setItem('loggedInUser', '');\n      localStorage.setItem('loggedInUserFullName','');\n      localStorage.setItem('admin', \"0\");\n      localStorage.removeItem('startedQuiz');\n      localStorage.removeItem('startedQuizAnswers');\n      this.setState({errorMessage:null, loggedInUser: '', admin:\"0\",\n                      startedQuiz:null, startedQuizAnswers:null});\n    }\n    else{\n      e.preventDefault();\n    }\n  }\n\n  render(){\n        //console.log(this.props.loggedInUser);\n        let globalState=this.props.state;\n        let dispatch=this.props.dispatch;\n        return (globalState.loggedInUser===\"\"?(\n              <div className=\"Header\">\n                <form method=\"post\" action=\"login\" onSubmit={(event)=>this.handleLoginSubmit(event, globalState, dispatch)} noValidate>\n                <div className=\"row\">\n                      <div id=\"flexColLeft\">\n                        <span id=\"logo\">Schools.com</span><br/>\n                        {globalState.startedQuiz!==null?\n                                                (\n                                                  <label style={{color:'maroon', textDecoration:'underline', cursor: 'pointer' }}\n                                                  onClick={(e)=>window.location.assign(\"https://\"+window.location.hostname+':'+window.location.port+\"/quizShowSelected/\"+globalState.startedQuiz.id)}>\n                                                  <br/>{globalState.startedQuiz.description} started ({getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes)} mins left) </label>\n                                                 ):null}\n                        <label style={{color:\"red\", paddingRight:\"50px\"}}>{globalState.errorMessage}</label>\n                      </div>\n                      <div id=\"flexColRight\">\n                              <a  id=\"HeaderRightLink\" href='/userInsert'>Register User</a><br/><br/><br/>\n                              <label for=\"userId\">user id</label>\n                              <input type=\"text\" id=\"userName\" name=\"userName\" tabindex=\"1\"\n                                    onChange={(e)=>userIdChange(e, dispatch)} value={globalState.userId}\n                               ></input>\n                               <label for=\"password\">password</label>\n                               <input type=\"password\" id=\"password\" name=\"password\" tabindex=\"2\"\n                                  onChange={(e)=>passwordChange(e, dispatch)} value={globalState.password}\n                               ></input>\n                               <input type=\"submit\" value=\"Login\" tabindex=\"3\"/><br/><br/>\n                               <div class='alt-login-container'>\n                               <GoogleLogin className='alt-login-component'\n                                style={{fontSize:'10pt'}}\n                                className='alt-login-component'\n                                clientId={configurationLogins.google_client_id} //CLIENTID NOT CREATED YET\n                                buttonText=\"LOGIN WITH GOOGLE\"\n                                onSuccess={(response)=>this.props.handleAltLogin(\"google\",response)}\n                                onFailure={(response)=>this.props.handleAltLogin(\"google\",response)}\n                                />\n                                <FacebookLogin\n                                //className='alt-login-component'\n                                 cssClass='alt-login-component alt-login-component-fb'\n                                 icon={this.state.icons.facebook}\n                                 appId={configurationLogins.facebook_api_key} //APP ID NOT CREATED YET\n                                 disableMobileRedirect={true}\n                                 fields=\"name,email,picture\"\n                                 callback={(response)=>this.props.handleAltLogin(\"facebook\",response)}\n                                 />\n                              </div>\n                      </div>\n                </div>\n                </form>\n              </div>\n        ):\n        (\n          <div className=\"Header\" noValidate>\n          <form method=\"post\">\n              <div className=\"row\">\n                    <div id=\"flexColLeft\">\n                        <span id=\"logo\">Schools.com</span>\n                        {globalState.startedQuiz!==null?\n                                                (\n                                                  <label style={{color:'maroon', textDecoration:'underline', cursor: 'pointer' }}\n                                                  onClick={(e)=>window.location.assign(\"https://\"+window.location.hostname+':'+window.location.port+\"/quizShowSelected/\"+globalState.startedQuiz.id)}>\n                                                  <br/>{globalState.startedQuiz.description} started ({getMinutesRemaining(globalState.startedQuiz.start_time, globalState.startedQuiz.duration_minutes)} mins left) </label>\n                                                 ):null}\n                    </div>\n                    <div id=\"flexColRight\">\n                        <span id=\"loginStatus\">\n                            <a id=\"HeaderRightLink\" href=\"/\" style={{textDecoration:\"underline\"}} onClick={this.props.logoutUser}>Logout</a>\n                            <br/><br/><br/>\n                            <label>Logged in as: </label>\n                            <label id=\"userId\">\n                            {globalState.loggedInUserFullName}\n                            </label>\n                        </span>\n                    </div>\n              </div>\n          </form>\n          </div>\n        ))\n  }\n\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}