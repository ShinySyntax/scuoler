{"ast":null,"code":"/*! https://mths.be/utf8js v2.1.2 by @mathias */\nvar stringFromCharCode = String.fromCharCode; // Taken from https://mths.be/punycode\n\nfunction ucs2decode(string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  var value;\n  var extra;\n\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n\n      if ((extra & 0xFC00) == 0xDC00) {\n        // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n\n  return output;\n} // Taken from https://mths.be/punycode\n\n\nfunction ucs2encode(array) {\n  var length = array.length;\n  var index = -1;\n  var value;\n  var output = '';\n\n  while (++index < length) {\n    value = array[index];\n\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n\n    output += stringFromCharCode(value);\n  }\n\n  return output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n  if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n    if (strict) {\n      throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n    }\n\n    return false;\n  }\n\n  return true;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction createByte(codePoint, shift) {\n  return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n  if ((codePoint & 0xFFFFFF80) == 0) {\n    // 1-byte sequence\n    return stringFromCharCode(codePoint);\n  }\n\n  var symbol = '';\n\n  if ((codePoint & 0xFFFFF800) == 0) {\n    // 2-byte sequence\n    symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n  } else if ((codePoint & 0xFFFF0000) == 0) {\n    // 3-byte sequence\n    if (!checkScalarValue(codePoint, strict)) {\n      codePoint = 0xFFFD;\n    }\n\n    symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n    symbol += createByte(codePoint, 6);\n  } else if ((codePoint & 0xFFE00000) == 0) {\n    // 4-byte sequence\n    symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n    symbol += createByte(codePoint, 12);\n    symbol += createByte(codePoint, 6);\n  }\n\n  symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n  return symbol;\n}\n\nfunction utf8encode(string, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  var codePoints = ucs2decode(string);\n  var length = codePoints.length;\n  var index = -1;\n  var codePoint;\n  var byteString = '';\n\n  while (++index < length) {\n    codePoint = codePoints[index];\n    byteString += encodeCodePoint(codePoint, strict);\n  }\n\n  return byteString;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction readContinuationByte() {\n  if (byteIndex >= byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  var continuationByte = byteArray[byteIndex] & 0xFF;\n  byteIndex++;\n\n  if ((continuationByte & 0xC0) == 0x80) {\n    return continuationByte & 0x3F;\n  } // If we end up here, itâ€™s not a continuation byte\n\n\n  throw Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n  var byte1;\n  var byte2;\n  var byte3;\n  var byte4;\n  var codePoint;\n\n  if (byteIndex > byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  if (byteIndex == byteCount) {\n    return false;\n  } // Read first byte\n\n\n  byte1 = byteArray[byteIndex] & 0xFF;\n  byteIndex++; // 1-byte sequence (no continuation bytes)\n\n  if ((byte1 & 0x80) == 0) {\n    return byte1;\n  } // 2-byte sequence\n\n\n  if ((byte1 & 0xE0) == 0xC0) {\n    byte2 = readContinuationByte();\n    codePoint = (byte1 & 0x1F) << 6 | byte2;\n\n    if (codePoint >= 0x80) {\n      return codePoint;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 3-byte sequence (may include unpaired surrogates)\n\n\n  if ((byte1 & 0xF0) == 0xE0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n\n    if (codePoint >= 0x0800) {\n      return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 4-byte sequence\n\n\n  if ((byte1 & 0xF8) == 0xF0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    byte4 = readContinuationByte();\n    codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n\n    if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n      return codePoint;\n    }\n  }\n\n  throw Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\n\nfunction utf8decode(byteString, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  byteArray = ucs2decode(byteString);\n  byteCount = byteArray.length;\n  byteIndex = 0;\n  var codePoints = [];\n  var tmp;\n\n  while ((tmp = decodeSymbol(strict)) !== false) {\n    codePoints.push(tmp);\n  }\n\n  return ucs2encode(codePoints);\n}\n\nmodule.exports = {\n  version: '2.1.2',\n  encode: utf8encode,\n  decode: utf8decode\n};","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/node_modules/engine.io-parser/lib/utf8.js"],"names":["stringFromCharCode","String","fromCharCode","ucs2decode","string","output","counter","length","value","extra","charCodeAt","push","ucs2encode","array","index","checkScalarValue","codePoint","strict","Error","toString","toUpperCase","createByte","shift","encodeCodePoint","symbol","utf8encode","opts","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","utf8decode","tmp","module","exports","version","encode","decode"],"mappings":"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","sourcesContent":["/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\nvar stringFromCharCode = String.fromCharCode;\n\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\tvar value;\n\tvar extra;\n\twhile (counter < length) {\n\t\tvalue = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// high surrogate, and there is a next character\n\t\t\textra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n\tvar length = array.length;\n\tvar index = -1;\n\tvar value;\n\tvar output = '';\n\twhile (++index < length) {\n\t\tvalue = array[index];\n\t\tif (value > 0xFFFF) {\n\t\t\tvalue -= 0x10000;\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(value);\n\t}\n\treturn output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\tif (strict) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n/*--------------------------------------------------------------------------*/\n\nfunction createByte(codePoint, shift) {\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\treturn stringFromCharCode(codePoint);\n\t}\n\tvar symbol = '';\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t}\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\tcodePoint = 0xFFFD;\n\t\t}\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\tsymbol += createByte(codePoint, 12);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\treturn symbol;\n}\n\nfunction utf8encode(string, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tvar codePoints = ucs2decode(string);\n\tvar length = codePoints.length;\n\tvar index = -1;\n\tvar codePoint;\n\tvar byteString = '';\n\twhile (++index < length) {\n\t\tcodePoint = codePoints[index];\n\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t}\n\treturn byteString;\n}\n\n/*--------------------------------------------------------------------------*/\n\nfunction readContinuationByte() {\n\tif (byteIndex >= byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\tif ((continuationByte & 0xC0) == 0x80) {\n\t\treturn continuationByte & 0x3F;\n\t}\n\n\t// If we end up here, itâ€™s not a continuation byte\n\tthrow Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n\tvar byte1;\n\tvar byte2;\n\tvar byte3;\n\tvar byte4;\n\tvar codePoint;\n\n\tif (byteIndex > byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tif (byteIndex == byteCount) {\n\t\treturn false;\n\t}\n\n\t// Read first byte\n\tbyte1 = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\t// 1-byte sequence (no continuation bytes)\n\tif ((byte1 & 0x80) == 0) {\n\t\treturn byte1;\n\t}\n\n\t// 2-byte sequence\n\tif ((byte1 & 0xE0) == 0xC0) {\n\t\tbyte2 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\tif (codePoint >= 0x80) {\n\t\t\treturn codePoint;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 3-byte sequence (may include unpaired surrogates)\n\tif ((byte1 & 0xF0) == 0xE0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\tif (codePoint >= 0x0800) {\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 4-byte sequence\n\tif ((byte1 & 0xF8) == 0xF0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tbyte4 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t(byte3 << 0x06) | byte4;\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\treturn codePoint;\n\t\t}\n\t}\n\n\tthrow Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tbyteArray = ucs2decode(byteString);\n\tbyteCount = byteArray.length;\n\tbyteIndex = 0;\n\tvar codePoints = [];\n\tvar tmp;\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\tcodePoints.push(tmp);\n\t}\n\treturn ucs2encode(codePoints);\n}\n\nmodule.exports = {\n\tversion: '2.1.2',\n\tencode: utf8encode,\n\tdecode: utf8decode\n};\n"]},"metadata":{},"sourceType":"script"}