{"ast":null,"code":"import { getPageArray } from '../utils/utils';\nimport { SHOW_OPEN_SPINNER, HIDE_SPINNER, USER_ID_CHANGE, PASSWORD_CHANGE, SET_ERROR_MESSAGE, ON_LOGIN, LOAD_PROBLEMS, SET_PROBLEMS, SET_PROBLEMS_PAGE, NEXT_PROBLEMS_PAGE, PREVIOUS_PROBLEMS_PAGE, LOAD_QUIZES, SET_QUIZES, SET_STARTED_QUIZ, SET_STARTED_QUIZ_ANSWERS, SUBMIT_STARTED_QUIZ, SET_QUIZES_PAGE, NEXT_QUIZES_PAGE, PREVIOUS_QUIZES_PAGE, LOAD_COURSES, SET_COURSES, SET_COURSES_PAGE, NEXT_COURSES_PAGE, PREVIOUS_COURSES_PAGE, LOAD_USERS, SET_USERS, SET_USERS_PAGE, NEXT_USERS_PAGE, PREVIOUS_USERS_PAGE, LOAD_MEETINGS, SET_MEETINGS_PAGE, NEXT_MEETINGS_PAGE, PREVIOUS_MEETINGS_PAGE } from './appStoreConstants';\nexport const showSpinner = dispatch => {\n  dispatch({\n    type: SHOW_OPEN_SPINNER\n  });\n};\nexport const hideSpinner = dispatch => {\n  dispatch({\n    type: HIDE_SPINNER\n  });\n};\nexport const userIdChange = (e, dispatch) => {\n  const newUserId = e.target.value;\n  dispatch({\n    type: USER_ID_CHANGE,\n    payload: newUserId\n  });\n};\nexport const passwordChange = (e, dispatch) => {\n  const newPassword = e.target.value;\n  dispatch({\n    type: PASSWORD_CHANGE,\n    payload: newPassword\n  });\n};\nexport const setErrorMessage = (errorMsg, dispatch) => {\n  dispatch({\n    type: SET_ERROR_MESSAGE,\n    payload: errorMsg\n  });\n};\nexport const onLogin = (payload, dispatch) => {\n  dispatch({\n    type: ON_LOGIN,\n    payload: payload\n  });\n};\nexport const onLogout = (payload, dispatch) => {\n  dispatch({\n    type: ON_LOGOUT,\n    payload: payload\n  });\n};\nexport const loadProblems = dispatch => {\n  dispatch({\n    type: SHOW_OPEN_SPINNER\n  });\n  dispatch({\n    type: LOAD_PROBLEMS\n  });\n};\nexport const setProblems = (arr, dispatch) => {\n  dispatch({\n    type: SET_PROBLEMS,\n    payload: arr\n  }); //this.setState({problemsArray:arr});\n};\nexport const setProblemsPage = (page, dispatch) => {\n  dispatch({\n    type: SET_PROBLEMS_PAGE,\n    payload: page\n  });\n  loadProblems(dispatch);\n};\nexport const prevProblemsPageClick = (e, state, dispatch) => {\n  let pageArray = getPageArray(state.currentProblemsPage, state.problemsArray === undefined || state.problemsArray.length < state.pageSize);\n\n  if (pageArray.includes(state.currentProblemsPage - 1)) {\n    dispatch({\n      type: PREVIOUS_PROBLEMS_PAGE\n    });\n    loadProblems(dispatch);\n  }\n};\nexport const nextProblemsPageClick = (e, state, dispatch) => {\n  let pageArray = getPageArray(state.currentProblemsPage, state.problemsArray === undefined || state.problemsArray.length < state.pageSize);\n\n  if (pageArray.includes(state.currentProblemsPage + 1)) {\n    dispatch({\n      type: NEXT_PROBLEMS_PAGE\n    });\n    loadProblems(dispatch);\n  }\n};\nexport const loadQuizes = dispatch => {\n  dispatch({\n    type: SHOW_OPEN_SPINNER\n  });\n  dispatch({\n    type: LOAD_QUIZES\n  });\n};\nexport const setQuizes = (arr, dispatch) => {\n  dispatch({\n    type: SET_QUIZES,\n    payload: arr\n  });\n};\nexport const setStartedQuiz = (quizObj, dispatch) => {\n  dispatch({\n    type: SET_STARTED_QUIZ,\n    payload: quizObj\n  });\n};\nexport const setStartedQuizAnswers = (answersObj, dispatch) => {\n  dispatch({\n    type: SET_STARTED_QUIZ_ANSWERS,\n    payload: answersObj\n  });\n};\nexport const submitStartedQuiz = dispatch => {\n  dispatch({\n    type: SUBMIT_STARTED_QUIZ\n  });\n};\nexport const submitQuiz = (globalState, dispatch) => {\n  //console.log(this.state.startedQuizAnswers);\n  //console.log(this.state.startedQuiz);\n  var reqBody = \"quizId=\" + encodeURIComponent(globalState.startedQuiz.id);\n  reqBody += \"&quizType=\" + encodeURIComponent(globalState.startedQuiz.type);\n  reqBody += '&quizInstanceId=' + encodeURIComponent(globalState.startedQuiz.quizInstanceId);\n  reqBody += '&answersObject=' + encodeURIComponent(JSON.stringify(globalState.startedQuizAnswers));\n  fetch(`/api/quizAnwersSubmit`, {\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/x-www-form-urlencoded'\n    },\n    method: 'POST',\n    body: reqBody\n  }).then(res => res.json()).then(data => {\n    //console.log(data);\n    if (data.insertstatus === \"ok\") {\n      //localStorage.removeItem('startedQuiz');\n      //localStorage.removeItem('startedQuizAnswers');\n      //this.setState({startedQuiz:null, startedQuizAnswers:null});\n      submitStartedQuiz(dispatch);\n      alert('Quiz Submitted');\n    }\n  });\n};\nexport const setQuizesPage = (page, dispatch) => {\n  dispatch({\n    type: SET_QUIZES_PAGE,\n    payload: page\n  });\n  loadQuizes(dispatch);\n};\nexport const prevQuizesPageClick = (e, state, dispatch) => {\n  let pageArray = getPageArray(state.currentQuizesPage, state.QuizesArray === undefined || state.quizesArray.length < state.pageSize);\n\n  if (pageArray.includes(state.currentQuizesPage - 1)) {\n    dispatch({\n      type: PREVIOUS_QUIZES_PAGE\n    });\n    loadQuizes(dispatch);\n  }\n};\nexport const nextQuizesPageClick = (e, state, dispatch) => {\n  let pageArray = getPageArray(state.currentQuizesPage, state.quizesArray === undefined || state.quizesArray.length < state.pageSize);\n\n  if (pageArray.includes(state.currentQuizesPage + 1)) {\n    dispatch({\n      type: NEXT_QUIZES_PAGE\n    });\n    loadQuizes(dispatch);\n  }\n};\nexport const loadCourses = dispatch => {\n  dispatch({\n    type: SHOW_OPEN_SPINNER\n  });\n  dispatch({\n    type: LOAD_COURSES\n  });\n};\nexport const setCourses = (arr, dispatch) => {\n  dispatch({\n    type: SET_COURSES,\n    payload: arr\n  });\n};\nexport const setCoursesPage = (page, dispatch) => {\n  dispatch({\n    type: SET_COURSES_PAGE,\n    payload: page\n  });\n  loadCourses(dispatch);\n};\nexport const prevCoursesPageClick = (e, state, dispatch) => {\n  let pageArray = getPageArray(state.currentCoursesPage, state.coursesArray === undefined || state.coursesArray.length < state.pageSize);\n\n  if (pageArray.includes(state.currentCoursesPage - 1)) {\n    dispatch({\n      type: PREVIOUS_COURSES_PAGE\n    });\n    loadCourses(dispatch);\n  }\n};\nexport const nextCoursesPageClick = (e, state, dispatch) => {\n  let pageArray = getPageArray(state.currentCoursesPage, state.coursesArray === undefined || state.coursesArray.length < state.pageSize);\n\n  if (pageArray.includes(state.currentCoursesPage + 1)) {\n    dispatch({\n      type: NEXT_COURSES_PAGE\n    });\n    loadCourses(dispatch);\n  }\n};\nexport const loadUsers = dispatch => {\n  dispatch({\n    type: SHOW_OPEN_SPINNER\n  });\n  dispatch({\n    type: LOAD_USERS\n  });\n};\nexport const setUsers = (arr, dispatch) => {\n  dispatch({\n    type: SET_USERS,\n    payload: arr\n  });\n};\nexport const setUsersPage = (page, dispatch) => {\n  dispatch({\n    type: SET_USERS_PAGE,\n    payload: page\n  });\n  loadUsers(dispatch);\n};\nexport const prevUsersPageClick = (e, state, dispatch) => {\n  let pageArray = getPageArray(state.currentUsersPage, state.usersArray === undefined || state.usersArray.length < state.pageSize);\n\n  if (pageArray.includes(state.currentUsersPage - 1)) {\n    dispatch({\n      type: PREVIOUS_USERS_PAGE\n    });\n    loadUsers(dispatch);\n  }\n};\nexport const nextUsersPageClick = (e, state, dispatch) => {\n  let pageArray = getPageArray(state.currentUsersPage, state.usersArray === undefined || state.usersArray.length < state.pageSize);\n\n  if (pageArray.includes(state.currentUsersPage + 1)) {\n    dispatch({\n      type: NEXT_USERS_PAGE\n    });\n    loadUsers(dispatch);\n  }\n};\nexport const loadMeetings = dispatch => {\n  dispatch({\n    type: SHOW_OPEN_SPINNER\n  });\n  dispatch({\n    type: LOAD_MEETINGS\n  });\n};\nexport const setMeetingsPage = (page, dispatch) => {\n  dispatch({\n    type: SET_MEETINGS_PAGE,\n    payload: page\n  });\n  loadMeetings(dispatch);\n};\nexport const prevMeetingsPageClick = (e, state, dispatch) => {\n  let pageArray = getPageArray(state.currentMeetingsPage, state.meetingsArray === undefined || state.meetingsArray.length < state.pageSize);\n\n  if (pageArray.includes(state.currentMeetingsPage - 1)) {\n    dispatch({\n      type: PREVIOUS_MEETINGS_PAGE\n    });\n    loadMeetings(dispatch);\n  }\n};\nexport const nextMeetingsPageClick = (e, state, dispatch) => {\n  let pageArray = getPageArray(state.currentMeetingsPage, state.meetingsArray === undefined || state.meetingsArray.length < state.pageSize);\n\n  if (pageArray.includes(state.currentMeetingsPage + 1)) {\n    dispatch({\n      type: NEXT_MEETINGS_PAGE\n    });\n    loadMeetings(dispatch);\n  }\n};","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/stores/appStoreActions.js"],"names":["getPageArray","SHOW_OPEN_SPINNER","HIDE_SPINNER","USER_ID_CHANGE","PASSWORD_CHANGE","SET_ERROR_MESSAGE","ON_LOGIN","LOAD_PROBLEMS","SET_PROBLEMS","SET_PROBLEMS_PAGE","NEXT_PROBLEMS_PAGE","PREVIOUS_PROBLEMS_PAGE","LOAD_QUIZES","SET_QUIZES","SET_STARTED_QUIZ","SET_STARTED_QUIZ_ANSWERS","SUBMIT_STARTED_QUIZ","SET_QUIZES_PAGE","NEXT_QUIZES_PAGE","PREVIOUS_QUIZES_PAGE","LOAD_COURSES","SET_COURSES","SET_COURSES_PAGE","NEXT_COURSES_PAGE","PREVIOUS_COURSES_PAGE","LOAD_USERS","SET_USERS","SET_USERS_PAGE","NEXT_USERS_PAGE","PREVIOUS_USERS_PAGE","LOAD_MEETINGS","SET_MEETINGS_PAGE","NEXT_MEETINGS_PAGE","PREVIOUS_MEETINGS_PAGE","showSpinner","dispatch","type","hideSpinner","userIdChange","e","newUserId","target","value","payload","passwordChange","newPassword","setErrorMessage","errorMsg","onLogin","onLogout","ON_LOGOUT","loadProblems","setProblems","arr","setProblemsPage","page","prevProblemsPageClick","state","pageArray","currentProblemsPage","problemsArray","undefined","length","pageSize","includes","nextProblemsPageClick","loadQuizes","setQuizes","setStartedQuiz","quizObj","setStartedQuizAnswers","answersObj","submitStartedQuiz","submitQuiz","globalState","reqBody","encodeURIComponent","startedQuiz","id","quizInstanceId","JSON","stringify","startedQuizAnswers","fetch","headers","method","body","then","res","json","data","insertstatus","alert","setQuizesPage","prevQuizesPageClick","currentQuizesPage","QuizesArray","quizesArray","nextQuizesPageClick","loadCourses","setCourses","setCoursesPage","prevCoursesPageClick","currentCoursesPage","coursesArray","nextCoursesPageClick","loadUsers","setUsers","setUsersPage","prevUsersPageClick","currentUsersPage","usersArray","nextUsersPageClick","loadMeetings","setMeetingsPage","prevMeetingsPageClick","currentMeetingsPage","meetingsArray","nextMeetingsPageClick"],"mappings":"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","sourcesContent":["import {getPageArray} from '../utils/utils';\nimport {SHOW_OPEN_SPINNER, HIDE_SPINNER,\n        USER_ID_CHANGE, PASSWORD_CHANGE, SET_ERROR_MESSAGE, ON_LOGIN,\n        LOAD_PROBLEMS, SET_PROBLEMS, SET_PROBLEMS_PAGE, NEXT_PROBLEMS_PAGE, PREVIOUS_PROBLEMS_PAGE,\n        LOAD_QUIZES, SET_QUIZES, SET_STARTED_QUIZ, SET_STARTED_QUIZ_ANSWERS, SUBMIT_STARTED_QUIZ,\n        SET_QUIZES_PAGE, NEXT_QUIZES_PAGE, PREVIOUS_QUIZES_PAGE,\n        LOAD_COURSES, SET_COURSES, SET_COURSES_PAGE, NEXT_COURSES_PAGE, PREVIOUS_COURSES_PAGE,\n        LOAD_USERS, SET_USERS, SET_USERS_PAGE, NEXT_USERS_PAGE, PREVIOUS_USERS_PAGE,\n        LOAD_MEETINGS, SET_MEETINGS_PAGE, NEXT_MEETINGS_PAGE, PREVIOUS_MEETINGS_PAGE}\n        from './appStoreConstants';\n\nexport const showSpinner=(dispatch)=>{\n    dispatch({type:SHOW_OPEN_SPINNER});\n};\n\nexport const hideSpinner=(dispatch)=>{\n    dispatch({type:HIDE_SPINNER});\n};\n\nexport const userIdChange=(e, dispatch)=>{\n  const newUserId=e.target.value;\n  dispatch({type: USER_ID_CHANGE, payload: newUserId});\n};\n\nexport const passwordChange=(e, dispatch)=>{\n  const newPassword=e.target.value;\n  dispatch({type: PASSWORD_CHANGE, payload: newPassword});\n};\n\nexport const setErrorMessage=(errorMsg, dispatch)=>{\n  dispatch({type: SET_ERROR_MESSAGE, payload: errorMsg})\n};\n\nexport const onLogin=(payload, dispatch)=>{\n  dispatch({type: ON_LOGIN, payload: payload});\n};\n\nexport const onLogout=(payload, dispatch)=>{\n  dispatch({type: ON_LOGOUT, payload: payload});\n};\n\nexport const loadProblems=(dispatch)=>{\n    dispatch({type:SHOW_OPEN_SPINNER});\n    dispatch({type: LOAD_PROBLEMS});\n};\n\nexport const setProblems=(arr, dispatch)=>{\n  dispatch({type: SET_PROBLEMS, payload:arr});\n  //this.setState({problemsArray:arr});\n}\n\nexport const  setProblemsPage=(page, dispatch)=>{\n    dispatch({type: SET_PROBLEMS_PAGE, payload:page});\n    loadProblems(dispatch);\n}\n\nexport const prevProblemsPageClick=(e, state, dispatch)=>{\n  let pageArray=getPageArray(state.currentProblemsPage, state.problemsArray===undefined||state.problemsArray.length<state.pageSize);\n  if(pageArray.includes(state.currentProblemsPage-1)){\n    dispatch({type:PREVIOUS_PROBLEMS_PAGE});\n    loadProblems(dispatch);\n  }\n};\n\nexport const nextProblemsPageClick=(e, state, dispatch)=>{\n  let pageArray=getPageArray(state.currentProblemsPage, state.problemsArray===undefined||state.problemsArray.length<state.pageSize);\n  if(pageArray.includes(state.currentProblemsPage+1)){\n       dispatch({type:NEXT_PROBLEMS_PAGE});\n       loadProblems(dispatch);\n  }\n}\n\nexport const loadQuizes=(dispatch)=>{\n  dispatch({type:SHOW_OPEN_SPINNER});\n  dispatch({type: LOAD_QUIZES});\n};\n\nexport const setQuizes=(arr, dispatch)=>{\n  dispatch({type: SET_QUIZES, payload:arr});\n}\n\nexport const setStartedQuiz=(quizObj, dispatch)=>{\n  dispatch({type: SET_STARTED_QUIZ, payload:quizObj});\n}\n\nexport const setStartedQuizAnswers=(answersObj, dispatch)=>{\n  dispatch({type: SET_STARTED_QUIZ_ANSWERS, payload:answersObj});\n}\n\nexport const submitStartedQuiz=(dispatch)=>{\n  dispatch({type: SUBMIT_STARTED_QUIZ});\n}\n\nexport const submitQuiz=(globalState, dispatch)=>{\n  //console.log(this.state.startedQuizAnswers);\n  //console.log(this.state.startedQuiz);\n  var reqBody=\"quizId=\"+encodeURIComponent(globalState.startedQuiz.id);\n      reqBody+=\"&quizType=\"+encodeURIComponent(globalState.startedQuiz.type);\n      reqBody+='&quizInstanceId='+encodeURIComponent(globalState.startedQuiz.quizInstanceId);\n      reqBody+='&answersObject='+encodeURIComponent(JSON.stringify(globalState.startedQuizAnswers));\n\n      fetch(`/api/quizAnwersSubmit`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(\n        data=>{\n          //console.log(data);\n          if(data.insertstatus=== \"ok\"){\n            //localStorage.removeItem('startedQuiz');\n            //localStorage.removeItem('startedQuizAnswers');\n            //this.setState({startedQuiz:null, startedQuizAnswers:null});\n            submitStartedQuiz(dispatch)\n            alert('Quiz Submitted');\n          }\n        }\n      );\n};\n\nexport const setQuizesPage=(page, dispatch)=>{\n    dispatch({type: SET_QUIZES_PAGE, payload:page});\n    loadQuizes(dispatch);\n}\n\nexport const prevQuizesPageClick=(e, state, dispatch)=>{\n  let pageArray=getPageArray(state.currentQuizesPage, state.QuizesArray===undefined||state.quizesArray.length<state.pageSize);\n  if(pageArray.includes(state.currentQuizesPage-1)){\n    dispatch({type:PREVIOUS_QUIZES_PAGE});\n    loadQuizes(dispatch);\n  }\n};\n\nexport const nextQuizesPageClick=(e, state, dispatch)=>{\n  let pageArray=getPageArray(state.currentQuizesPage, state.quizesArray===undefined||state.quizesArray.length<state.pageSize);\n  if(pageArray.includes(state.currentQuizesPage+1)){\n       dispatch({type:NEXT_QUIZES_PAGE});\n       loadQuizes(dispatch);\n  }\n}\n\nexport const loadCourses=(dispatch)=>{\n  dispatch({type:SHOW_OPEN_SPINNER});\n  dispatch({type: LOAD_COURSES});\n};\n\nexport const setCourses=(arr, dispatch)=>{\n  dispatch({type: SET_COURSES, payload:arr});\n}\n\nexport const setCoursesPage=(page, dispatch)=>{\n    dispatch({type: SET_COURSES_PAGE, payload:page});\n    loadCourses(dispatch);\n}\n\nexport const prevCoursesPageClick=(e, state, dispatch)=>{\n  let pageArray=getPageArray(state.currentCoursesPage, state.coursesArray===undefined||state.coursesArray.length<state.pageSize);\n  if(pageArray.includes(state.currentCoursesPage-1)){\n    dispatch({type:PREVIOUS_COURSES_PAGE});\n    loadCourses(dispatch);\n  }\n};\n\nexport const nextCoursesPageClick=(e, state, dispatch)=>{\n  let pageArray=getPageArray(state.currentCoursesPage, state.coursesArray===undefined||state.coursesArray.length<state.pageSize);\n  if(pageArray.includes(state.currentCoursesPage+1)){\n       dispatch({type:NEXT_COURSES_PAGE});\n       loadCourses(dispatch);\n  }\n}\n\nexport const loadUsers=(dispatch)=>{\n  dispatch({type:SHOW_OPEN_SPINNER});\n  dispatch({type: LOAD_USERS});\n};\n\nexport const setUsers=(arr, dispatch)=>{\n  dispatch({type: SET_USERS, payload:arr});\n}\n\nexport const setUsersPage=(page, dispatch)=>{\n    dispatch({type: SET_USERS_PAGE, payload:page});\n    loadUsers(dispatch);\n}\n\nexport const prevUsersPageClick=(e, state, dispatch)=>{\n  let pageArray=getPageArray(state.currentUsersPage, state.usersArray===undefined||state.usersArray.length<state.pageSize);\n  if(pageArray.includes(state.currentUsersPage-1)){\n    dispatch({type:PREVIOUS_USERS_PAGE});\n    loadUsers(dispatch);\n  }\n};\n\nexport const nextUsersPageClick=(e, state, dispatch)=>{\n  let pageArray=getPageArray(state.currentUsersPage, state.usersArray===undefined||state.usersArray.length<state.pageSize);\n  if(pageArray.includes(state.currentUsersPage+1)){\n       dispatch({type:NEXT_USERS_PAGE});\n       loadUsers(dispatch);\n  }\n}\n\nexport const loadMeetings=(dispatch)=>{\n  dispatch({type:SHOW_OPEN_SPINNER});\n  dispatch({type: LOAD_MEETINGS});\n};\n\nexport const setMeetingsPage=(page, dispatch)=>{\n    dispatch({type: SET_MEETINGS_PAGE, payload:page});\n    loadMeetings(dispatch);\n}\n\nexport const prevMeetingsPageClick=(e, state, dispatch)=>{\n  let pageArray=getPageArray(state.currentMeetingsPage, state.meetingsArray===undefined||state.meetingsArray.length<state.pageSize);\n  if(pageArray.includes(state.currentMeetingsPage-1)){\n    dispatch({type:PREVIOUS_MEETINGS_PAGE});\n    loadMeetings(dispatch);\n  }\n};\n\nexport const nextMeetingsPageClick=(e, state, dispatch)=>{\n  let pageArray=getPageArray(state.currentMeetingsPage, state.meetingsArray===undefined||state.meetingsArray.length<state.pageSize);\n  if(pageArray.includes(state.currentMeetingsPage+1)){\n       dispatch({type:NEXT_MEETINGS_PAGE});\n       loadMeetings(dispatch);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}