{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/MeetingShowSelected.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport socketIOClient from \"socket.io-client\";\nimport data from \"./data\";\nimport '../css/Chat.css';\nimport VideoExt from './chat/VideoExt';\nimport SocketX from './chat/SocketX';\nimport PeerConnectionExt from './chat/PeerConnectionExt';\nconst ICE_SERVERS = [{\n  urls: 'turn:numb.viagenie.ca',\n  credential: 'muazkh',\n  username: 'webrtc@live.com'\n}, {\n  url: 'turn:192.158.29.39:3478?transport=tcp',\n  credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n  username: '28224511:1379330808'\n}, {\n  url: 'turn:turn.anyfirewall.com:443?transport=tcp',\n  credential: 'webrtc',\n  username: 'webrtc'\n}, {\n  url: 'turn:13.250.13.83:3478?transport=tcp',\n  credential: 'YzYNCouZM1mhqhmseWk6',\n  username: 'YzYNCouZM1mhqhmseWk6'\n}, {\n  urls: 'stun:stun.l.google.com:19302'\n},\n/*{ urls: 'stun:stun1.l.google.com:19302' },\n{ urls: 'stun:stun2.l.google.com:19302' },\n{ urls: 'stun:stun3.l.google.com:19302' },\n{ urls: 'stun:stun4.l.google.com:19302' },*/\n{\n  urls: 'stun:stun.ekiga.net'\n}];\n\nclass MeetingShowSelected extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSocketConnect = () => {\n      if (this.socket) {\n        this.socket.emit(\"map\", {\n          user: this.props.loggedInUserFullName\n        });\n        console.log(this.socket);\n        console.log(' mapped to ' + this.props.loggedInUserFullName);\n      }\n    };\n\n    this.state = {\n      meetingObj: {},\n      icons: data.icons\n    };\n    const {\n      params\n    } = this.props.match;\n    this.props.showSpinner();\n    let meetingId = params.id;\n    let organiserId = params.organiserId;\n    this.peerConnections = undefined; //this.socket = socketIOClient(ENDPOINT);\n\n    this.socket = socketIOClient(\"/\" + meetingId);\n    this.displayMediaOptions = {\n      video: {\n        cursor: \"always\"\n      },\n      audio: {\n        echoCancellation: true,\n        noiseSuppression: true\n      }\n    };\n    this.camMediaOptions = {\n      video: true,\n      audio: {\n        echoCancellation: true,\n        noiseSuppression: true\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props.match;\n    this.props.showSpinner();\n    let meetingId = params.id;\n    let organiserId = params.organiserId;\n    this.socket = socketIOClient(\"/\" + meetingId);\n\n    if (organiserId !== this.props.loggedInUser) {\n      this.peerConnections = new RTCPeerConnection({\n        iceServers: ICE_SERVERS\n      });\n    } else this.peerConnections = {};\n\n    this.props.hideSpinner();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, \"Meeting Show Selected\", /*#__PURE__*/React.createElement(SocketX, {\n      socket: this.socket,\n      onSocketConnect: this.onSocketConnect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 8\n      }\n    }));\n  }\n\n}\n\nexport default MeetingShowSelected;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/MeetingShowSelected.js"],"names":["React","Redirect","socketIOClient","data","VideoExt","SocketX","PeerConnectionExt","ICE_SERVERS","urls","credential","username","url","MeetingShowSelected","Component","constructor","props","onSocketConnect","socket","emit","user","loggedInUserFullName","console","log","state","meetingObj","icons","params","match","showSpinner","meetingId","id","organiserId","peerConnections","undefined","displayMediaOptions","video","cursor","audio","echoCancellation","noiseSuppression","camMediaOptions","componentDidMount","loggedInUser","RTCPeerConnection","iceServers","hideSpinner","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {  Redirect } from 'react-router-dom';\nimport socketIOClient from \"socket.io-client\";\nimport data from \"./data\";\nimport '../css/Chat.css';\nimport VideoExt from './chat/VideoExt';\nimport SocketX from './chat/SocketX';\nimport PeerConnectionExt from './chat/PeerConnectionExt';\n\nconst ICE_SERVERS=[\n  {\n    urls: 'turn:numb.viagenie.ca',\n    credential: 'muazkh',\n    username: 'webrtc@live.com'\n  },\n  {\n      url: 'turn:192.158.29.39:3478?transport=tcp',\n      credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n      username: '28224511:1379330808'\n  },\n  {\n      url: 'turn:turn.anyfirewall.com:443?transport=tcp',\n      credential: 'webrtc',\n      username: 'webrtc'\n  },\n  {\n      url: 'turn:13.250.13.83:3478?transport=tcp',\n      credential: 'YzYNCouZM1mhqhmseWk6',\n      username: 'YzYNCouZM1mhqhmseWk6'\n  },\n  { urls: 'stun:stun.l.google.com:19302' },\n  /*{ urls: 'stun:stun1.l.google.com:19302' },\n  { urls: 'stun:stun2.l.google.com:19302' },\n  { urls: 'stun:stun3.l.google.com:19302' },\n  { urls: 'stun:stun4.l.google.com:19302' },*/\n  { urls: 'stun:stun.ekiga.net'}\n];\n\nclass MeetingShowSelected extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      meetingObj:{},\n      icons: data.icons\n    }\n    const {params}= this.props.match;\n\n    this.props.showSpinner();\n    let meetingId=params.id;\n    let organiserId=params.organiserId;\n\n\n\n    this.peerConnections = undefined;\n    //this.socket = socketIOClient(ENDPOINT);\n    this.socket = socketIOClient(\"/\"+meetingId);\n\n    this.displayMediaOptions = {\n      video: {\n        cursor: \"always\"\n      },\n      audio: {\n        echoCancellation: true,\n        noiseSuppression: true\n      }\n    };\n    this.camMediaOptions={\n      video: true,\n      audio: {\n        echoCancellation: true,\n        noiseSuppression: true\n      }\n    };\n  }\n\n  onSocketConnect=()=>{\n    if(this.socket){\n      this.socket.emit(\"map\", {\n        user: this.props.loggedInUserFullName\n      });\n      console.log(this.socket);\n      console.log(' mapped to '+this.props.loggedInUserFullName);\n    }\n  }\n\n  componentDidMount(){\n    const {params}= this.props.match;\n\n    this.props.showSpinner();\n    let meetingId=params.id;\n    let organiserId=params.organiserId;\n    this.socket = socketIOClient(\"/\"+meetingId);\n    if(organiserId!==this.props.loggedInUser){\n      this.peerConnections= new RTCPeerConnection({ iceServers: ICE_SERVERS });\n    }\n    else\n      this.peerConnections={};\n\n    this.props.hideSpinner();\n  }\n\n  render(){\n    return (\n      <div>\n      Meeting Show Selected\n       <SocketX\n        socket={this.socket}\n        onSocketConnect={this.onSocketConnect}\n        />\n      </div>\n    )\n  }\n}\n\nexport default MeetingShowSelected;\n"]},"metadata":{},"sourceType":"module"}