{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/MeetingShowSelected.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport socketIOClient from \"socket.io-client\";\nimport data from \"./data\";\nimport '../css/Chat.css';\nimport VideoExt from './chat/VideoExt';\nimport SocketX from './chat/SocketX';\nimport PeerConnectionExt from './chat/PeerConnectionExt';\nconst ICE_SERVERS = [{\n  urls: 'turn:numb.viagenie.ca',\n  credential: 'muazkh',\n  username: 'webrtc@live.com'\n}, {\n  url: 'turn:192.158.29.39:3478?transport=tcp',\n  credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n  username: '28224511:1379330808'\n}, {\n  url: 'turn:turn.anyfirewall.com:443?transport=tcp',\n  credential: 'webrtc',\n  username: 'webrtc'\n}, {\n  url: 'turn:13.250.13.83:3478?transport=tcp',\n  credential: 'YzYNCouZM1mhqhmseWk6',\n  username: 'YzYNCouZM1mhqhmseWk6'\n}, {\n  urls: 'stun:stun.l.google.com:19302'\n},\n/*{ urls: 'stun:stun1.l.google.com:19302' },\n{ urls: 'stun:stun2.l.google.com:19302' },\n{ urls: 'stun:stun3.l.google.com:19302' },\n{ urls: 'stun:stun4.l.google.com:19302' },*/\n{\n  urls: 'stun:stun.ekiga.net'\n}];\n\nclass MeetingShowSelected extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSocketConnect = () => {\n      if (this.socket) {\n        this.socket.emit(\"map\", {\n          userName: this.props.loggedInUserFullName,\n          userId: this.props.loggedInUser\n        });\n        console.log(this.socket);\n        console.log(' mapped to ' + this.props.loggedInUser);\n      }\n    };\n\n    this.callUser = async userId => {\n      console.log('Call User ' + userId + ' ' + this.state.userNameMap[userId]);\n      const offer = await this.peerConnections.createOffer();\n      await this.peerConnections.setLocalDescription(new RTCSessionDescription(offer));\n      console.log(JSON.stringify(offer)); //console.log(this.peerConnection);\n\n      this.socket.emit(\"call-user\", {\n        offer,\n        to: userId,\n        from: this.props.loggedInUser\n      });\n      this.setState({\n        callMade: true,\n        message: `Talking with: user: ${this.state.userNameMap[userId]} (${userId})`\n      });\n    };\n\n    this.onUpdateUserList = data => {\n      let userIds = [...this.state.userIds];\n      let newUserIds = data.userIds;\n      newUserIds.forEach(id => {\n        if (!userIds.includes(id)) userIds.push(id);\n      });\n      console.log('In update user list');\n      console.log(userIds);\n      console.log(data.nameMap);\n      this.setState({\n        userIds,\n        userNameMap: data.nameMap\n      }, () => {\n        if (userIds.includes(this.organiserId) && !this.state.callMade) this.callUser(this.organiserId);\n      });\n    };\n\n    this.state = {\n      icons: data.icons,\n      userIds: [],\n      userNameMap: {},\n      message: 'Select a user on the left menu to start sharing.',\n      callMade: false\n    };\n    const {\n      params\n    } = this.props.match;\n    this.meetingId = params.id;\n    this.organiserId = params.organiserId;\n\n    if (this.organiserId !== this.props.loggedInUser) {\n      this.peerConnections = new RTCPeerConnection({\n        iceServers: ICE_SERVERS\n      });\n    } else this.peerConnections = {}; //this.socket = socketIOClient(ENDPOINT);\n\n\n    this.socket = socketIOClient(\"/\" + this.meetingId);\n    this.displayMediaOptions = {\n      video: {\n        cursor: \"always\"\n      },\n      audio: {\n        echoCancellation: true,\n        noiseSuppression: true\n      }\n    };\n    this.camMediaOptions = {\n      video: true,\n      audio: {\n        echoCancellation: true,\n        noiseSuppression: true\n      }\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    if (this.props.loggedInUserFullName === '') {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/errorLogin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 16\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, \"Meeting Show Selected\", /*#__PURE__*/React.createElement(SocketX, {\n        socket: this.socket,\n        onSocketConnect: this.onSocketConnect,\n        onUpdateUserList: this.onUpdateUserList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 14\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"active-users-panel\",\n        id: \"active-user-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"panel-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 23\n        }\n      }, \"Callable Users:\"), this.state.userIds.map(val => /*#__PURE__*/React.createElement(\"div\", {\n        id: val,\n        key: val,\n        className: \"active-user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 57\n        }\n      }, this.state.userNameMap[val], \"(\", val, \")\"))))));\n    }\n  }\n\n}\n\nexport default MeetingShowSelected;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/MeetingShowSelected.js"],"names":["React","Redirect","socketIOClient","data","VideoExt","SocketX","PeerConnectionExt","ICE_SERVERS","urls","credential","username","url","MeetingShowSelected","Component","constructor","props","onSocketConnect","socket","emit","userName","loggedInUserFullName","userId","loggedInUser","console","log","callUser","state","userNameMap","offer","peerConnections","createOffer","setLocalDescription","RTCSessionDescription","JSON","stringify","to","from","setState","callMade","message","onUpdateUserList","userIds","newUserIds","forEach","id","includes","push","nameMap","organiserId","icons","params","match","meetingId","RTCPeerConnection","iceServers","displayMediaOptions","video","cursor","audio","echoCancellation","noiseSuppression","camMediaOptions","componentDidMount","render","map","val"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {  Redirect } from 'react-router-dom';\nimport socketIOClient from \"socket.io-client\";\nimport data from \"./data\";\nimport '../css/Chat.css';\nimport VideoExt from './chat/VideoExt';\nimport SocketX from './chat/SocketX';\nimport PeerConnectionExt from './chat/PeerConnectionExt';\n\nconst ICE_SERVERS=[\n  {\n    urls: 'turn:numb.viagenie.ca',\n    credential: 'muazkh',\n    username: 'webrtc@live.com'\n  },\n  {\n      url: 'turn:192.158.29.39:3478?transport=tcp',\n      credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n      username: '28224511:1379330808'\n  },\n  {\n      url: 'turn:turn.anyfirewall.com:443?transport=tcp',\n      credential: 'webrtc',\n      username: 'webrtc'\n  },\n  {\n      url: 'turn:13.250.13.83:3478?transport=tcp',\n      credential: 'YzYNCouZM1mhqhmseWk6',\n      username: 'YzYNCouZM1mhqhmseWk6'\n  },\n  { urls: 'stun:stun.l.google.com:19302' },\n  /*{ urls: 'stun:stun1.l.google.com:19302' },\n  { urls: 'stun:stun2.l.google.com:19302' },\n  { urls: 'stun:stun3.l.google.com:19302' },\n  { urls: 'stun:stun4.l.google.com:19302' },*/\n  { urls: 'stun:stun.ekiga.net'}\n];\n\nclass MeetingShowSelected extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      icons: data.icons,\n      userIds:[],\n      userNameMap:{},\n      message: 'Select a user on the left menu to start sharing.',\n      callMade: false,\n    }\n    const {params}= this.props.match;\n\n    this.meetingId=params.id;\n    this.organiserId=params.organiserId;\n\n    if(this.organiserId!==this.props.loggedInUser){\n      this.peerConnections= new RTCPeerConnection({ iceServers: ICE_SERVERS });\n    }\n    else\n      this.peerConnections={};\n    //this.socket = socketIOClient(ENDPOINT);\n    this.socket = socketIOClient(\"/\"+this.meetingId);\n\n    this.displayMediaOptions = {\n      video: {\n        cursor: \"always\"\n      },\n      audio: {\n        echoCancellation: true,\n        noiseSuppression: true\n      }\n    };\n    this.camMediaOptions={\n      video: true,\n      audio: {\n        echoCancellation: true,\n        noiseSuppression: true\n      }\n    };\n  }\n\n  onSocketConnect=()=>{\n    if(this.socket){\n      this.socket.emit(\"map\", {\n        userName: this.props.loggedInUserFullName,\n        userId: this.props.loggedInUser\n      });\n      console.log(this.socket);\n      console.log(' mapped to '+this.props.loggedInUser);\n    }\n  }\n\n  callUser=async (userId)=>{\n    console.log('Call User '+userId+' '+this.state.userNameMap[userId]);\n    const offer = await this.peerConnections.createOffer();\n    await this.peerConnections.setLocalDescription(new RTCSessionDescription(offer));\n    console.log(JSON.stringify(offer));\n    //console.log(this.peerConnection);\n    this.socket.emit(\"call-user\", {\n      offer,\n      to: userId,\n      from: this.props.loggedInUser\n    });\n    this.setState({callMade: true, message: `Talking with: user: ${this.state.userNameMap[userId]} (${userId})`});\n  }\n\n  onUpdateUserList=(data) => {\n    let userIds=[...this.state.userIds];\n    let newUserIds=data.userIds;\n    newUserIds.forEach(id=>{\n      if(!userIds.includes(id))\n        userIds.push(id);\n    });\n\n    console.log('In update user list');\n    console.log(userIds);\n    console.log(data.nameMap);\n    this.setState({userIds, userNameMap: data.nameMap}, ()=>{\n      if(userIds.includes(this.organiserId) && !this.state.callMade)\n        this.callUser(this.organiserId);\n    });\n  };\n\n  componentDidMount(){\n\n  }\n\n  render(){\n      if(this.props.loggedInUserFullName===''){\n        return <Redirect to=\"/errorLogin\"/>\n      }\n      else\n      {\n          return (\n            <div>\n            Meeting Show Selected\n             <SocketX\n              socket={this.socket}\n              onSocketConnect={this.onSocketConnect}\n              onUpdateUserList={this.onUpdateUserList}\n              />\n              <div className=\"content-container\">\n                    <div className=\"active-users-panel\"  id=\"active-user-container\">\n                      <h3 className=\"panel-title\">Callable Users:</h3>\n                      {this.state.userIds.map(val=>(<div id={val} key={val}    className=\"active-user\">\n                                                        <p className=\"username\">\n                                                          {this.state.userNameMap[val]}({val})\n                                                        </p>\n                                                       </div>\n                                                       )\n                                            )}\n                    </div>\n              </div>\n            </div>\n          )\n      }\n  }\n}\n\nexport default MeetingShowSelected;\n"]},"metadata":{},"sourceType":"module"}