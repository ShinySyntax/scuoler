{"ast":null,"code":"import _toConsumableArray from\"/home/mathew/javascript/ischools-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/mathew/javascript/ischools-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mathew/javascript/ischools-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/mathew/javascript/ischools-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/mathew/javascript/ischools-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/mathew/javascript/ischools-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Redirect}from'react-router-dom';var QuizInsert=/*#__PURE__*/function(_React$Component){_inherits(QuizInsert,_React$Component);var _super=_createSuper(QuizInsert);function QuizInsert(props){var _this;_classCallCheck(this,QuizInsert);_this=_super.call(this,props);_this.state={spinner:false,duration_minutes:30,description:'',courseId:'',courseName:''};_this.baseState={description:''};_this.descriptionChange=_this.descriptionChange.bind(_assertThisInitialized(_this));_this.selectChange=_this.selectChange.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.durationChange=_this.durationChange.bind(_assertThisInitialized(_this));return _this;}_createClass(QuizInsert,[{key:\"handleSubmit\",value:function handleSubmit(){var _this2=this;if(this.state.description===''){alert('Description cannot be empty');return;}else if(this.state.duration_minutes===''){alert('Duration cannot be empty');return;}else if(isNaN(this.state.duration_minutes)){alert('Duration has to be a number');return;}else{this.props.showSpinner();var reqBody=\"quizDescription=\"+encodeURIComponent(this.state.description);reqBody+=\"&duration_minutes=\"+encodeURIComponent(this.state.duration_minutes);reqBody+=\"&courseId=\"+encodeURIComponent(this.state.courseId);reqBody+='&authorName='+encodeURIComponent(this.props.loggedInUser);fetch(\"/api/insertQuizAction\",{headers:{'Accept':'application/json','Content-type':'application/x-www-form-urlencoded'},method:'POST',body:reqBody}).then(function(res){return res.json();}).then(function(data){//if(data.updatestatus==\"ok\")\nvar quizesArrayCopy=_toConsumableArray(_this2.props.quizesArray);var obj={id:data.quizId,description:_this2.state.description,duration_minutes:_this2.state.duration_minutes,name:_this2.state.courseName,author_id:_this2.props.loggedInUser};quizesArrayCopy.push(obj);_this2.props.setQuizes(quizesArrayCopy);_this2.setState(_this2.baseState);_this2.props.hideSpinner();alert('Quiz inserted');window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/quizesBrowse\");});}}},{key:\"durationChange\",value:function durationChange(e){this.setState({duration_minutes:e.target.value});}},{key:\"descriptionChange\",value:function descriptionChange(e){if(this.props.coursesArray.length>0)this.setState({courseId:this.props.coursesArray[0].id,courseName:this.props.coursesArray[0].name});var new_description=e.target.value;//console.log(e.target.value);\nthis.setState({description:new_description});}},{key:\"componentDidMount\",value:function componentDidMount(){this.props.loadCourses();/*this.setState({spinner:true});\n    fetch(`/api/getCourses`, {\n      headers:{\n        'Accept':'application/json'\n      }\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      this.setState({spinner:false, coursesArray: data});\n    })*/}},{key:\"selectChange\",value:function selectChange(e){//console.log(e.target.value);\nvar new_courseId=e.target.value;var new_courseName=e.target.options[e.target.selectedIndex].text;this.setState({courseId:new_courseId,courseName:new_courseName});}},{key:\"render\",value:function render(){if(this.props.loggedInUser===''){return/*#__PURE__*/React.createElement(Redirect,{to:\"/errorLogin\"});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"a\",{class:\"HomeLink\",href:\"/\"},\"back to home\"),/*#__PURE__*/React.createElement(\"div\",{class:\"h1\"},\"Insert Quiz\"),/*#__PURE__*/React.createElement(\"fieldset\",null,\"Duration (minutes):\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"durationMinutes\",style:{marginLeft:'23px'},onChange:this.durationChange,value:this.state.duration_minutes}),/*#__PURE__*/React.createElement(\"br\",null),\"Quiz Description:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"textarea\",{id:\"quizDescription\",name:\"quizDescription\",type:\"text\",rows:\"10\",style:{width:'90%'},onChange:this.descriptionChange,value:this.state.description}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"Course Id:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"select\",{id:\"courseId\",onChange:this.selectChange,name:\"courseId\",required:\"true\"},this.props.coursesArray.map(function(obj){return/*#__PURE__*/React.createElement(\"option\",{value:obj.id},obj.name);})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"Author:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"input\",{id:\"authorName\",name:\"authorName\",type:\"text\",style:{width:'100px',textAlign:'center'},required:\"true\",value:this.props.loggedInUser,readonly:true}),\" \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"         \",/*#__PURE__*/React.createElement(\"input\",{type:\"button\",value:\"Insert Quiz\",onClick:this.handleSubmit})));}}]);return QuizInsert;}(React.Component);export default QuizInsert;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/QuizInsert.js"],"names":["React","Redirect","QuizInsert","props","state","spinner","duration_minutes","description","courseId","courseName","baseState","descriptionChange","bind","selectChange","handleSubmit","durationChange","alert","isNaN","showSpinner","reqBody","encodeURIComponent","loggedInUser","fetch","headers","method","body","then","res","json","data","quizesArrayCopy","quizesArray","obj","id","quizId","name","author_id","push","setQuizes","setState","hideSpinner","window","location","assign","hostname","port","e","target","value","coursesArray","length","new_description","loadCourses","new_courseId","new_courseName","options","selectedIndex","text","marginLeft","width","map","textAlign","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {  Redirect } from 'react-router-dom';\n\nclass QuizInsert extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      spinner:false,\n      duration_minutes:30,\n      description:'',\n      courseId:'',\n      courseName:''\n    }\n    this.baseState={\n      description:''\n    }\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.selectChange=this.selectChange.bind(this);\n    this.handleSubmit=this.handleSubmit.bind(this);\n    this.durationChange=this.durationChange.bind(this);\n  }\n\n  handleSubmit(){\n    if(this.state.description===''){\n      alert('Description cannot be empty');\n      return;\n    }\n    else if(this.state.duration_minutes===''){\n      alert('Duration cannot be empty');\n      return;\n    }\n    else if(isNaN(this.state.duration_minutes)){\n      alert('Duration has to be a number');\n      return;\n    }\n    else{\n      this.props.showSpinner();\n      var reqBody=\"quizDescription=\"+encodeURIComponent(this.state.description);\n          reqBody+=\"&duration_minutes=\"+encodeURIComponent(this.state.duration_minutes);\n      reqBody+=\"&courseId=\"+encodeURIComponent(this.state.courseId);\n      reqBody+='&authorName='+encodeURIComponent(this.props.loggedInUser);\n\n      fetch(`/api/insertQuizAction`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data=>{\n          //if(data.updatestatus==\"ok\")\n              let quizesArrayCopy=[...this.props.quizesArray];\n              let obj={\n                id: data.quizId,\n                description: this.state.description,\n                duration_minutes: this.state.duration_minutes,\n                name:this.state.courseName,\n                author_id:this.props.loggedInUser\n              };\n              quizesArrayCopy.push(obj);\n              this.props.setQuizes(quizesArrayCopy);\n              this.setState(this.baseState);\n              this.props.hideSpinner();\n              alert('Quiz inserted');\n              window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/quizesBrowse\");\n      })\n\n    }\n\n  }\n\n  durationChange(e){\n    this.setState({duration_minutes:e.target.value})\n  }\n\n  descriptionChange(e){\n    if(this.props.coursesArray.length>0)\n        this.setState({courseId:this.props.coursesArray[0].id, courseName:this.props.coursesArray[0].name});\n    const new_description=e.target.value;\n    //console.log(e.target.value);\n    this.setState({description:new_description});\n  }\n\n  componentDidMount(){\n    this.props.loadCourses();\n    /*this.setState({spinner:true});\n    fetch(`/api/getCourses`, {\n      headers:{\n        'Accept':'application/json'\n      }\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      this.setState({spinner:false, coursesArray: data});\n    })*/\n  }\n\n  selectChange(e){\n    //console.log(e.target.value);\n    var new_courseId=e.target.value;\n    var new_courseName=e.target.options[e.target.selectedIndex].text;\n    this.setState({courseId:new_courseId, courseName:new_courseName});\n  }\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n    return (\n      <div>\n      <a class=\"HomeLink\" href=\"/\">back to home</a>\n      <div class=\"h1\">\n        Insert Quiz\n      </div>\n        <fieldset>\n        Duration (minutes):<br/>\n        <input type=\"text\" id=\"durationMinutes\" style={{marginLeft:'23px'}}\n        onChange={this.durationChange}\n        value={this.state.duration_minutes}></input><br/>\n          Quiz Description:<br/>\n          <textarea id=\"quizDescription\" name=\"quizDescription\" type=\"text\" rows=\"10\"\n          style={{width:'90%'}}\n          onChange={this.descriptionChange}\n          value={this.state.description}\n           >\n          </textarea>\n          <br/>\n          <br/>\n          Course Id:<br/>\n          <select id=\"courseId\" onChange={this.selectChange} name=\"courseId\" required=\"true\">\n          {\n              this.props.coursesArray.map(obj=>(\n                <option value={obj.id}>{obj.name}</option>\n                )\n              )\n          }\n          </select>\n          <br/><br/>\n          Author:<br/>\n          <input id=\"authorName\" name=\"authorName\" type=\"text\" style={{width:'100px', textAlign: 'center'}}\n          required=\"true\" value={this.props.loggedInUser} readonly>\n          </input> <br/><br/>\n<br/>         <input type=\"button\" value=\"Insert Quiz\" onClick={this.handleSubmit}/>\n        </fieldset>\n      </div>\n    )\n  }\n\n}\n\nexport default QuizInsert;\n"]},"metadata":{},"sourceType":"module"}