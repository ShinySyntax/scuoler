{"ast":null,"code":"module.exports = after;\n\nfunction after(count, callback, err_cb) {\n  var bail = false;\n  err_cb = err_cb || noop;\n  proxy.count = count;\n  return count === 0 ? callback() : proxy;\n\n  function proxy(err, result) {\n    if (proxy.count <= 0) {\n      throw new Error('after called too many times');\n    }\n\n    --proxy.count; // after first error, rest are passed to err_cb\n\n    if (err) {\n      bail = true;\n      callback(err); // future error callbacks will go to error handler\n\n      callback = err_cb;\n    } else if (proxy.count === 0 && !bail) {\n      callback(null, result);\n    }\n  }\n}\n\nfunction noop() {}","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/node_modules/after/index.js"],"names":["module","exports","after","count","callback","err_cb","bail","noop","proxy","err","result","Error"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,KAAjB;;AAEA,SAASA,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgCC,MAAhC,EAAwC;AACpC,MAAIC,IAAI,GAAG,KAAX;AACAD,EAAAA,MAAM,GAAGA,MAAM,IAAIE,IAAnB;AACAC,EAAAA,KAAK,CAACL,KAAN,GAAcA,KAAd;AAEA,SAAQA,KAAK,KAAK,CAAX,GAAgBC,QAAQ,EAAxB,GAA6BI,KAApC;;AAEA,WAASA,KAAT,CAAeC,GAAf,EAAoBC,MAApB,EAA4B;AACxB,QAAIF,KAAK,CAACL,KAAN,IAAe,CAAnB,EAAsB;AAClB,YAAM,IAAIQ,KAAJ,CAAU,6BAAV,CAAN;AACH;;AACD,MAAEH,KAAK,CAACL,KAAR,CAJwB,CAMxB;;AACA,QAAIM,GAAJ,EAAS;AACLH,MAAAA,IAAI,GAAG,IAAP;AACAF,MAAAA,QAAQ,CAACK,GAAD,CAAR,CAFK,CAGL;;AACAL,MAAAA,QAAQ,GAAGC,MAAX;AACH,KALD,MAKO,IAAIG,KAAK,CAACL,KAAN,KAAgB,CAAhB,IAAqB,CAACG,IAA1B,EAAgC;AACnCF,MAAAA,QAAQ,CAAC,IAAD,EAAOM,MAAP,CAAR;AACH;AACJ;AACJ;;AAED,SAASH,IAAT,GAAgB,CAAE","sourcesContent":["module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n"]},"metadata":{},"sourceType":"script"}