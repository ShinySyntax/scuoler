{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/QuizShowSelected.js\";\nimport React from 'react';\nimport QuizEditDialog from './QuizEditDialog';\nimport { Redirect } from 'react-router-dom';\n\nclass QuizShowSelected extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quizObj: {},\n      problemsArray: [],\n      showEditQuizDialog: false,\n      quizObjForEdit: {}\n    };\n    this.editQuizHandler = this.editQuizHandler.bind(this);\n    this.handleEditQuizDialogDismiss = this.handleEditQuizDialogDismiss.bind(this);\n    this.saveUpdateHandler = this.saveUpdateHandler.bind(this);\n    this.descriptionChange = this.descriptionChange.bind(this);\n    this.courseNameChange = this.courseNameChange.bind(this);\n    this.selectChange = this.selectChange.bind(this);\n    this.durationChange = this.durationChange.bind(this);\n  }\n\n  handleEditQuizDialogDismiss(e) {\n    this.setState({\n      showEditQuizDialog: false,\n      quizObjForEdit: this.state.quizObj\n    });\n  }\n\n  saveUpdateHandler(e) {\n    this.props.showSpinner(); //console.log(newCourseObj);\n\n    var reqBody = \"id=\" + encodeURIComponent(this.state.quizObjForEdit.id);\n    reqBody += '&course_id=' + encodeURIComponent(this.state.quizObjForEdit.course_id);\n    reqBody += '&description=' + encodeURIComponent(this.state.quizObjForEdit.description);\n    reqBody += '&duration_minutes=' + encodeURIComponent(this.state.quizObjForEdit.duration_minutes);\n    fetch(`/api/updateQuiz`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    }).then(res => res.json()).then(data => {\n      //console.log(data);\n      if (data.updatestatus === \"ok\") {\n        this.props.loadQuizes();\n        let quizesArrayCopy = JSON.parse(JSON.stringify(this.props.quizesArray));\n        quizesArrayCopy.forEach(obj => {\n          if (obj.id === this.state.quizObjForEdit.id) {\n            obj.courseName = this.state.quizObjForEdit.courseName;\n            obj.course_id = this.state.quizObjForEdit.course_id;\n            obj.description = this.state.quizObjForEdit.description;\n            obj.duration_minutes = this.state.quizObjForEdit.duration_minutes;\n          }\n        });\n        this.props.setQuizes(quizesArrayCopy);\n        this.setState({\n          quizObj: this.state.quizObjForEdit,\n          showEditQuizDialog: false\n        });\n        this.props.hideSpinner();\n        alert('Quiz updated');\n      } else {\n        alert('Quiz updation failed!');\n      }\n    });\n  }\n\n  descriptionChange(e) {\n    const copied = Object.assign({}, this.state.quizObjForEdit);\n    copied.description = e.target.value;\n    this.setState({\n      quizObjForEdit: copied\n    });\n  }\n\n  courseNameChange(e) {\n    const copied = Object.assign({}, this.state.quizObjForEdit);\n    copied.courseName = e.target.value;\n    this.setState({\n      quizObjForEdit: copied\n    });\n  }\n\n  durationChange(e) {\n    const copied = Object.assign({}, this.state.quizObjForEdit);\n    copied.duration_minutes = e.target.value;\n    this.setState({\n      quizObjForEdit: copied\n    });\n  }\n\n  componentDidMount() {\n    this.props.showSpinner();\n    const {\n      params\n    } = this.props.match;\n    var reqBody = \"quizId=\" + encodeURIComponent(params.id);\n    fetch(`/api/getTheQuiz`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    }).then(res => res.json()).then(data => {\n      data.id = params.id; //console.log(data);\n\n      fetch(`/api/getProblemListForQuiz`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data1 => {\n        console.log(data1);\n        this.setState({\n          quizObj: data,\n          quizObjForEdit: data,\n          problemsArray: data1\n        });\n        this.props.hideSpinner();\n      });\n    });\n  }\n\n  editQuizHandler() {\n    this.setState({\n      showEditQuizDialog: true\n    });\n  }\n\n  selectChange(e) {\n    const copied = Object.assign({}, this.state.quizObjForEdit);\n    var new_course_id = e.target.value;\n    var new_course_name = e.target.options[e.target.selectedIndex].text;\n    copied.course_id = new_course_id;\n    copied.courseName = new_course_name; //console.log(copied);\n\n    this.setState({\n      quizObjForEdit: copied\n    });\n  }\n\n  deleteQuizHandler(id) {\n    let b = window.confirm('Are you sure you want to delete');\n\n    if (b === true) {\n      this.props.showSpinner();\n      var reqBody = \"id=\" + encodeURIComponent(id);\n      fetch(`/api/deleteQuiz`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data => {\n        if (data.deletestatus === \"ok\") {\n          let quizesArrayCopy = this.props.quizesArray.filter(obj => obj.id !== id);\n          this.props.setQuizes(quizesArrayCopy);\n          this.props.hideSpinner();\n          alert('Quiz deleted');\n          window.location.assign(\"http://\" + window.location.hostname + ':' + window.location.port + \"/quizesBrowse\");\n        }\n      });\n    } //end of if\n\n  }\n  /* Toggle between showing and hiding the navigation menu links when the user clicks on the hamburger menu / bar icon */\n\n\n  toggleNavDisplay() {\n    var x = document.getElementById(\"TopNav\");\n\n    if (x.className === \"TopNav\") {\n      x.className += \" responsive\";\n    } else {\n      x.className = \"TopNav\";\n    }\n  }\n\n  render() {\n    if (this.props.loggedInUser === '') {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/errorLogin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"HomeLink\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, \"back to home\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, this.state.quizObj.description), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 12\n      }\n    }, \"Course:\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: `http://${window.location.hostname}:${window.location.port}/courseShowSelected/${this.state.quizObj.course_id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 12\n      }\n    }, this.state.quizObj.courseName), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 12\n      }\n    }, \"Duration (minutes):\"), \" \", this.state.quizObj.duration_minutes, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 12\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"TopNav\",\n      className: \"TopNav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"javascript:void(0);\",\n      class: \"icon\",\n      onClick: () => this.toggleNavDisplay(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-bars\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"LeftButton\",\n      onClick: () => this.props.startQuiz(this.state.quizObj),\n      id: `s${this.state.quizObj.id}`,\n      value: \"Start Quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"LeftButton\",\n      id: `a${this.state.quizObj.id}`,\n      value: \"Add To Course\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }), this.props.loggedInUser === this.state.quizObj.instructorId || this.props.admin === \"1\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"LeftButton\",\n      onClick: () => this.editQuizHandler(),\n      id: `e${this.state.quizObj.id}`,\n      value: \"Edit Quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"LeftButton\",\n      onClick: () => this.deleteQuizHandler(this.state.quizObj.id),\n      id: `d${this.state.quizObj.id}`,\n      value: \"Delete Quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }\n    })) : null), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, \" Instructor:\"), \" \", this.state.quizObj.instructorId, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 16\n      }\n    }), this.props.isQuizStarted(this.state.quizObj.id) ? /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, this.state.problemsArray.map(obj => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }\n    }, \"Question: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Question\",\n      dangerouslySetInnerHTML: {\n        __html: obj.description\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 26\n      }\n    }, \"Options\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 40\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: `${obj.id}$option1`,\n      onChange: e => this.props.optionChange(obj.id, e.target.value),\n      checked: this.props.startedQuizAnswers != null && this.props.startedQuizAnswers[obj.id] === \"1\",\n      name: `${obj.id}$`,\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: obj.option1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 75\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: `${obj.id}$option2`,\n      onChange: e => this.props.optionChange(obj.id, e.target.value),\n      checked: this.props.startedQuizAnswers != null && this.props.startedQuizAnswers[obj.id] === \"2\",\n      name: `${obj.id}$`,\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: obj.option2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 75\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: `${obj.id}$option3`,\n      onChange: e => this.props.optionChange(obj.id, e.target.value),\n      checked: this.props.startedQuizAnswers != null && this.props.startedQuizAnswers[obj.id] === \"3\",\n      name: `${obj.id}$`,\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: obj.option3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 75\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: `${obj.id}$option4`,\n      onChange: e => this.props.optionChange(obj.id, e.target.value),\n      checked: this.props.startedQuizAnswers != null && this.props.startedQuizAnswers[obj.id] === \"4\",\n      name: `${obj.id}$`,\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: obj.option4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 75\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"LeftButton\",\n      onClick: e => {\n        if (window.confirm('Are you sure you want to submit the quiz:' + this.state.quizObj.description) === true) this.props.submitQuiz();\n      },\n      value: \"Submit Quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 12\n      }\n    })) : null, /*#__PURE__*/React.createElement(QuizEditDialog, {\n      objectForEdit: this.state.quizObjForEdit,\n      show: this.state.showEditQuizDialog,\n      handleDismiss: this.handleEditQuizDialogDismiss,\n      handleSubmit: this.saveUpdateHandler,\n      descriptionChange: this.descriptionChange,\n      courseNameChange: this.courseNameChange,\n      loadCourses: this.props.loadCourses,\n      coursesArray: this.props.coursesArray,\n      selectChange: this.selectChange,\n      durationChange: this.durationChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default QuizShowSelected;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/QuizShowSelected.js"],"names":["React","QuizEditDialog","Redirect","QuizShowSelected","Component","constructor","props","state","quizObj","problemsArray","showEditQuizDialog","quizObjForEdit","editQuizHandler","bind","handleEditQuizDialogDismiss","saveUpdateHandler","descriptionChange","courseNameChange","selectChange","durationChange","e","setState","showSpinner","reqBody","encodeURIComponent","id","course_id","description","duration_minutes","fetch","headers","method","body","then","res","json","data","updatestatus","loadQuizes","quizesArrayCopy","JSON","parse","stringify","quizesArray","forEach","obj","courseName","setQuizes","hideSpinner","alert","copied","Object","assign","target","value","componentDidMount","params","match","data1","console","log","new_course_id","new_course_name","options","selectedIndex","text","deleteQuizHandler","b","window","confirm","deletestatus","filter","location","hostname","port","toggleNavDisplay","x","document","getElementById","className","render","loggedInUser","startQuiz","instructorId","admin","isQuizStarted","map","__html","optionChange","startedQuizAnswers","option1","option2","option3","option4","submitQuiz","loadCourses","coursesArray"],"mappings":"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","sourcesContent":["import React from 'react';\nimport QuizEditDialog from './QuizEditDialog';\nimport {  Redirect } from 'react-router-dom';\n\nclass QuizShowSelected extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      quizObj:{},\n      problemsArray:[],\n      showEditQuizDialog:false,\n      quizObjForEdit:{}\n    }\n    this.editQuizHandler=this.editQuizHandler.bind(this);\n    this.handleEditQuizDialogDismiss=this.handleEditQuizDialogDismiss.bind(this);\n    this.saveUpdateHandler=this.saveUpdateHandler.bind(this);\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.courseNameChange=this.courseNameChange.bind(this);\n    this.selectChange=this.selectChange.bind(this);\n    this.durationChange=this.durationChange.bind(this);\n  }\n\n  handleEditQuizDialogDismiss(e){\n     this.setState({showEditQuizDialog:false, quizObjForEdit: this.state.quizObj,\n     });\n  }\n\n  saveUpdateHandler(e){\n    this.props.showSpinner();\n    //console.log(newCourseObj);\n    var reqBody=\"id=\"+encodeURIComponent(this.state.quizObjForEdit.id);\n    reqBody+='&course_id='+encodeURIComponent(this.state.quizObjForEdit.course_id);\n    reqBody+='&description='+encodeURIComponent(this.state.quizObjForEdit.description);\n    reqBody+='&duration_minutes='+encodeURIComponent(this.state.quizObjForEdit.duration_minutes);\n\n    fetch(`/api/updateQuiz`, {\n      headers:{\n        'Accept':'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    })\n    .then(res=>res.json())\n    .then(data=>{\n                //console.log(data);\n\n        if(data.updatestatus===\"ok\"){\n            this.props.loadQuizes();\n            let quizesArrayCopy=JSON.parse(JSON.stringify(this.props.quizesArray));\n            quizesArrayCopy.forEach((obj)=>{\n              if(obj.id===this.state.quizObjForEdit.id){\n                 obj.courseName=this.state.quizObjForEdit.courseName;\n                 obj.course_id=this.state.quizObjForEdit.course_id;\n                 obj.description=this.state.quizObjForEdit.description;\n                 obj.duration_minutes=this.state.quizObjForEdit.duration_minutes;\n              }\n            });\n            this.props.setQuizes(quizesArrayCopy);\n            this.setState({quizObj: this.state.quizObjForEdit, showEditQuizDialog:false});\n            this.props.hideSpinner();\n            alert('Quiz updated');\n        }\n        else{\n          alert('Quiz updation failed!');\n        }\n    })\n  }\n\n  descriptionChange(e){\n    const copied = Object.assign({}, this.state.quizObjForEdit)\n    copied.description=e.target.value;\n    this.setState({quizObjForEdit:copied});\n  }\n\n  courseNameChange(e){\n    const copied = Object.assign({}, this.state.quizObjForEdit)\n    copied.courseName=e.target.value;\n    this.setState({quizObjForEdit:copied});\n  }\n\n  durationChange(e){\n    const copied = Object.assign({}, this.state.quizObjForEdit)\n    copied.duration_minutes=e.target.value;\n    this.setState({quizObjForEdit:copied});\n  }\n\n  componentDidMount(){\n    this.props.showSpinner();\n    const {params}= this.props.match;\n\n    var reqBody=\"quizId=\"+encodeURIComponent(params.id);\n    fetch(`/api/getTheQuiz`, {\n      headers:{\n        'Accept':'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      data.id=params.id;\n      //console.log(data);\n      fetch(`/api/getProblemListForQuiz`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data1=>{\n            console.log(data1);\n            this.setState({quizObj: data, quizObjForEdit: data, problemsArray: data1});\n            this.props.hideSpinner();\n       })\n    })\n  }\n\n  editQuizHandler(){\n    this.setState({showEditQuizDialog:true});\n  }\n\n  selectChange(e){\n    const copied = Object.assign({}, this.state.quizObjForEdit)\n    var new_course_id=e.target.value;\n    var new_course_name=e.target.options[e.target.selectedIndex].text;\n    copied.course_id=new_course_id;\n    copied.courseName=new_course_name;\n    //console.log(copied);\n    this.setState({quizObjForEdit:copied});\n  }\n\n\n  deleteQuizHandler(id){\n    let b=window.confirm('Are you sure you want to delete');\n    if(b===true){\n        this.props.showSpinner();\n          var reqBody=\"id=\"+encodeURIComponent(id);\n          fetch(`/api/deleteQuiz`, {\n            headers:{\n              'Accept':'application/json',\n              'Content-type': 'application/x-www-form-urlencoded'\n            },\n            method: 'POST',\n            body: reqBody\n          })\n          .then(res=>res.json())\n          .then(data=>{\n              if(data.deletestatus===\"ok\"){\n                  let quizesArrayCopy=this.props.quizesArray.filter((obj)=>obj.id!==id);\n                  this.props.setQuizes(quizesArrayCopy);\n                  this.props.hideSpinner();\n                  alert('Quiz deleted');\n                  window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/quizesBrowse\");\n              }\n          })\n    }//end of if\n  }\n\n  /* Toggle between showing and hiding the navigation menu links when the user clicks on the hamburger menu / bar icon */\n toggleNavDisplay() {\n   var x = document.getElementById(\"TopNav\");\n  if (x.className === \"TopNav\") {\n    x.className += \" responsive\";\n  } else {\n    x.className = \"TopNav\";\n  }\n}\n\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n    return (\n      <div className=\"Panel\">\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n          {/*\n            this.state.spinner===true?(<div id=\"spinner\" className=\"container\"><div className=\"loading\"></div></div>):null\n          */}\n          <a className=\"HomeLink\" href=\"/\">back to home</a>\n          <div className=\"h1\">\n            {this.state.quizObj.description}\n          </div>\n           <b>Course:</b>\n           <a href={`http://${window.location.hostname}:${window.location.port}/courseShowSelected/${this.state.quizObj.course_id}`}>\n           {this.state.quizObj.courseName}\n           </a>\n           <br/>\n           <b>Duration (minutes):</b> {this.state.quizObj.duration_minutes}\n           <br/> <br/>\n           <div id=\"TopNav\" className=\"TopNav\">\n            <a href=\"javascript:void(0);\" class=\"icon\" onClick={()=>this.toggleNavDisplay()}>\n                <i class=\"fa fa-bars\"></i>\n            </a>\n            <br/> <br/>\n           <input type=\"button\" className=\"LeftButton\"\n            onClick={()=>this.props.startQuiz(this.state.quizObj)}\n            id={`s${this.state.quizObj.id}`} value=\"Start Quiz\"/>\n            <input type=\"button\" className=\"LeftButton\"\n             id={`a${this.state.quizObj.id}`} value=\"Add To Course\"/>\n           {(this.props.loggedInUser===this.state.quizObj.instructorId||this.props.admin===\"1\")?\n           (<>\n              <input type=\"button\"\n               className=\"LeftButton\"\n               onClick={()=>this.editQuizHandler()}\n               id={`e${this.state.quizObj.id}`} value=\"Edit Quiz\"/>\n              <input type=\"button\" className=\"LeftButton\"\n               onClick={()=>this.deleteQuizHandler(this.state.quizObj.id)}\n               id={`d${this.state.quizObj.id}`} value=\"Delete Quiz\"/>\n           </>):null}\n            </div>\n           <br/>\n          <b> Instructor:</b> {this.state.quizObj.instructorId}\n          <br/><br/>\n          {this.props.isQuizStarted(this.state.quizObj.id)?(\n            <form>\n            {(this.state.problemsArray.map(obj=>(\n              <div>\n                  <hr/>\n                  <b>Question: </b>\n                  <div className=\"Question\"\n                        dangerouslySetInnerHTML={{\n                       __html: obj.description\n                       }}\n                  ></div><b>Options</b><br/>\n                  <input type=\"radio\" id={`${obj.id}$option1`} onChange={(e)=>this.props.optionChange(obj.id,e.target.value)}\n                  checked={this.props.startedQuizAnswers!=null&&this.props.startedQuizAnswers[obj.id]===\"1\"}\n                   name={`${obj.id}$`} value=\"1\" ></input>\n                  <span  dangerouslySetInnerHTML={{__html: obj.option1}}/><br/>\n                  <input type=\"radio\" id={`${obj.id}$option2`} onChange={(e)=>this.props.optionChange(obj.id,e.target.value)}\n                  checked={this.props.startedQuizAnswers!=null&&this.props.startedQuizAnswers[obj.id]===\"2\"}\n                   name={`${obj.id}$`} value=\"2\"></input>\n                  <span  dangerouslySetInnerHTML={{__html: obj.option2}}/><br/>\n                  <input type=\"radio\" id={`${obj.id}$option3`} onChange={(e)=>this.props.optionChange(obj.id,e.target.value)}\n                    checked={this.props.startedQuizAnswers!=null&&this.props.startedQuizAnswers[obj.id]===\"3\"}\n                   name={`${obj.id}$`} value=\"3\"></input>\n                  <span  dangerouslySetInnerHTML={{__html: obj.option3}}/><br/>\n                  <input type=\"radio\" id={`${obj.id}$option4`} onChange={(e)=>this.props.optionChange(obj.id,e.target.value)}\n                    checked={this.props.startedQuizAnswers!=null&&this.props.startedQuizAnswers[obj.id]===\"4\"}\n                   name={`${obj.id}$`} value=\"4\"></input>\n                  <span  dangerouslySetInnerHTML={{__html: obj.option4}}/><br/>\n              </div>\n            )\n          ))}\n           <br/>\n           <input type=\"button\" className=\"LeftButton\"\n           onClick={e=>{\n                         if(window.confirm('Are you sure you want to submit the quiz:'+this.state.quizObj.description)===true)\n                           this.props.submitQuiz();\n                       }\n                   }\n           value=\"Submit Quiz\"/>\n          </form>\n        ):null}\n        <QuizEditDialog\n                objectForEdit={this.state.quizObjForEdit}\n                show={this.state.showEditQuizDialog}\n                handleDismiss={this.handleEditQuizDialogDismiss}\n                handleSubmit={this.saveUpdateHandler}\n                descriptionChange={this.descriptionChange}\n                courseNameChange={this.courseNameChange}\n                loadCourses={this.props.loadCourses}\n                coursesArray={this.props.coursesArray}\n                selectChange={this.selectChange}\n                durationChange={this.durationChange}\n        />\n     </div>\n    )\n  }\n\n\n}\n\nexport default QuizShowSelected;\n"]},"metadata":{},"sourceType":"module"}