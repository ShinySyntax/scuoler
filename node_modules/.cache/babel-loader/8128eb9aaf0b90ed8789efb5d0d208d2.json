{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/ProblemInsert.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport data from \"./data\";\n\nclass ProblemInsert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quizSearchKey: '',\n      quizObjectsFiltered: [],\n      augmentedQuizObjects: [],\n      augmentedQuizObjectsPrior: [],\n      quizesArray: [],\n      quiz_id: null,\n      quizType: null,\n      quiz_description: \"UnAssigned\",\n      description: \"\",\n      solution: \"\",\n      option1: \"\",\n      option2: \"\",\n      option3: \"\",\n      option4: \"\",\n      answerkey: \"\",\n      problemType: \"d\",\n      icons: data.icons\n    }; //this.baseState=this.state;\n    //this.quizSelectChange=this.quizSelectChange.bind(this);\n\n    this.descriptionChange = this.descriptionChange.bind(this);\n    this.solutionChange = this.solutionChange.bind(this);\n    this.option1Change = this.option1Change.bind(this);\n    this.option2Change = this.option2Change.bind(this);\n    this.option3Change = this.option3Change.bind(this);\n    this.option4Change = this.option4Change.bind(this);\n    this.answerkeyChange = this.answerkeyChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.problemTypeSelectChange = this.problemTypeSelectChange.bind(this);\n    this.quizSearchBoxChange = this.quizSearchBoxChange.bind(this);\n  }\n\n  quizSelectChange(e) {\n    let new_quiz_id = e.target.value;\n    let new_quiz_description = e.target.options[e.target.selectedIndex].text;\n    let new_quiz_type = e.target.options[e.target.selectedIndex].attributes.quiztype.value;\n    this.setState({\n      quiz_id: new_quiz_id,\n      quiz_description: new_quiz_description,\n      quizType: new_quiz_type\n    });\n  }\n\n  quizSearchBoxChange(e) {\n    let strSearchKey = e.target.value;\n    var timer = setTimeout(() => {\n      this.checkStatic(strSearchKey);\n    }, 1000);\n    let quizObjectsFiltered = e.target.value !== '' ? this.props.quizesArray.filter(val => val.description.toUpperCase().startsWith(strSearchKey.toUpperCase())) : []; //const quizObjectsFiltered=this.props.quizesArray.filter((val)=>val.description.toUpperCase().startsWith(e.target.value.toUpperCase()));\n\n    this.setState({\n      quizSearchKey: strSearchKey,\n      quizObjectsFiltered: quizObjectsFiltered\n    });\n  }\n\n  problemTypeSelectChange(e) {\n    var new_problemType = e.target.value;\n    var new_problemTypeDescription = e.target.options[e.target.selectedIndex].text;\n    this.setState({\n      problemType: new_problemType\n    });\n    console.log(new_problemType);\n  }\n\n  descriptionChange(e) {\n    console.log(this.state.quiz_id + ' ' + this.state.quiz_description);\n    const new_description = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      description: new_description\n    });\n  }\n\n  solutionChange(e) {\n    const new_solution = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      solution: new_solution\n    });\n  }\n\n  answerkeyChange(e) {\n    const new_answerkey = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      answerkey: new_answerkey\n    });\n  }\n\n  option1Change(e) {\n    const new_option1 = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      option1: new_option1\n    });\n  }\n\n  option2Change(e) {\n    const new_option2 = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      option2: new_option2\n    });\n  }\n\n  option3Change(e) {\n    const new_option3 = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      option3: new_option3\n    });\n  }\n\n  option4Change(e) {\n    const new_option4 = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      option4: new_option4\n    });\n  }\n\n  handleSubmit(e) {\n    if (this.state.problemType === \"m\" && ![1, 2, 3, 4].includes(parseInt(this.state.answerkey))) {\n      alert('Answer key should be numeric value in (1,2,3,4) for problem type (Multiple Choice)');\n      return;\n    } else if (this.state.quizType !== null && this.state.quizType !== this.state.problemType) {\n      alert('Error! selected quiz and problem should  be of the same types');\n      return;\n    } else {\n      this.props.showSpinner();\n      var reqBody = 'probDescription=' + encodeURIComponent(this.state.description);\n      reqBody += '&option1=' + encodeURIComponent(this.state.option1);\n      reqBody += '&option2=' + encodeURIComponent(this.state.option2);\n      reqBody += '&option3=' + encodeURIComponent(this.state.option3);\n      reqBody += '&option4=' + encodeURIComponent(this.state.option4);\n      reqBody += '&problemType=' + encodeURIComponent(this.state.problemType);\n      reqBody += '&answerKey=' + encodeURIComponent(this.state.answerkey);\n      reqBody += '&quizId=' + encodeURIComponent(this.state.quiz_id);\n      var solution = this.state.solution.replace(/%20/g, '+');\n      reqBody += '&ansDescription=' + encodeURIComponent(solution);\n      reqBody += '&authorName=' + encodeURIComponent(this.props.loggedInUser);\n      fetch(`/api/insertProblemAction`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data => {\n        let problemsArrayCopy = [...this.props.problemsArray];\n        let obj = {\n          id: data.problemId,\n          quiz_id: this.state.quiz_id,\n          quiz_description: this.state.quiz_description,\n          description: this.state.description,\n          solution: this.state.solution,\n          option1: this.state.option1,\n          option2: this.state.option2,\n          option3: this.state.option3,\n          option4: this.state.option4,\n          answerKey: this.state.answerkey,\n          author_id: this.props.loggedInUser\n        };\n        problemsArrayCopy.push(obj);\n        this.props.setProblems(problemsArrayCopy);\n        this.setState({\n          description: \"\",\n          solution: \"\",\n          option1: \"\",\n          option2: \"\",\n          option3: \"\",\n          option4: \"\",\n          answerkey: \"\"\n        });\n        this.props.hideSpinner(); //if(data.updatestatus==\"ok\")\n\n        alert('problem inserted');\n        window.location.assign(\"http://\" + window.location.hostname + ':' + window.location.port + \"/problemsBrowse\");\n      });\n    } //end of else\n\n  }\n\n  render() {\n    if (this.props.loggedInUser === '') {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/errorLogin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 14\n        }\n      });\n    }\n\n    let quizObjectsFilteredAugmented = [...this.state.quizObjectsFiltered];\n    quizObjectsFilteredAugmented = quizObjectsFilteredAugmented.concat(this.state.augmentedQuizObjects);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"InsertWindow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"HomeLink\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"homeIcon\",\n      src: this.state.icons.home,\n      alt: \"back to home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, \"Insert Problem\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, \"Problem Type:\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"problemType\",\n      onChange: this.problemTypeSelectChange,\n      name: \"problemType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }, \"Descriptive\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"m\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, \"Multiple Choice\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 28\n      }\n    }), \"Problem Description:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"probDescription\",\n      name: \"probDescription\",\n      rows: \"10\",\n      type: \"text\",\n      style: {\n        width: '90%'\n      },\n      value: this.state.description,\n      onChange: this.descriptionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 34\n      }\n    }), \"Answer Description:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"ansDescription\",\n      name: \"ansDescription\",\n      rows: \"10\",\n      type: \"text\",\n      style: {\n        width: '90%'\n      },\n      value: this.state.solution,\n      onChange: this.solutionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 28\n      }\n    }), \"Quiz:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"AddToDialog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"searchBox\",\n      type: \"text\",\n      name: \"searchBox\",\n      value: this.state.quizSearchKey,\n      onChange: this.quizSearchBoxChange,\n      placeholder: \"Type first letters of quiz \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 30\n      }\n    }, quizObjectsFilteredAugmented.map(obj => /*#__PURE__*/React.createElement(\"div\", {\n      onClick: e => this.quizObjectsFilteredClick(obj.description, obj.id, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 71\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 149\n      }\n    }, obj.description.substring(0, this.state.quizSearchKey.length)), obj.description.substring(this.state.quizSearchKey.length), \"(\", obj.id, \")\")))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add Quiz\",\n      onClick: e => this.AddToQuizSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    }, this.state.quizesArray !== undefined ? this.state.quizesArray.map(objQ => /*#__PURE__*/React.createElement(\"div\", {\n      id: objQ.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 31\n      }\n    }, \"| \", objQ.description, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"closeBtn\",\n      onClick: e => this.removeQuizFromQuizesArray(e, objQ.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 32\n      }\n    }, \"\\xD7\"), \"\\xA0|\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColRight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }, this.state.problemType === \"m\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 34\n      }\n    }), \"Option1: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        width: '100px'\n      },\n      onChange: this.option1Change,\n      id: \"option1\",\n      value: this.state.option1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 67\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 72\n      }\n    }), \"Option2: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        width: '100px'\n      },\n      onChange: this.option2Change,\n      id: \"option2\",\n      value: this.state.option2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 71\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 76\n      }\n    }), \"Option3: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        width: '100px'\n      },\n      onChange: this.option3Change,\n      id: \"option3\",\n      value: this.state.option3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 71\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 76\n      }\n    }), \"Option4: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        width: '100px'\n      },\n      onChange: this.option4Change,\n      id: \"option4\",\n      value: this.state.option4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 78\n      }\n    }), \"Answer Key: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"answerKey\",\n      onChange: this.answerkeyChange,\n      style: {\n        width: '100px'\n      },\n      value: this.state.answerkey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }), \"Author:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"authorName\",\n      name: \"authorName\",\n      type: \"text\",\n      style: {\n        width: '100px'\n      },\n      value: this.props.loggedInUser,\n      readonly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Insert Problem\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'block',\n        paddingTop: '30px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'block',\n        paddingTop: '10px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 16\n      }\n    })));\n  }\n\n  componentDidMount() {\n    this.props.loadQuizes();\n    /*if(this.state.quiz_id===undefined&& this.props.quizesArray.length>0)\n        this.setState({quiz_id:this.props.quizesArray[0].id, quiz_description:this.props.quizesArray[0].description});*/\n  }\n\n}\n\nexport default ProblemInsert;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/ProblemInsert.js"],"names":["React","Redirect","data","ProblemInsert","Component","constructor","props","state","quizSearchKey","quizObjectsFiltered","augmentedQuizObjects","augmentedQuizObjectsPrior","quizesArray","quiz_id","quizType","quiz_description","description","solution","option1","option2","option3","option4","answerkey","problemType","icons","descriptionChange","bind","solutionChange","option1Change","option2Change","option3Change","option4Change","answerkeyChange","handleSubmit","problemTypeSelectChange","quizSearchBoxChange","quizSelectChange","e","new_quiz_id","target","value","new_quiz_description","options","selectedIndex","text","new_quiz_type","attributes","quiztype","setState","strSearchKey","timer","setTimeout","checkStatic","filter","val","toUpperCase","startsWith","new_problemType","new_problemTypeDescription","console","log","new_description","new_solution","new_answerkey","new_option1","new_option2","new_option3","new_option4","includes","parseInt","alert","showSpinner","reqBody","encodeURIComponent","replace","loggedInUser","fetch","headers","method","body","then","res","json","problemsArrayCopy","problemsArray","obj","id","problemId","answerKey","author_id","push","setProblems","hideSpinner","window","location","assign","hostname","port","render","quizObjectsFilteredAugmented","concat","home","width","map","quizObjectsFilteredClick","substring","length","AddToQuizSubmit","undefined","objQ","removeQuizFromQuizesArray","display","paddingTop","componentDidMount","loadQuizes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {  Redirect } from 'react-router-dom';\nimport data from \"./data\";\n\nclass ProblemInsert extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      quizSearchKey:'',\n      quizObjectsFiltered:[],\n      augmentedQuizObjects:[],\n      augmentedQuizObjectsPrior:[],\n      quizesArray:[],\n      quiz_id:null,\n      quizType:null,\n      quiz_description:\"UnAssigned\",\n      description:\"\",\n      solution:\"\",\n      option1:\"\",\n      option2:\"\",\n      option3:\"\",\n      option4:\"\",\n      answerkey:\"\",\n      problemType: \"d\",\n      icons: data.icons\n    }\n    //this.baseState=this.state;\n    //this.quizSelectChange=this.quizSelectChange.bind(this);\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.solutionChange=this.solutionChange.bind(this);\n    this.option1Change=this.option1Change.bind(this);\n    this.option2Change=this.option2Change.bind(this);\n    this.option3Change=this.option3Change.bind(this);\n    this.option4Change=this.option4Change.bind(this);\n    this.answerkeyChange=this.answerkeyChange.bind(this);\n    this.handleSubmit=this.handleSubmit.bind(this);\n    this.problemTypeSelectChange=this.problemTypeSelectChange.bind(this);\n    this.quizSearchBoxChange=this.quizSearchBoxChange.bind(this);\n  }\n\n  quizSelectChange(e){\n    let new_quiz_id=e.target.value;\n    let new_quiz_description=e.target.options[e.target.selectedIndex].text;\n    let new_quiz_type=e.target.options[e.target.selectedIndex].attributes.quiztype.value;\n    this.setState({quiz_id:new_quiz_id, quiz_description:new_quiz_description,\n                  quizType: new_quiz_type});\n  }\n\n  quizSearchBoxChange(e){\n    let strSearchKey=e.target.value;\n    var timer = setTimeout(() => {this.checkStatic(strSearchKey);}, 1000);\n    let quizObjectsFiltered=e.target.value!==''?this.props.quizesArray.filter((val)=>val.description.toUpperCase().startsWith(strSearchKey.toUpperCase())):[];\n    //const quizObjectsFiltered=this.props.quizesArray.filter((val)=>val.description.toUpperCase().startsWith(e.target.value.toUpperCase()));\n    this.setState({quizSearchKey: strSearchKey, quizObjectsFiltered: quizObjectsFiltered});\n  }\n\n  problemTypeSelectChange(e){\n    var new_problemType=e.target.value;\n    var new_problemTypeDescription=e.target.options[e.target.selectedIndex].text;\n    this.setState({problemType:new_problemType});\n    console.log(new_problemType);\n  }\n\n  descriptionChange(e){\n    console.log(this.state.quiz_id+' '+this.state.quiz_description);\n    const new_description=e.target.value;\n    //console.log(e.target.value);\n    this.setState({description:new_description});\n  }\n\n  solutionChange(e){\n    const new_solution=e.target.value;\n    //console.log(e.target.value);\n    this.setState({solution:new_solution});\n  }\n\n  answerkeyChange(e){\n    const new_answerkey=e.target.value;\n    //console.log(e.target.value);\n    this.setState({answerkey:new_answerkey});\n  }\n\n  option1Change(e){\n    const new_option1=e.target.value;\n    //console.log(e.target.value);\n    this.setState({option1:new_option1});\n  }\n\n  option2Change(e){\n    const new_option2=e.target.value;\n    //console.log(e.target.value);\n    this.setState({option2:new_option2});\n  }\n\n  option3Change(e){\n    const new_option3=e.target.value;\n    //console.log(e.target.value);\n    this.setState({option3:new_option3});\n  }\n\n  option4Change(e){\n    const new_option4=e.target.value;\n    //console.log(e.target.value);\n    this.setState({option4:new_option4});\n  }\n\n  handleSubmit(e){\n     if(this.state.problemType===\"m\" && ![1,2,3,4].includes(parseInt(this.state.answerkey))){\n       alert('Answer key should be numeric value in (1,2,3,4) for problem type (Multiple Choice)');\n       return;\n     }\n     else if(this.state.quizType!==null&&this.state.quizType!==this.state.problemType){\n       alert('Error! selected quiz and problem should  be of the same types');\n       return;\n     }\n     else{\n      this.props.showSpinner();\n       var reqBody='probDescription='+encodeURIComponent(this.state.description);\n       reqBody+='&option1='+encodeURIComponent(this.state.option1);\n       reqBody+='&option2='+encodeURIComponent(this.state.option2);\n       reqBody+='&option3='+encodeURIComponent(this.state.option3);\n       reqBody+='&option4='+encodeURIComponent(this.state.option4);\n       reqBody+='&problemType='+encodeURIComponent(this.state.problemType);\n       reqBody+='&answerKey='+encodeURIComponent(this.state.answerkey);\n       reqBody+='&quizId='+encodeURIComponent(this.state.quiz_id);\n\n       var solution=this.state.solution.replace(/%20/g, '+');\n       reqBody+='&ansDescription='+encodeURIComponent(solution);\n       reqBody+='&authorName='+encodeURIComponent(this.props.loggedInUser);\n\n       fetch(`/api/insertProblemAction`, {\n         headers:{\n           'Accept':'application/json',\n           'Content-type': 'application/x-www-form-urlencoded'\n         },\n         method: 'POST',\n         body: reqBody\n       })\n       .then(res=>res.json())\n       .then(data=>{\n             let problemsArrayCopy=[...this.props.problemsArray];\n             let obj={\n               id: data.problemId,\n               quiz_id: this.state.quiz_id,\n               quiz_description: this.state.quiz_description,\n               description:this.state.description,\n               solution:this.state.solution,\n               option1:this.state.option1,\n               option2:this.state.option2,\n               option3:this.state.option3,\n               option4:this.state.option4,\n               answerKey:this.state.answerkey,\n               author_id:this.props.loggedInUser\n             };\n             problemsArrayCopy.push(obj);\n             this.props.setProblems(problemsArrayCopy);\n             this.setState({\n                           description:\"\",\n                           solution:\"\",\n                           option1:\"\",\n                           option2:\"\",\n                           option3:\"\",\n                           option4:\"\",\n                           answerkey:\"\"}\n                         );\n             this.props.hideSpinner();\n           //if(data.updatestatus==\"ok\")\n               alert('problem inserted');\n               window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/problemsBrowse\");\n       })\n     }//end of else\n\n  }\n\n  render(){\n\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n    let quizObjectsFilteredAugmented=[...this.state.quizObjectsFiltered];\n    quizObjectsFilteredAugmented=quizObjectsFilteredAugmented.concat(this.state.augmentedQuizObjects);\n\n    return (\n      <div class=\"InsertWindow\">\n          <a class=\"HomeLink\" href=\"/\">\n              <img class=\"homeIcon\" src={this.state.icons.home} alt=\"back to home\"/>\n          {/*back to home*/}\n          </a>\n          <div class=\"h1\">\n            Insert Problem\n          </div>\n          <fieldset>\n              <div className=\"row\">\n                  <div id=\"flexColLeft\">\n                     Problem Type:\n                     <select id=\"problemType\" onChange={this.problemTypeSelectChange} name=\"problemType\">\n                        <option value=\"d\">Descriptive</option>\n                        <option value=\"m\">Multiple Choice</option>\n                      </select>\n                      <br/><br/>\n                      Problem Description:<br/>\n                      <textarea id=\"probDescription\" name=\"probDescription\" rows=\"10\" type=\"text\" style={{width:'90%'}}\n                      value={this.state.description}\n                      onChange={this.descriptionChange}\n                      >\n                      </textarea><br/>\n                      Answer Description:<br/>\n                      <textarea id=\"ansDescription\" name=\"ansDescription\" rows=\"10\" type=\"text\" style={{width:'90%'}}\n                      value={this.state.solution}\n                      onChange={this.solutionChange}\n                      >\n                      </textarea>\n                      <br/><br/>\n                      Quiz:\n                      <br/><br/>\n                      <div id=\"AddToDialog\">\n                          <div className=\"autocomplete\">\n                             <input id=\"searchBox\" type=\"text\" name=\"searchBox\"\n                             value={this.state.quizSearchKey}\n                             onChange={this.quizSearchBoxChange} placeholder=\"Type first letters of quiz \"/>\n                             <div className=\"autocomplete-items\">\n                             {\n                               quizObjectsFilteredAugmented.map(obj=>(<div onClick={(e)=>this.quizObjectsFilteredClick(obj.description, obj.id, e)}><strong>{obj.description.substring(0,this.state.quizSearchKey.length)}</strong>{obj.description.substring(this.state.quizSearchKey.length)}({obj.id})</div>))\n                             }\n                             </div>\n                          </div>\n                          <input type=\"submit\" value=\"Add Quiz\" onClick={(e)=>this.AddToQuizSubmit(e)}/>\n                      </div>\n                      <br/>\n                      <div>\n                      {\n                          this.state.quizesArray!==undefined?\n                          ( this.state.quizesArray.map(objQ=>(\n                              <div id={objQ.id}>| {objQ.description}\n                               <span className=\"closeBtn\"\n                                 onClick={(e)=>this.removeQuizFromQuizesArray(e, objQ.id)}>&times;</span>&nbsp;|\n                              </div>\n                              )\n                            )\n                          ):null\n                      }\n                      </div>\n                      {/*<select id=\"quizId\" onChange={this.quizSelectChange} name=\"quizId\">\n                          <option value=\"null\" quiztype=\"null\">UnAssigned</option>\n                      {\n                          this.props.quizesArray.map((objQ, index)=>(\n                                     <option value={objQ.id} quiztype={objQ.type}>{objQ.description}</option>\n                            )\n                          )\n                      }\n                      </select>*/}\n                  </div>\n                  <div id=\"flexColRight\">\n                          {this.state.problemType===\"m\"?(<>\n                            <br/><br/>\n                        Option1: <input type=\"text\" style={{width:'100px'}}\n                         onChange={this.option1Change}\n                         id=\"option1\" value={this.state.option1}/><br/><br/>\n                        Option2: <input type=\"text\" style={{width:'100px'}}\n                             onChange={this.option2Change}\n                             id=\"option2\" value={this.state.option2}/><br/><br/>\n                        Option3: <input type=\"text\" style={{width:'100px'}}\n                             onChange={this.option3Change}\n                             id=\"option3\" value={this.state.option3}/><br/><br/>\n                        Option4: <input type=\"text\" style={{width:'100px'}}\n                               onChange={this.option4Change}\n                               id=\"option4\" value={this.state.option4}/><br/><br/>\n                        Answer Key: <br/>\n                        <input type=\"text\" id=\"answerKey\"\n                        onChange={this.answerkeyChange}\n                        style={{width:'100px'}} value={this.state.answerkey}/></>):null}\n                        <br/>\n                        <br/>\n                        Author:<br/>\n                        <input id=\"authorName\" name=\"authorName\" type=\"text\" style={{width:'100px'}}\n                        value={this.props.loggedInUser} readonly>\n                        </input> <br/><br/><br/>\n                        <input type=\"button\"  value=\"Insert Problem\" onClick={this.handleSubmit}/>\n                  </div>\n              </div>\n              <div style={{display:'block', paddingTop:'30px', width:'100%'}}>\n\n               </div>\n               <div style={{display:'block', paddingTop:'10px', width:'100%'}}>\n\n               </div>\n           </fieldset>\n      </div>\n    )\n  }\n\n  componentDidMount(){\n    this.props.loadQuizes();\n    /*if(this.state.quiz_id===undefined&& this.props.quizesArray.length>0)\n        this.setState({quiz_id:this.props.quizesArray[0].id, quiz_description:this.props.quizesArray[0].description});*/\n\n  }\n\n\n}\n\nexport default ProblemInsert;\n"]},"metadata":{},"sourceType":"module"}