{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/App.js\";\nimport React from 'react';\nimport './css/App.css';\nimport Header from './components/Header';\nimport ImageSlider from './components/ImageSlider';\nimport Middle from './components/Middle';\nimport DropdownMenuHover from './components/DropdownMenuHover';\nimport ProblemsBrowse from './components/ProblemsBrowse';\nimport ProblemsSearch from './components/ProblemsSearch';\nimport ProblemInsert from './components/ProblemInsert';\nimport ProblemShowSelected from './components/ProblemShowSelected';\nimport QuizesBrowse from './components/QuizesBrowse';\nimport QuizesSearch from './components/QuizesSearch';\nimport QuizInsert from './components/QuizInsert';\nimport QuizShowSelected from './components/QuizShowSelected';\nimport QuizInstances from './components/QuizInstances';\nimport UsersBrowse from './components/UsersBrowse';\nimport UsersSearch from './components/UsersSearch';\nimport UserInsert from './components/UserInsert';\nimport UserShowSelected from './components/UserShowSelected';\nimport UserQuizInstances from './components/UserQuizInstances';\nimport CoursesBrowse from './components/CoursesBrowse';\nimport CourseInsert from './components/CourseInsert';\nimport CoursesSearch from './components/CoursesSearch';\nimport CourseShowSelected from './components/CourseShowSelected';\nimport MeetingInsert from './components/MeetingInsert';\nimport MeetingsBrowse from './components/MeetingsBrowse';\nimport MeetingShowSelected from './components/MeetingShowSelected';\nimport ErrorLogin from './components/ErrorLogin';\nimport ChatHome from './components/chat/ChatHome';\nimport { Route, BrowserRouter as Router, useLocation, useHistory, Redirect } from 'react-router-dom';\nimport { getMinutesRemaining, getCurrentTimestampString, getPageArray } from './utils/utils';\nimport { AppStoreProvider, AppStoreConsumer } from './stores/appStore';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      spinner: false,\n      userId: null,\n      password: null,\n      loggedInUser: localStorage.getItem('loggedInUser') || '',\n      loggedInUserFullName: localStorage.getItem('loggedInUserFullName') || '',\n      admin: localStorage.getItem('admin') || \"0\",\n      errorMessage: null,\n      coursesArray: [],\n      problemsArray: [],\n      meetingsArray: [],\n      currentProblemsPage: 1,\n      currentQuizesPage: 1,\n      currentCoursesPage: 1,\n      currentUsersPage: 1,\n      currentMeetingsPage: 1,\n      pageSize: 30,\n      quizesArray: [],\n      usersArray: [],\n      startedQuiz: localStorage.getItem('startedQuiz') ? JSON.parse(localStorage.getItem('startedQuiz')) : null,\n      startedQuizAnswers: localStorage.getItem('startedQuizAnswers') ? JSON.parse(localStorage.getItem('startedQuizAnswers')) : null\n    };\n  }\n\n  componentDidMount() {\n    var timer = setInterval(() => {\n      this.reviseQuizMinsRemaining();\n    }, 60000);\n  }\n\n  startedQuizSubmit() {\n    //console.log(this.state.startedQuizAnswers);\n    //console.log(this.state.startedQuiz);\n    var reqBody = \"quizId=\" + encodeURIComponent(this.state.startedQuiz.id);\n    reqBody += \"&quizType=\" + encodeURIComponent(this.state.startedQuiz.type);\n    reqBody += '&quizInstanceId=' + encodeURIComponent(this.state.startedQuiz.quizInstanceId);\n    reqBody += '&answersObject=' + encodeURIComponent(JSON.stringify(this.state.startedQuizAnswers));\n    fetch(`/api/quizAnwersSubmit`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    }).then(res => res.json()).then(data => {\n      //console.log(data);\n      if (data.insertstatus === \"ok\") {\n        localStorage.removeItem('startedQuiz');\n        localStorage.removeItem('startedQuizAnswers');\n        this.setState({\n          startedQuiz: null,\n          startedQuizAnswers: null\n        });\n        alert('Quiz Submitted');\n      }\n    });\n  }\n\n  reviseQuizMinsRemaining() {\n    if (this.state.startedQuiz !== null) {\n      var mins_remaining = getMinutesRemaining(this.state.startedQuiz.start_time, this.state.startedQuiz.duration_minutes);\n\n      if (mins_remaining > 0) {\n        console.log(mins_remaining);\n        const copied = Object.assign({}, this.state.startedQuiz); //copied['mins_remaining']=mins_remaining;\n\n        this.setState({\n          startedQuiz: copied\n        });\n        localStorage.setItem('startedQuiz', JSON.stringify(copied));\n      } else {\n        this.startedQuizSubmit();\n      }\n    }\n  }\n\n  handleAltLogin(strSource, response) {\n    const AltLoginInitiate = (firstName, lastName, email, id, picture_url) => {\n      var reqBody = \"userId=\" + encodeURIComponent(id);\n      reqBody += '&firstName=' + encodeURIComponent(firstName);\n      reqBody += '&lastName=' + encodeURIComponent(lastName);\n      reqBody += '&email=' + encodeURIComponent(email);\n      reqBody += '&pictureUrl=' + encodeURIComponent(picture_url);\n      fetch(`/api/mergeUser`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data => {//console.log(data);\n      });\n      localStorage.setItem('loggedInUser', id);\n      localStorage.setItem('loggedInUserFullName', firstName + ' ' + lastName);\n      localStorage.setItem('admin', '0');\n      this.setState({\n        errorMessage: null,\n        loggedInUser: id,\n        loggedInUserFullName: firstName + ' ' + lastName,\n        admin: '0'\n      }); //console.log(firstName+' '+lastName+' '+email+' '+id+' '+picture_url);\n    };\n\n    if (strSource === 'facebook' && response.id !== undefined) {\n      let fullName = response.name;\n      let firstName = fullName;\n      let lastName = \"\";\n      let arrName = fullName.split(\" \");\n\n      if (arrName.length > 1) {\n        firstName = arrName[0];\n        lastName = arrName[1];\n      }\n\n      let email = response.email;\n      let id = response.id;\n      let picture_url = response.picture.data.url;\n      AltLoginInitiate(firstName, lastName, email, id, picture_url);\n    } else if (strSource === 'google' && response.googleId !== undefined) {\n      let id = response.googleId;\n      let picture_url = response.profileObj.imageUrl;\n      let email = response.profileObj.email;\n      let firstName = response.profileObj.givenName;\n      let lastName = response.profileObj.familyName;\n      AltLoginInitiate(firstName, lastName, email, id, picture_url); //console.log(response);\n    } //alert(strSource);\n\n  }\n\n  handleLoginSubmit(event) {\n    if (this.state.userId === null || this.state.password === null || this.state.password.length === 0 || this.state.userId.length === 0) {\n      event.preventDefault();\n      this.setState({\n        errorMessage: \"UserId/password cannot be empty\"\n      });\n      return;\n    }\n\n    var reqBody = \"userId=\" + encodeURIComponent(this.state.userId);\n    reqBody += '&password=' + encodeURIComponent(this.state.password);\n    fetch(`/api/login`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: reqBody\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data.login === \"ok\") {\n        localStorage.setItem('loggedInUser', this.state.userId);\n        localStorage.setItem('loggedInUserFullName', data.full_name);\n        localStorage.setItem('admin', data.admin);\n        this.setState({\n          errorMessage: null,\n          loggedInUser: this.state.userId,\n          loggedInUserFullName: data.full_name,\n          admin: data.admin\n        });\n      } else {\n        this.setState({\n          errorMessage: \"Login Failed: UserId/password Mismatch\"\n        });\n      }\n    });\n    event.preventDefault();\n  }\n\n  userIdChange(e) {\n    const newUserId = e.target.value;\n    this.setState({\n      userId: newUserId\n    });\n  }\n\n  passwordChange(e) {\n    const newPassword = e.target.value;\n    this.setState({\n      password: newPassword\n    });\n  }\n\n  logoutUser(e) {\n    //e.preventDefault();\n    let confirmMsg = 'Are you sure you want to logout?';\n\n    if (this.state.startedQuiz !== null) {\n      confirmMsg += 'There is an unsubmitted quiz: \\r\\n' + this.state.startedQuiz.description;\n    }\n\n    let b = window.confirm(confirmMsg);\n\n    if (b === true) {\n      if (this.state.startedQuiz !== null) this.startedQuizSubmit();\n      localStorage.setItem('loggedInUser', '');\n      localStorage.setItem('loggedInUserFullName', '');\n      localStorage.setItem('admin', \"0\");\n      localStorage.removeItem('startedQuiz');\n      localStorage.removeItem('startedQuizAnswers');\n      this.setState({\n        errorMessage: null,\n        loggedInUser: '',\n        admin: \"0\",\n        startedQuiz: null,\n        startedQuizAnswers: null\n      });\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  setErrorMessage(errMsg) {\n    this.setState({\n      errorMessage: errMsg\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AppStoreProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppStoreConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, ({\n      state,\n      dispatch\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Header, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 60\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(DropdownMenuHover, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 60\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 27\n      }\n    }), state.spinner === true ? /*#__PURE__*/React.createElement(\"div\", {\n      id: \"spinner\",\n      className: \"loadingContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 52\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 99\n      }\n    })) : null, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: ImageSlider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Middle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/problemsBrowse\",\n      render: props => /*#__PURE__*/React.createElement(ProblemsBrowse, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 74\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/problemsSearch\",\n      render: props => /*#__PURE__*/React.createElement(ProblemsSearch, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 74\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/problemInsert\",\n      render: props => /*#__PURE__*/React.createElement(ProblemInsert, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 73\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/problemShowSelected/:id\",\n      render: props => /*#__PURE__*/React.createElement(ProblemShowSelected, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 83\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/quizesBrowse\",\n      render: props => /*#__PURE__*/React.createElement(QuizesBrowse, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 72\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/quizesSearch\",\n      render: props => /*#__PURE__*/React.createElement(QuizesSearch, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 73\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/quizInsert\",\n      render: props => /*#__PURE__*/React.createElement(QuizInsert, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 70\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/quizShowSelected/:id\",\n      render: props => /*#__PURE__*/React.createElement(QuizShowSelected, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 80\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/quizInstances/:id\",\n      render: props => /*#__PURE__*/React.createElement(QuizInstances, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 77\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/usersBrowse\",\n      render: props => /*#__PURE__*/React.createElement(UsersBrowse, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 71\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/usersSearch\",\n      render: props => /*#__PURE__*/React.createElement(UsersSearch, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 71\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/userInsert\",\n      render: props => /*#__PURE__*/React.createElement(UserInsert, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 70\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/userShowSelected/:id\",\n      render: props => /*#__PURE__*/React.createElement(UserShowSelected, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 80\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/userQuizInstances\",\n      render: props => /*#__PURE__*/React.createElement(UserQuizInstances, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 77\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/coursesBrowse\",\n      render: props => /*#__PURE__*/React.createElement(CoursesBrowse, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 73\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/coursesSearch\",\n      render: props => /*#__PURE__*/React.createElement(CoursesSearch, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 73\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/courseInsert\",\n      render: props => /*#__PURE__*/React.createElement(CourseInsert, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 72\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/CourseShowSelected/:id\",\n      render: props => /*#__PURE__*/React.createElement(CourseShowSelected, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 82\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/meetingInsert\",\n      render: props => /*#__PURE__*/React.createElement(MeetingInsert, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 73\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/meetingsBrowse\",\n      render: props => /*#__PURE__*/React.createElement(MeetingsBrowse, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 74\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/meetingShowSelected/:id/:organiserId\",\n      render: props => /*#__PURE__*/React.createElement(MeetingShowSelected, Object.assign({}, props, {\n        state: state,\n        dispatch: dispatch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 96\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      path: \"/videoChat\",\n      loggedInUser: this.state.loggedInUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(ChatHome, {\n      loggedInUser: this.state.loggedInUser,\n      loggedInUserFullName: this.state.loggedInUserFullName,\n      admin: this.state.admin,\n      setErrorMessage: this.setErrorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/errorLogin\",\n      render: props => /*#__PURE__*/React.createElement(ErrorLogin, Object.assign({}, props, {\n        loggedInUser: this.state.loggedInUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 70\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 27\n      }\n    }))))));\n  }\n\n} // A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\n\n\nfunction PrivateRoute({\n  children,\n  loggedInUser,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => loggedInUser !== \"\" ? children : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/errorLogin\",\n        state: {\n          from: location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/App.js"],"names":["React","Header","ImageSlider","Middle","DropdownMenuHover","ProblemsBrowse","ProblemsSearch","ProblemInsert","ProblemShowSelected","QuizesBrowse","QuizesSearch","QuizInsert","QuizShowSelected","QuizInstances","UsersBrowse","UsersSearch","UserInsert","UserShowSelected","UserQuizInstances","CoursesBrowse","CourseInsert","CoursesSearch","CourseShowSelected","MeetingInsert","MeetingsBrowse","MeetingShowSelected","ErrorLogin","ChatHome","Route","BrowserRouter","Router","useLocation","useHistory","Redirect","getMinutesRemaining","getCurrentTimestampString","getPageArray","AppStoreProvider","AppStoreConsumer","App","Component","constructor","props","state","spinner","userId","password","loggedInUser","localStorage","getItem","loggedInUserFullName","admin","errorMessage","coursesArray","problemsArray","meetingsArray","currentProblemsPage","currentQuizesPage","currentCoursesPage","currentUsersPage","currentMeetingsPage","pageSize","quizesArray","usersArray","startedQuiz","JSON","parse","startedQuizAnswers","componentDidMount","timer","setInterval","reviseQuizMinsRemaining","startedQuizSubmit","reqBody","encodeURIComponent","id","type","quizInstanceId","stringify","fetch","headers","method","body","then","res","json","data","insertstatus","removeItem","setState","alert","mins_remaining","start_time","duration_minutes","console","log","copied","Object","assign","setItem","handleAltLogin","strSource","response","AltLoginInitiate","firstName","lastName","email","picture_url","undefined","fullName","name","arrName","split","length","picture","url","googleId","profileObj","imageUrl","givenName","familyName","handleLoginSubmit","event","preventDefault","login","full_name","userIdChange","e","newUserId","target","value","passwordChange","newPassword","logoutUser","confirmMsg","description","b","window","confirm","setErrorMessage","errMsg","render","dispatch","PrivateRoute","children","rest","location","pathname","from"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './css/App.css';\nimport Header from './components/Header';\nimport ImageSlider from './components/ImageSlider';\nimport Middle from './components/Middle';\nimport DropdownMenuHover from './components/DropdownMenuHover';\nimport ProblemsBrowse from './components/ProblemsBrowse';\nimport ProblemsSearch from './components/ProblemsSearch';\nimport ProblemInsert from './components/ProblemInsert';\nimport ProblemShowSelected from './components/ProblemShowSelected';\nimport QuizesBrowse from './components/QuizesBrowse';\nimport QuizesSearch from './components/QuizesSearch';\nimport QuizInsert from './components/QuizInsert';\nimport QuizShowSelected from './components/QuizShowSelected';\nimport QuizInstances from './components/QuizInstances';\nimport UsersBrowse from './components/UsersBrowse';\nimport UsersSearch from './components/UsersSearch';\nimport UserInsert from './components/UserInsert';\nimport UserShowSelected from './components/UserShowSelected';\nimport UserQuizInstances from './components/UserQuizInstances';\nimport CoursesBrowse from './components/CoursesBrowse';\nimport CourseInsert from './components/CourseInsert';\nimport CoursesSearch from './components/CoursesSearch';\nimport CourseShowSelected from './components/CourseShowSelected';\nimport MeetingInsert from './components/MeetingInsert';\nimport MeetingsBrowse from './components/MeetingsBrowse';\nimport MeetingShowSelected from './components/MeetingShowSelected';\nimport ErrorLogin from './components/ErrorLogin';\nimport ChatHome from './components/chat/ChatHome';\nimport { Route, BrowserRouter as Router, useLocation, useHistory, Redirect} from 'react-router-dom';\nimport {getMinutesRemaining, getCurrentTimestampString, getPageArray} from './utils/utils';\nimport {AppStoreProvider, AppStoreConsumer} from './stores/appStore';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      spinner:false,\n      userId:null,\n      password:null,\n      loggedInUser:localStorage.getItem('loggedInUser') || '',\n      loggedInUserFullName: localStorage.getItem('loggedInUserFullName')||'',\n      admin:localStorage.getItem('admin')||\"0\",\n      errorMessage:null,\n      coursesArray:[],\n      problemsArray:[],\n      meetingsArray:[],\n      currentProblemsPage:1,\n      currentQuizesPage:1,\n      currentCoursesPage:1,\n      currentUsersPage:1,\n      currentMeetingsPage:1,\n      pageSize:30,\n      quizesArray:[],\n      usersArray:[],\n      startedQuiz:localStorage.getItem('startedQuiz')?JSON.parse(localStorage.getItem('startedQuiz')):null,\n      startedQuizAnswers:localStorage.getItem('startedQuizAnswers')?JSON.parse(localStorage.getItem('startedQuizAnswers')):null\n    }\n\n  }\n\n  componentDidMount() {\n    var timer = setInterval(() => {this.reviseQuizMinsRemaining();}, 60000)\n  }\n\n\n\n\n\n\n\n\n  startedQuizSubmit(){\n    //console.log(this.state.startedQuizAnswers);\n    //console.log(this.state.startedQuiz);\n\n    var reqBody=\"quizId=\"+encodeURIComponent(this.state.startedQuiz.id);\n        reqBody+=\"&quizType=\"+encodeURIComponent(this.state.startedQuiz.type);\n        reqBody+='&quizInstanceId='+encodeURIComponent(this.state.startedQuiz.quizInstanceId);\n        reqBody+='&answersObject='+encodeURIComponent(JSON.stringify(this.state.startedQuizAnswers));\n\n        fetch(`/api/quizAnwersSubmit`, {\n          headers:{\n            'Accept':'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        })\n        .then(res=>res.json())\n        .then(\n          data=>{\n            //console.log(data);\n            if(data.insertstatus=== \"ok\"){\n              localStorage.removeItem('startedQuiz');\n              localStorage.removeItem('startedQuizAnswers');\n              this.setState({startedQuiz:null, startedQuizAnswers:null});\n              alert('Quiz Submitted');\n            }\n          }\n        );\n  }\n\n  reviseQuizMinsRemaining(){\n    if(this.state.startedQuiz!==null){\n          var mins_remaining= getMinutesRemaining(this.state.startedQuiz.start_time, this.state.startedQuiz.duration_minutes);\n\n          if(mins_remaining>0){\n            console.log(mins_remaining);\n            const copied = Object.assign({}, this.state.startedQuiz);\n            //copied['mins_remaining']=mins_remaining;\n            this.setState({startedQuiz:copied});\n            localStorage.setItem('startedQuiz', JSON.stringify(copied));\n         }\n         else{\n           this.startedQuizSubmit();\n         }\n    }\n  }\n\n  handleAltLogin(strSource, response){\n    const AltLoginInitiate=(firstName, lastName, email, id, picture_url)=>{\n      var reqBody=\"userId=\"+encodeURIComponent(id);\n      reqBody+='&firstName='+encodeURIComponent(firstName);\n      reqBody+='&lastName='+encodeURIComponent(lastName);\n      reqBody+='&email='+encodeURIComponent(email);\n      reqBody+='&pictureUrl='+encodeURIComponent(picture_url);\n\n      fetch(`/api/mergeUser`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data=>{\n          //console.log(data);\n       });\n       localStorage.setItem('loggedInUser', id);\n       localStorage.setItem('loggedInUserFullName', firstName+' '+lastName);\n       localStorage.setItem('admin', '0');\n       this.setState({errorMessage:null,\n                     loggedInUser: id,\n                     loggedInUserFullName: firstName+' '+lastName,\n                     admin: '0'\n                     });\n       //console.log(firstName+' '+lastName+' '+email+' '+id+' '+picture_url);\n    };\n    if(strSource==='facebook' && response.id!==undefined){\n      let fullName=response.name;\n      let firstName=fullName;\n      let lastName=\"\";\n      let arrName=fullName.split(\" \");\n      if(arrName.length>1){\n        firstName=arrName[0];\n        lastName=arrName[1];\n      }\n      let email=response.email;\n      let id=response.id;\n      let picture_url=response.picture.data.url;\n      AltLoginInitiate(firstName, lastName, email, id, picture_url);\n    }\n    else if(strSource==='google' && response.googleId!==undefined){\n      let id=response.googleId;\n      let picture_url=response.profileObj.imageUrl;\n      let email=response.profileObj.email;\n      let firstName=response.profileObj.givenName;\n      let lastName=response.profileObj.familyName;\n      AltLoginInitiate(firstName, lastName, email, id, picture_url);\n      //console.log(response);\n    }\n    //alert(strSource);\n  }\n\n  handleLoginSubmit(event){\n    if(this.state.userId===null\n        ||this.state.password===null\n        ||this.state.password.length===0\n        ||this.state.userId.length===0)\n    {\n      event.preventDefault();\n      this.setState({errorMessage: \"UserId/password cannot be empty\"})\n      return;\n    }\n    var reqBody=\"userId=\"+encodeURIComponent(this.state.userId);\n        reqBody+='&password='+encodeURIComponent(this.state.password);\n\n        fetch(`/api/login`, {\n          headers:{\n            'Accept':'application/json',\n            'Content-type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST',\n          body: reqBody\n        })\n        .then(res=>res.json())\n        .then(\n          data=>{\n            console.log(data);\n            if(data.login===\"ok\"){\n              localStorage.setItem('loggedInUser', this.state.userId);\n              localStorage.setItem('loggedInUserFullName', data.full_name);\n              localStorage.setItem('admin', data.admin);\n              this.setState({errorMessage:null,\n                            loggedInUser: this.state.userId,\n                            loggedInUserFullName: data.full_name,\n                            admin: data.admin\n                            });\n            }\n            else{\n              this.setState({errorMessage: \"Login Failed: UserId/password Mismatch\"});\n            }\n          }\n        );\n    event.preventDefault();\n\n  }\n\n  userIdChange(e){\n    const newUserId=e.target.value;\n    this.setState({userId: newUserId});\n  }\n\n  passwordChange(e){\n    const newPassword=e.target.value;\n    this.setState({password: newPassword});\n  }\n\n  logoutUser(e){\n    //e.preventDefault();\n    let confirmMsg='Are you sure you want to logout?';\n    if(this.state.startedQuiz!==null){\n        confirmMsg+='There is an unsubmitted quiz: \\r\\n'+this.state.startedQuiz.description;\n    }\n    let b=window.confirm(confirmMsg)\n    if(b===true){\n      if(this.state.startedQuiz!==null)\n         this.startedQuizSubmit();\n      localStorage.setItem('loggedInUser', '');\n      localStorage.setItem('loggedInUserFullName','');\n      localStorage.setItem('admin', \"0\");\n      localStorage.removeItem('startedQuiz');\n      localStorage.removeItem('startedQuizAnswers');\n      this.setState({errorMessage:null, loggedInUser: '', admin:\"0\",\n                      startedQuiz:null, startedQuizAnswers:null});\n    }\n    else{\n      e.preventDefault();\n    }\n  }\n\n  setErrorMessage(errMsg){\n    this.setState({errorMessage:errMsg});\n  }\n\n\n    render(){\n      return (\n        <Router>\n          <div>\n            <AppStoreProvider>\n              <AppStoreConsumer>\n                {({state, dispatch})=>\n                    (\n                      <div>\n                          <Route path=\"/\" render={(props)=><Header\n                                                              {...props}\n                                                              state={state}\n                                                              dispatch={dispatch}\n                                                            />}\n                          />\n                          <Route path=\"/\" render={(props)=><DropdownMenuHover\n                                                            {...props}\n                                                             state={state}\n                                                             dispatch={dispatch}\n                                                            />\n                                                  }\n                           />\n                           {\n                             state.spinner===true?(<div id=\"spinner\" className=\"loadingContainer\"><div className=\"loading\"></div></div>):null\n                           }\n                          <Route exact path=\"/\" component={ImageSlider} />\n                          <Route exact path=\"/\" component={Middle} />\n                          <Route path=\"/problemsBrowse\" render={(props)=><ProblemsBrowse {...props}\n                                                                          state={state}\n                                                                          dispatch={dispatch}\n                                                                          />\n                                                               }\n                          />\n                          <Route path=\"/problemsSearch\" render={(props)=><ProblemsSearch {...props}\n                                                                          state={state}\n                                                                          dispatch={dispatch}\n                                                                         />\n                                                                }\n                          />\n                          <Route path=\"/problemInsert\" render={(props)=><ProblemInsert {...props}\n                                                                         state={state}\n                                                                         dispatch={dispatch}\n                                                                        />\n                                                              }\n                          />\n                          <Route path=\"/problemShowSelected/:id\" render={(props)=><ProblemShowSelected {...props}\n                                                                                state={state}\n                                                                                dispatch={dispatch}\n                                                                               />\n                                                                     }\n                          />\n                          <Route path=\"/quizesBrowse\" render={(props)=><QuizesBrowse {...props}\n                                                                        state={state}\n                                                                        dispatch={dispatch}\n                                                                      />\n                                                             }\n                           />\n                           <Route path=\"/quizesSearch\" render={(props)=><QuizesSearch {...props}\n                                                                           state={state}\n                                                                           dispatch={dispatch}\n                                                                          />\n                                                                 }\n                           />\n                          <Route path=\"/quizInsert\" render={(props)=><QuizInsert {...props}\n                                                                      state={state}\n                                                                      dispatch={dispatch}\n                                                                     />\n                                                           }\n                          />\n                          <Route path=\"/quizShowSelected/:id\" render={(props)=><QuizShowSelected {...props}\n                                                                                state={state}\n                                                                                dispatch={dispatch}\n                                                                               />\n                                                                     }\n                          />\n                          <Route path=\"/quizInstances/:id\" render={(props)=><QuizInstances {...props}\n                                                                                state={state}\n                                                                                dispatch={dispatch}\n                                                                            />\n                                                                  }\n                          />\n                          <Route path=\"/usersBrowse\" render={(props)=><UsersBrowse {...props}\n                                                                        state={state}\n                                                                        dispatch={dispatch}\n                                                                      />\n                                                            }\n                          />\n                          <Route path=\"/usersSearch\" render={(props)=><UsersSearch {...props}\n                                                                          state={state}\n                                                                          dispatch={dispatch}\n                                                                         />\n                                                                }\n                          />\n                          <Route path=\"/userInsert\" render={(props)=><UserInsert {...props}\n                                                                      state={state}\n                                                                      dispatch={dispatch}\n                                                                     />\n                                                           }\n                          />\n                          <Route path=\"/userShowSelected/:id\" render={(props)=><UserShowSelected {...props}\n                                                                                state={state}\n                                                                                dispatch={dispatch}\n                                                                               />\n                                                                     }\n                          />\n                          <Route path=\"/userQuizInstances\" render={(props)=><UserQuizInstances {...props}\n                                                                              state={state}\n                                                                              dispatch={dispatch}\n                                                                            />\n                                                                  }\n                          />\n                          <Route path=\"/coursesBrowse\" render={(props)=><CoursesBrowse {...props}\n                                                                         state={state}\n                                                                         dispatch={dispatch}\n                                                                        />\n                                                              }\n                          />\n                          <Route path=\"/coursesSearch\" render={(props)=><CoursesSearch {...props}\n                                                                          state={state}\n                                                                          dispatch={dispatch}\n                                                                         />\n                                                                }\n                          />\n                          <Route path=\"/courseInsert\" render={(props)=><CourseInsert {...props}\n                                                                        state={state}\n                                                                        dispatch={dispatch}\n                                                                        />\n                                                             }\n                          />\n                          <Route path=\"/CourseShowSelected/:id\" render={(props)=><CourseShowSelected {...props}\n                                                                                  state={state}\n                                                                                  dispatch={dispatch}\n                                                                                />\n                                                                        }\n                          />\n                          <Route path=\"/meetingInsert\" render={(props)=><MeetingInsert {...props}\n                                                                         state={state}\n                                                                         dispatch={dispatch}\n                                                                        />\n                                                              }\n                          />\n                          <Route path=\"/meetingsBrowse\" render={(props)=><MeetingsBrowse {...props}\n                                                                         state={state}\n                                                                         dispatch={dispatch}\n                                                                        />\n                                                              }\n                          />\n                          <Route path=\"/meetingShowSelected/:id/:organiserId\" render={(props)=><MeetingShowSelected {...props}\n                                                                                                state={state}\n                                                                                                dispatch={dispatch}\n                                                                                                />\n                                                                                      }\n                          />\n                          {/*this.props.loggedInUser!==\"\" && <Route path=\"/videoChat\" render={(props)=><ChatHome {...props}\n                                                                                  loggedInUser={this.state.loggedInUser}\n                                                                                  loggedInUserFullName={this.state.loggedInUserFullName}\n                                                                                  admin={this.state.admin}\n                                                                                  setErrorMessage={this.setErrorMessage}\n                                                           />\n                                                           }\n                          />\n                          */}\n                          <PrivateRoute path=\"/videoChat\" loggedInUser={this.state.loggedInUser}>\n                              <ChatHome\n                                                                                  loggedInUser={this.state.loggedInUser}\n                                                                                  loggedInUserFullName={this.state.loggedInUserFullName}\n                                                                                  admin={this.state.admin}\n                                                                                  setErrorMessage={this.setErrorMessage}\n                              />\n                          </PrivateRoute>\n                          <Route path=\"/errorLogin\" render={(props)=><ErrorLogin {...props}\n                                                                      loggedInUser={this.state.loggedInUser}\n                                                                      />\n                                                           }\n                          />\n                      </div>\n                   )\n                  }\n                </AppStoreConsumer>\n            </AppStoreProvider>\n          </div>\n        </Router>\n      )\n    }\n\n\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, loggedInUser, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        loggedInUser!==\"\" ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/errorLogin\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}