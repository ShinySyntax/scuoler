{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/ProblemInsert.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport data from \"./data\";\n\nclass ProblemInsert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quizesArray: [],\n      quiz_id: null,\n      quiz_description: \"UnAssigned\",\n      description: \"\",\n      solution: \"\",\n      option1: \"\",\n      option2: \"\",\n      option3: \"\",\n      option4: \"\",\n      answerkey: \"\",\n      problemType: \"mcq\",\n      icons: data.icons\n    }; //this.baseState=this.state;\n\n    this.selectChange = this.selectChange.bind(this);\n    this.descriptionChange = this.descriptionChange.bind(this);\n    this.solutionChange = this.solutionChange.bind(this);\n    this.option1Change = this.option1Change.bind(this);\n    this.option2Change = this.option2Change.bind(this);\n    this.option3Change = this.option3Change.bind(this);\n    this.option4Change = this.option4Change.bind(this);\n    this.answerkeyChange = this.answerkeyChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.problemTypeSelectChange = this.problemTypeSelectChange.bind(this);\n  }\n\n  selectChange(e) {\n    //console.log(e.target.options[e.target.selectedIndex].text);\n    var new_quiz_id = e.target.value;\n    var new_quiz_description = e.target.options[e.target.selectedIndex].text; //console.log(new_quiz_id+' '+new_quiz_description);\n\n    this.setState({\n      quiz_id: new_quiz_id,\n      quiz_description: new_quiz_description\n    });\n  }\n\n  problemTypeSelectChange(e) {\n    var new_problemType = e.target.value;\n    var new_problemTypeDescription = e.target.options[e.target.selectedIndex].text;\n    this.setState({\n      problemType: new_problemType\n    });\n    console.log(new_problemType);\n  }\n\n  descriptionChange(e) {\n    console.log(this.state.quiz_id + ' ' + this.state.quiz_description);\n    const new_description = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      description: new_description\n    });\n  }\n\n  solutionChange(e) {\n    const new_solution = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      solution: new_solution\n    });\n  }\n\n  answerkeyChange(e) {\n    const new_answerkey = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      answerkey: new_answerkey\n    });\n  }\n\n  option1Change(e) {\n    const new_option1 = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      option1: new_option1\n    });\n  }\n\n  option2Change(e) {\n    const new_option2 = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      option2: new_option2\n    });\n  }\n\n  option3Change(e) {\n    const new_option3 = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      option3: new_option3\n    });\n  }\n\n  option4Change(e) {\n    const new_option4 = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      option4: new_option4\n    });\n  }\n\n  handleSubmit(e) {\n    if (this.state.problemType === \"mcq\" && isNaN(this.state.answerKey)) {\n      alert('Answer key should be numeric for problem type (Multiple Choice)');\n      return;\n    } else {\n      this.props.showSpinner();\n      var reqBody = 'probDescription=' + encodeURIComponent(this.state.description);\n      reqBody += '&option1=' + encodeURIComponent(this.state.option1);\n      reqBody += '&option2=' + encodeURIComponent(this.state.option2);\n      reqBody += '&option3=' + encodeURIComponent(this.state.option3);\n      reqBody += '&option4=' + encodeURIComponent(this.state.option4);\n      reqBody += '&answerKey=' + encodeURIComponent(this.state.answerkey);\n      reqBody += '&quizId=' + encodeURIComponent(this.state.quiz_id);\n      var solution = this.state.solution.replace(/%20/g, '+');\n      reqBody += '&ansDescription=' + encodeURIComponent(solution);\n      reqBody += '&authorName=' + encodeURIComponent(this.props.loggedInUser);\n      fetch(`/api/insertProblemAction`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data => {\n        let problemsArrayCopy = [...this.props.problemsArray];\n        let obj = {\n          id: data.problemId,\n          quiz_id: this.state.quiz_id,\n          quiz_description: this.state.quiz_description,\n          description: this.state.description,\n          solution: this.state.solution,\n          option1: this.state.option1,\n          option2: this.state.option2,\n          option3: this.state.option3,\n          option4: this.state.option4,\n          answerKey: this.state.answerkey,\n          author_id: this.props.loggedInUser\n        };\n        problemsArrayCopy.push(obj);\n        this.props.setProblems(problemsArrayCopy);\n        this.setState({\n          description: \"\",\n          solution: \"\",\n          option1: \"\",\n          option2: \"\",\n          option3: \"\",\n          option4: \"\",\n          answerkey: \"\"\n        });\n        this.props.hideSpinner(); //if(data.updatestatus==\"ok\")\n\n        alert('problem inserted');\n        window.location.assign(\"http://\" + window.location.hostname + ':' + window.location.port + \"/problemsBrowse\");\n      });\n    } //end of else\n\n  }\n\n  render() {\n    if (this.props.loggedInUser === '') {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/errorLogin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"InsertWindow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"HomeLink\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"homeIcon\",\n      src: this.state.icons.home,\n      alt: \"back to home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, \"Insert Problem\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }\n    }, \"Problem Type:\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"problemType\",\n      onChange: this.problemTypeSelectChange,\n      name: \"problemType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mcq\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, \"Multiple Choice\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, \"Descriptive\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 28\n      }\n    }), \"Quiz:\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"quizId\",\n      onChange: this.selectChange,\n      name: \"quizId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"null\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 27\n      }\n    }, \"UnAssigned\"), this.props.quizesArray.map((objQ, index) => /*#__PURE__*/React.createElement(\"option\", {\n      value: objQ.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 38\n      }\n    }, objQ.description))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 28\n      }\n    }), \"Problem Description:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"probDescription\",\n      name: \"probDescription\",\n      rows: \"10\",\n      type: \"text\",\n      style: {\n        width: '90%'\n      },\n      value: this.state.description,\n      onChange: this.descriptionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 34\n      }\n    }), \"Answer Description:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"ansDescription\",\n      name: \"ansDescription\",\n      rows: \"10\",\n      type: \"text\",\n      style: {\n        width: '90%'\n      },\n      value: this.state.solution,\n      onChange: this.solutionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flexColRight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, this.state.problemType === \"mcq\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 34\n      }\n    }), \"Option1: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        width: '100px'\n      },\n      onChange: this.option1Change,\n      id: \"option1\",\n      value: this.state.option1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 67\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 72\n      }\n    }), \"Option2: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        width: '100px'\n      },\n      onChange: this.option2Change,\n      id: \"option2\",\n      value: this.state.option2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 71\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 76\n      }\n    }), \"Option3: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        width: '100px'\n      },\n      onChange: this.option3Change,\n      id: \"option3\",\n      value: this.state.option3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 71\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 76\n      }\n    }), \"Option4: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        width: '100px'\n      },\n      onChange: this.option4Change,\n      id: \"option4\",\n      value: this.state.option4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 78\n      }\n    }), \"Answer Key: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"answerKey\",\n      onChange: this.answerkeyChange,\n      style: {\n        width: '100px'\n      },\n      value: this.state.answerkey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }), \"Author:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"authorName\",\n      name: \"authorName\",\n      type: \"text\",\n      style: {\n        width: '100px'\n      },\n      value: this.props.loggedInUser,\n      readonly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Insert Problem\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'block',\n        paddingTop: '30px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'block',\n        paddingTop: '10px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 16\n      }\n    })));\n  }\n\n  componentDidMount() {\n    this.props.loadQuizes();\n    if (this.state.quiz_id === undefined && this.props.quizesArray.length > 0) this.setState({\n      quiz_id: this.props.quizesArray[0].id,\n      quiz_description: this.props.quizesArray[0].description\n    });\n  }\n\n}\n\nexport default ProblemInsert;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/ProblemInsert.js"],"names":["React","Redirect","data","ProblemInsert","Component","constructor","props","state","quizesArray","quiz_id","quiz_description","description","solution","option1","option2","option3","option4","answerkey","problemType","icons","selectChange","bind","descriptionChange","solutionChange","option1Change","option2Change","option3Change","option4Change","answerkeyChange","handleSubmit","problemTypeSelectChange","e","new_quiz_id","target","value","new_quiz_description","options","selectedIndex","text","setState","new_problemType","new_problemTypeDescription","console","log","new_description","new_solution","new_answerkey","new_option1","new_option2","new_option3","new_option4","isNaN","answerKey","alert","showSpinner","reqBody","encodeURIComponent","replace","loggedInUser","fetch","headers","method","body","then","res","json","problemsArrayCopy","problemsArray","obj","id","problemId","author_id","push","setProblems","hideSpinner","window","location","assign","hostname","port","render","home","map","objQ","index","width","display","paddingTop","componentDidMount","loadQuizes","undefined","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {  Redirect } from 'react-router-dom';\nimport data from \"./data\";\n\nclass ProblemInsert extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      quizesArray:[],\n      quiz_id:null,\n      quiz_description:\"UnAssigned\",\n      description:\"\",\n      solution:\"\",\n      option1:\"\",\n      option2:\"\",\n      option3:\"\",\n      option4:\"\",\n      answerkey:\"\",\n      problemType:\"mcq\",\n      icons: data.icons\n    }\n    //this.baseState=this.state;\n    this.selectChange=this.selectChange.bind(this);\n    this.descriptionChange=this.descriptionChange.bind(this);\n    this.solutionChange=this.solutionChange.bind(this);\n    this.option1Change=this.option1Change.bind(this);\n    this.option2Change=this.option2Change.bind(this);\n    this.option3Change=this.option3Change.bind(this);\n    this.option4Change=this.option4Change.bind(this);\n    this.answerkeyChange=this.answerkeyChange.bind(this);\n    this.handleSubmit=this.handleSubmit.bind(this);\n    this.problemTypeSelectChange=this.problemTypeSelectChange.bind(this);\n  }\n\n  selectChange(e){\n    //console.log(e.target.options[e.target.selectedIndex].text);\n    var new_quiz_id=e.target.value;\n    var new_quiz_description=e.target.options[e.target.selectedIndex].text;\n    //console.log(new_quiz_id+' '+new_quiz_description);\n    this.setState({quiz_id:new_quiz_id, quiz_description:new_quiz_description});\n  }\n\n  problemTypeSelectChange(e){\n    var new_problemType=e.target.value;\n    var new_problemTypeDescription=e.target.options[e.target.selectedIndex].text;\n    this.setState({problemType:new_problemType});\n    console.log(new_problemType);\n  }\n\n  descriptionChange(e){\n    console.log(this.state.quiz_id+' '+this.state.quiz_description);\n    const new_description=e.target.value;\n    //console.log(e.target.value);\n    this.setState({description:new_description});\n  }\n\n  solutionChange(e){\n    const new_solution=e.target.value;\n    //console.log(e.target.value);\n    this.setState({solution:new_solution});\n  }\n\n  answerkeyChange(e){\n    const new_answerkey=e.target.value;\n    //console.log(e.target.value);\n    this.setState({answerkey:new_answerkey});\n  }\n\n  option1Change(e){\n    const new_option1=e.target.value;\n    //console.log(e.target.value);\n    this.setState({option1:new_option1});\n  }\n\n  option2Change(e){\n    const new_option2=e.target.value;\n    //console.log(e.target.value);\n    this.setState({option2:new_option2});\n  }\n\n  option3Change(e){\n    const new_option3=e.target.value;\n    //console.log(e.target.value);\n    this.setState({option3:new_option3});\n  }\n\n  option4Change(e){\n    const new_option4=e.target.value;\n    //console.log(e.target.value);\n    this.setState({option4:new_option4});\n  }\n\n  handleSubmit(e){\n     if(this.state.problemType===\"mcq\"&&isNaN(this.state.answerKey)){\n       alert('Answer key should be numeric for problem type (Multiple Choice)');\n       return;\n     }\n     else{\n      this.props.showSpinner();\n       var reqBody='probDescription='+encodeURIComponent(this.state.description);\n       reqBody+='&option1='+encodeURIComponent(this.state.option1);\n       reqBody+='&option2='+encodeURIComponent(this.state.option2);\n       reqBody+='&option3='+encodeURIComponent(this.state.option3);\n       reqBody+='&option4='+encodeURIComponent(this.state.option4);\n       reqBody+='&answerKey='+encodeURIComponent(this.state.answerkey);\n       reqBody+='&quizId='+encodeURIComponent(this.state.quiz_id);\n\n       var solution=this.state.solution.replace(/%20/g, '+');\n       reqBody+='&ansDescription='+encodeURIComponent(solution);\n       reqBody+='&authorName='+encodeURIComponent(this.props.loggedInUser);\n\n       fetch(`/api/insertProblemAction`, {\n         headers:{\n           'Accept':'application/json',\n           'Content-type': 'application/x-www-form-urlencoded'\n         },\n         method: 'POST',\n         body: reqBody\n       })\n       .then(res=>res.json())\n       .then(data=>{\n             let problemsArrayCopy=[...this.props.problemsArray];\n             let obj={\n               id: data.problemId,\n               quiz_id: this.state.quiz_id,\n               quiz_description: this.state.quiz_description,\n               description:this.state.description,\n               solution:this.state.solution,\n               option1:this.state.option1,\n               option2:this.state.option2,\n               option3:this.state.option3,\n               option4:this.state.option4,\n               answerKey:this.state.answerkey,\n               author_id:this.props.loggedInUser\n             };\n             problemsArrayCopy.push(obj);\n             this.props.setProblems(problemsArrayCopy);\n             this.setState({\n                           description:\"\",\n                           solution:\"\",\n                           option1:\"\",\n                           option2:\"\",\n                           option3:\"\",\n                           option4:\"\",\n                           answerkey:\"\"}\n                         );\n             this.props.hideSpinner();\n           //if(data.updatestatus==\"ok\")\n               alert('problem inserted');\n               window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/problemsBrowse\");\n       })\n     }//end of else\n\n  }\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n    return (\n      <div class=\"InsertWindow\">\n          <a class=\"HomeLink\" href=\"/\">\n              <img class=\"homeIcon\" src={this.state.icons.home} alt=\"back to home\"/>\n          {/*back to home*/}\n          </a>\n          <div class=\"h1\">\n            Insert Problem\n          </div>\n          <fieldset>\n              <div className=\"row\">\n                  <div id=\"flexColLeft\">\n                     Problem Type:\n                     <select id=\"problemType\" onChange={this.problemTypeSelectChange} name=\"problemType\">\n                        <option value=\"mcq\">Multiple Choice</option>\n                        <option value=\"desc\">Descriptive</option>\n                      </select>\n                      <br/><br/>\n                      Quiz:\n                      <select id=\"quizId\" onChange={this.selectChange} name=\"quizId\">\n                          <option value=\"null\">UnAssigned</option>\n                      {\n                          this.props.quizesArray.map((objQ, index)=>(\n                                     <option value={objQ.id}>{objQ.description}</option>\n                            )\n                          )\n                      }\n                      </select>\n                      <br/><br/>\n                      Problem Description:<br/>\n                      <textarea id=\"probDescription\" name=\"probDescription\" rows=\"10\" type=\"text\" style={{width:'90%'}}\n                      value={this.state.description}\n                      onChange={this.descriptionChange}\n                      >\n                      </textarea><br/>\n                      Answer Description:<br/>\n                      <textarea id=\"ansDescription\" name=\"ansDescription\" rows=\"10\" type=\"text\" style={{width:'90%'}}\n                      value={this.state.solution}\n                      onChange={this.solutionChange}\n                      >\n                      </textarea>\n                  </div>\n                  <div id=\"flexColRight\">\n                          {this.state.problemType===\"mcq\"?(<>\n                            <br/><br/>\n                        Option1: <input type=\"text\" style={{width:'100px'}}\n                         onChange={this.option1Change}\n                         id=\"option1\" value={this.state.option1}/><br/><br/>\n                        Option2: <input type=\"text\" style={{width:'100px'}}\n                             onChange={this.option2Change}\n                             id=\"option2\" value={this.state.option2}/><br/><br/>\n                        Option3: <input type=\"text\" style={{width:'100px'}}\n                             onChange={this.option3Change}\n                             id=\"option3\" value={this.state.option3}/><br/><br/>\n                        Option4: <input type=\"text\" style={{width:'100px'}}\n                               onChange={this.option4Change}\n                               id=\"option4\" value={this.state.option4}/><br/><br/>\n                        Answer Key: <br/>\n                        <input type=\"text\" id=\"answerKey\"\n                        onChange={this.answerkeyChange}\n                        style={{width:'100px'}} value={this.state.answerkey}/></>):null}\n                        <br/>\n                        <br/>\n                        Author:<br/>\n                        <input id=\"authorName\" name=\"authorName\" type=\"text\" style={{width:'100px'}}\n                        value={this.props.loggedInUser} readonly>\n                        </input> <br/><br/><br/>\n                        <input type=\"button\"  value=\"Insert Problem\" onClick={this.handleSubmit}/>\n                  </div>\n              </div>\n              <div style={{display:'block', paddingTop:'30px', width:'100%'}}>\n\n               </div>\n               <div style={{display:'block', paddingTop:'10px', width:'100%'}}>\n\n               </div>\n           </fieldset>\n      </div>\n    )\n  }\n\n  componentDidMount(){\n    this.props.loadQuizes();\n    if(this.state.quiz_id===undefined&& this.props.quizesArray.length>0)\n        this.setState({quiz_id:this.props.quizesArray[0].id, quiz_description:this.props.quizesArray[0].description});\n  }\n\n\n}\n\nexport default ProblemInsert;\n"]},"metadata":{},"sourceType":"module"}