{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/QuizInsert.js\";\nimport React from 'react';\nimport data from './data';\nimport { Redirect } from 'react-router-dom';\n\nclass QuizInsert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      spinner: false,\n      duration_minutes: 30,\n      description: '',\n      courseSearchKey: '',\n      selectedCourseId: '',\n      courseObjectsFiltered: [],\n      coursesAddedArray: [],\n      augmentedCourseObjects: [],\n      augmentedCourseObjectsPrior: [],\n\n      /*courseId:null,\n      courseName:'UnAssigned',*/\n      icons: data.icons\n    };\n    this.baseState = {\n      description: ''\n    };\n    this.descriptionChange = this.descriptionChange.bind(this); //this.selectChange=this.selectChange.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.durationChange = this.durationChange.bind(this);\n    this.checkStaticCourse = this.checkStaticCourse.bind(this);\n    this.courseSearchBoxChange = this.courseSearchBoxChange.bind(this);\n    this.courseObjectsFilteredClick = this.courseObjectsFilteredClick.bind(this);\n    this.AddCourseToCoursesArray = this.AddCourseToCoursesArray.bind(this);\n  }\n\n  courseObjectsFilteredClick(str, courseId, e) {\n    this.setState({\n      courseSearchKey: str,\n      selectedCourseId: courseId,\n      courseObjectsFiltered: [],\n      augmentedCourseObjectsPrior: this.state.augmentedCourseObjects,\n      augmentedCourseObjects: []\n    });\n  }\n\n  courseSearchBoxChange(e) {\n    let strSearchKey = e.target.value;\n    var timer = setTimeout(() => {\n      this.checkStaticCourse(strSearchKey);\n    }, 1000);\n    const courseObjectsFiltered = e.target.value !== '' ? this.props.coursesArray.filter(val => val.name.toUpperCase().startsWith(strSearchKey.toUpperCase())) : []; //const courseObjectsFiltered=this.props.coursesArray.filter((val)=>val.description.toUpperCase().startsWith(e.target.value.toUpperCase()));\n\n    this.setState({\n      courseSearchKey: e.target.value,\n      courseObjectsFiltered: courseObjectsFiltered\n    });\n  }\n\n  async checkStaticCourse(currentValue) {\n    if (currentValue === this.state.courseSearchKey && currentValue !== '') {\n      //console.log('static value'+currentValue);\n      var reqBody = \"searchKey=\" + encodeURIComponent(this.state.courseSearchKey);\n      let searchResults = await fetch(`/api/searchCoursesForPrefix`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      });\n      let prefixSearchResults = await searchResults.json();\n      let augmentedCourseObjects = [];\n      prefixSearchResults.forEach(ele => {\n        let len = this.state.courseObjectsFiltered.filter(val => val.id === ele.id).length;\n        if (len <= 0) augmentedCourseObjects.push(ele);\n      }); //console.log(augmentedCourseObjects);\n\n      this.setState({\n        augmentedCourseObjects: augmentedCourseObjects\n      });\n    }\n  }\n\n  AddCourseToCoursesArray(e) {\n    let courseObjectsFilteredAugmented = [...this.props.coursesArray];\n    courseObjectsFilteredAugmented = courseObjectsFilteredAugmented.concat(this.state.augmentedCourseObjectsPrior);\n    const filteredArray = courseObjectsFilteredAugmented.filter(val => val.name.toUpperCase() === this.state.courseSearchKey.toUpperCase() && val.id === this.state.selectedCourseId);\n\n    if (filteredArray.length < 1) {\n      alert('Search key does not match any available  \\n\\t quiz description');\n    } else if (filteredArray.length > 1) {\n      alert('Search key matches multiple quizes\\' description!\\n\\t please choose another one');\n    } else {\n      console.log('filtered course object\\n' + JSON.stringify(filteredArray[0]));\n      let coursesArray = [...this.state.coursesAddedArray];\n      coursesArray.push(filteredArray[0]); //this.props.addCourseToCoursesArraySubmit(filteredArray[0]);\n\n      this.setState({\n        courseSearchKey: '',\n        selectedCourseId: '',\n        coursesAddedArray: coursesArray\n      });\n    }\n  }\n\n  removeCourseFromCoursesArray(e, courseId) {\n    let coursesArray = this.state.coursesAddedArray.filter(val => val.id !== courseId);\n    this.setState({\n      coursesAddedArray: coursesArray\n    });\n  }\n\n  handleSubmit() {\n    if (this.state.description === '') {\n      alert('Description cannot be empty');\n      return;\n    } else if (this.state.duration_minutes === '') {\n      alert('Duration cannot be empty');\n      return;\n    } else if (isNaN(this.state.duration_minutes)) {\n      alert('Duration has to be a number');\n      return;\n    } else {\n      this.props.showSpinner();\n      var reqBody = \"quizDescription=\" + encodeURIComponent(this.state.description);\n      reqBody += \"&duration_minutes=\" + encodeURIComponent(this.state.duration_minutes);\n      reqBody += \"&coursesArray=\" + encodeURIComponent(JSON.stringify(this.state.coursesAddedArray)); //reqBody+=\"&courseId=\"+encodeURIComponent(this.state.courseId);\n\n      reqBody += '&authorName=' + encodeURIComponent(this.props.loggedInUser);\n      fetch(`/api/insertQuizAction`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data => {\n        //if(data.updatestatus==\"ok\")\n        let quizesArrayCopy = [...this.props.quizesArray];\n        let obj = {\n          id: data.quizId,\n          description: this.state.description,\n          duration_minutes: this.state.duration_minutes,\n          name: this.state.courseName,\n          author_id: this.props.loggedInUser\n        };\n        quizesArrayCopy.push(obj);\n        this.props.setQuizes(quizesArrayCopy);\n        this.setState(this.baseState);\n        this.props.hideSpinner();\n        alert('Quiz inserted');\n        window.location.assign(\"http://\" + window.location.hostname + ':' + window.location.port + \"/quizesBrowse\");\n      });\n    }\n  }\n\n  durationChange(e) {\n    this.setState({\n      duration_minutes: e.target.value\n    });\n  }\n\n  descriptionChange(e) {\n    //console.log(this.state.courseId+' '+this.state.courseName);\n    const new_description = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      description: new_description\n    });\n  }\n\n  componentDidMount() {\n    this.props.loadCourses();\n    /*if(this.state.courseId===undefined && this.props.coursesArray.length>0)\n        this.setState({courseId:this.props.coursesArray[0].id, courseName:this.props.coursesArray[0].name});*/\n  }\n  /*selectChange(e){\n    //console.log(e.target.value);\n    var new_courseId=e.target.value;\n    var new_courseName=e.target.options[e.target.selectedIndex].text;\n    this.setState({courseId:new_courseId, courseName:new_courseName});\n  }*/\n\n\n  render() {\n    if (this.props.loggedInUser === '') {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/errorLogin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 14\n        }\n      });\n    }\n\n    let courseObjectsFilteredAugmented = [...this.state.courseObjectsFiltered];\n    courseObjectsFilteredAugmented = courseObjectsFilteredAugmented.concat(this.state.augmentedCourseObjects);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quizInsert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"HomeLink\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"homeIcon\",\n      src: this.state.icons.home,\n      alt: \"back to home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, \"Insert Quiz\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }, \"Duration (minutes):\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"durationMinutes\",\n      style: {\n        marginLeft: '23px'\n      },\n      onChange: this.durationChange,\n      value: this.state.duration_minutes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 14\n      }\n    }), \"Quiz Description:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"quizDescription\",\n      name: \"quizDescription\",\n      type: \"text\",\n      rows: \"10\",\n      style: {\n        width: '90%'\n      },\n      onChange: this.descriptionChange,\n      value: this.state.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 16\n      }\n    }), \"Author:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"authorName\",\n      name: \"authorName\",\n      type: \"text\",\n      style: {\n        width: '100px',\n        textAlign: 'center'\n      },\n      required: \"true\",\n      value: this.props.loggedInUser,\n      readonly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }), \"Courses:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"AddToDialog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"searchBox\",\n      type: \"text\",\n      name: \"searchBox\",\n      value: this.state.courseSearchKey,\n      onChange: this.courseSearchBoxChange,\n      placeholder: \"Type first letters of quiz \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 18\n      }\n    }, courseObjectsFilteredAugmented.map(obj => /*#__PURE__*/React.createElement(\"div\", {\n      onClick: e => this.courseObjectsFilteredClick(obj.name, obj.id, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 63\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 136\n      }\n    }, obj.name.substring(0, this.state.courseSearchKey.length)), obj.name.substring(this.state.courseSearchKey.length), \"(\", obj.id, \")\")))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add Course\",\n      onClick: e => this.AddCourseToCoursesArray(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, this.state.coursesAddedArray !== undefined ? this.state.coursesAddedArray.map(objQ => /*#__PURE__*/React.createElement(\"div\", {\n      id: objQ.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    }, \"|\", objQ.name, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"closeBtn\",\n      onClick: e => this.removeCourseFromCoursesArray(e, objQ.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 20\n      }\n    }, \"\\xD7\"), \"\\xA0|\")) : null), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Insert Quiz\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 12\n      }\n    })));\n  }\n\n}\n\nexport default QuizInsert;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/QuizInsert.js"],"names":["React","data","Redirect","QuizInsert","Component","constructor","props","state","spinner","duration_minutes","description","courseSearchKey","selectedCourseId","courseObjectsFiltered","coursesAddedArray","augmentedCourseObjects","augmentedCourseObjectsPrior","icons","baseState","descriptionChange","bind","handleSubmit","durationChange","checkStaticCourse","courseSearchBoxChange","courseObjectsFilteredClick","AddCourseToCoursesArray","str","courseId","e","setState","strSearchKey","target","value","timer","setTimeout","coursesArray","filter","val","name","toUpperCase","startsWith","currentValue","reqBody","encodeURIComponent","searchResults","fetch","headers","method","body","prefixSearchResults","json","forEach","ele","len","id","length","push","courseObjectsFilteredAugmented","concat","filteredArray","alert","console","log","JSON","stringify","removeCourseFromCoursesArray","isNaN","showSpinner","loggedInUser","then","res","quizesArrayCopy","quizesArray","obj","quizId","courseName","author_id","setQuizes","hideSpinner","window","location","assign","hostname","port","new_description","componentDidMount","loadCourses","render","home","marginLeft","width","textAlign","map","substring","undefined","objQ"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAUC,QAAV,QAA0B,kBAA1B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAC,KADC;AAETC,MAAAA,gBAAgB,EAAC,EAFR;AAGTC,MAAAA,WAAW,EAAC,EAHH;AAITC,MAAAA,eAAe,EAAE,EAJR;AAKTC,MAAAA,gBAAgB,EAAC,EALR;AAMTC,MAAAA,qBAAqB,EAAC,EANb;AAOTC,MAAAA,iBAAiB,EAAC,EAPT;AAQTC,MAAAA,sBAAsB,EAAC,EARd;AASTC,MAAAA,2BAA2B,EAAC,EATnB;;AAWT;;AAEAC,MAAAA,KAAK,EAAEhB,IAAI,CAACgB;AAbH,KAAX;AAeA,SAAKC,SAAL,GAAe;AACbR,MAAAA,WAAW,EAAC;AADC,KAAf;AAGA,SAAKS,iBAAL,GAAuB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAvB,CApBgB,CAqBhB;;AACA,SAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAAlB;AACA,SAAKE,cAAL,GAAoB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAApB;AAEA,SAAKG,iBAAL,GAAuB,KAAKA,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAAvB;AACA,SAAKI,qBAAL,GAA2B,KAAKA,qBAAL,CAA2BJ,IAA3B,CAAgC,IAAhC,CAA3B;AACA,SAAKK,0BAAL,GAAgC,KAAKA,0BAAL,CAAgCL,IAAhC,CAAqC,IAArC,CAAhC;AACA,SAAKM,uBAAL,GAA6B,KAAKA,uBAAL,CAA6BN,IAA7B,CAAkC,IAAlC,CAA7B;AACD;;AAEDK,EAAAA,0BAA0B,CAACE,GAAD,EAAMC,QAAN,EAAgBC,CAAhB,EAAkB;AAC1C,SAAKC,QAAL,CAAc;AAACnB,MAAAA,eAAe,EAAEgB,GAAlB;AAAuBf,MAAAA,gBAAgB,EAAEgB,QAAzC;AAAmDf,MAAAA,qBAAqB,EAAE,EAA1E;AACVG,MAAAA,2BAA2B,EAAE,KAAKT,KAAL,CAAWQ,sBAD9B;AACsDA,MAAAA,sBAAsB,EAAC;AAD7E,KAAd;AAED;;AAEDS,EAAAA,qBAAqB,CAACK,CAAD,EAAG;AACtB,QAAIE,YAAY,GAACF,CAAC,CAACG,MAAF,CAASC,KAA1B;AACA,QAAIC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAAC,WAAKZ,iBAAL,CAAuBQ,YAAvB;AAAsC,KAA9C,EAAgD,IAAhD,CAAtB;AACA,UAAMlB,qBAAqB,GAACgB,CAAC,CAACG,MAAF,CAASC,KAAT,KAAiB,EAAjB,GAAoB,KAAK3B,KAAL,CAAW8B,YAAX,CAAwBC,MAAxB,CAAgCC,GAAD,IAAOA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,UAAvB,CAAkCV,YAAY,CAACS,WAAb,EAAlC,CAAtC,CAApB,GAAyH,EAArJ,CAHsB,CAItB;;AACA,SAAKV,QAAL,CAAc;AAACnB,MAAAA,eAAe,EAAEkB,CAAC,CAACG,MAAF,CAASC,KAA3B;AAAkCpB,MAAAA,qBAAqB,EAAEA;AAAzD,KAAd;AACD;;AAED,QAAMU,iBAAN,CAAwBmB,YAAxB,EAAqC;AACnC,QAAGA,YAAY,KAAG,KAAKnC,KAAL,CAAWI,eAA1B,IAA6C+B,YAAY,KAAG,EAA/D,EAAkE;AAChE;AACA,UAAIC,OAAO,GAAC,eAAaC,kBAAkB,CAAC,KAAKrC,KAAL,CAAWI,eAAZ,CAA3C;AACA,UAAIkC,aAAa,GAAC,MAAMC,KAAK,CAAE,6BAAF,EAAgC;AACrDC,QAAAA,OAAO,EAAC;AACN,oBAAS,kBADH;AAEN,0BAAgB;AAFV,SAD6C;AAKrDC,QAAAA,MAAM,EAAE,MAL6C;AAMrDC,QAAAA,IAAI,EAAEN;AAN+C,OAAhC,CAA7B;AAQA,UAAIO,mBAAmB,GAAC,MAAML,aAAa,CAACM,IAAd,EAA9B;AAEA,UAAIpC,sBAAsB,GAAC,EAA3B;AACAmC,MAAAA,mBAAmB,CAACE,OAApB,CAA4BC,GAAG,IAAE;AAC/B,YAAIC,GAAG,GAAC,KAAK/C,KAAL,CAAWM,qBAAX,CAAiCwB,MAAjC,CAAwCC,GAAG,IAAEA,GAAG,CAACiB,EAAJ,KAASF,GAAG,CAACE,EAA1D,EAA8DC,MAAtE;AACA,YAAGF,GAAG,IAAE,CAAR,EACEvC,sBAAsB,CAAC0C,IAAvB,CAA4BJ,GAA5B;AACH,OAJD,EAdgE,CAmBhE;;AACA,WAAKvB,QAAL,CAAc;AAACf,QAAAA,sBAAsB,EAACA;AAAxB,OAAd;AACD;AACF;;AAEDW,EAAAA,uBAAuB,CAACG,CAAD,EAAG;AACpB,QAAI6B,8BAA8B,GAAC,CAAC,GAAG,KAAKpD,KAAL,CAAW8B,YAAf,CAAnC;AACAsB,IAAAA,8BAA8B,GAACA,8BAA8B,CAACC,MAA/B,CAAsC,KAAKpD,KAAL,CAAWS,2BAAjD,CAA/B;AAEA,UAAM4C,aAAa,GAACF,8BAA8B,CAACrB,MAA/B,CAAuCC,GAAD,IAAOA,GAAG,CAACC,IAAJ,CAASC,WAAT,OAAyB,KAAKjC,KAAL,CAAWI,eAAX,CAA2B6B,WAA3B,EAAzB,IAAmEF,GAAG,CAACiB,EAAJ,KAAS,KAAKhD,KAAL,CAAWK,gBAApI,CAApB;;AACA,QAAGgD,aAAa,CAACJ,MAAd,GAAqB,CAAxB,EAA0B;AACxBK,MAAAA,KAAK,CAAC,gEAAD,CAAL;AACD,KAFD,MAGK,IAAGD,aAAa,CAACJ,MAAd,GAAqB,CAAxB,EAA0B;AAC7BK,MAAAA,KAAK,CAAC,iFAAD,CAAL;AACD,KAFI,MAGA;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAA2BC,IAAI,CAACC,SAAL,CAAeL,aAAa,CAAC,CAAD,CAA5B,CAAvC;AACA,UAAIxB,YAAY,GAAC,CAAC,GAAG,KAAK7B,KAAL,CAAWO,iBAAf,CAAjB;AACAsB,MAAAA,YAAY,CAACqB,IAAb,CAAkBG,aAAa,CAAC,CAAD,CAA/B,EAHG,CAIH;;AACA,WAAK9B,QAAL,CAAc;AAACnB,QAAAA,eAAe,EAAC,EAAjB;AAAqBC,QAAAA,gBAAgB,EAAC,EAAtC;AAA0CE,QAAAA,iBAAiB,EAAEsB;AAA7D,OAAd;AACD;AACN;;AAED8B,EAAAA,4BAA4B,CAACrC,CAAD,EAAID,QAAJ,EAAa;AACvC,QAAIQ,YAAY,GAAC,KAAK7B,KAAL,CAAWO,iBAAX,CAA6BuB,MAA7B,CAAoCC,GAAG,IAAEA,GAAG,CAACiB,EAAJ,KAAS3B,QAAlD,CAAjB;AACA,SAAKE,QAAL,CAAc;AAAChB,MAAAA,iBAAiB,EAACsB;AAAnB,KAAd;AACD;;AAEDf,EAAAA,YAAY,GAAE;AACZ,QAAG,KAAKd,KAAL,CAAWG,WAAX,KAAyB,EAA5B,EAA+B;AAC7BmD,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACA;AACD,KAHD,MAIK,IAAG,KAAKtD,KAAL,CAAWE,gBAAX,KAA8B,EAAjC,EAAoC;AACvCoD,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACA;AACD,KAHI,MAIA,IAAGM,KAAK,CAAC,KAAK5D,KAAL,CAAWE,gBAAZ,CAAR,EAAsC;AACzCoD,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACA;AACD,KAHI,MAID;AACF,WAAKvD,KAAL,CAAW8D,WAAX;AACA,UAAIzB,OAAO,GAAC,qBAAmBC,kBAAkB,CAAC,KAAKrC,KAAL,CAAWG,WAAZ,CAAjD;AACIiC,MAAAA,OAAO,IAAE,uBAAqBC,kBAAkB,CAAC,KAAKrC,KAAL,CAAWE,gBAAZ,CAAhD;AACAkC,MAAAA,OAAO,IAAE,mBAAiBC,kBAAkB,CAACoB,IAAI,CAACC,SAAL,CAAe,KAAK1D,KAAL,CAAWO,iBAA1B,CAAD,CAA5C,CAJF,CAKF;;AACA6B,MAAAA,OAAO,IAAE,iBAAeC,kBAAkB,CAAC,KAAKtC,KAAL,CAAW+D,YAAZ,CAA1C;AAEAvB,MAAAA,KAAK,CAAE,uBAAF,EAA0B;AAC7BC,QAAAA,OAAO,EAAC;AACN,oBAAS,kBADH;AAEN,0BAAgB;AAFV,SADqB;AAK7BC,QAAAA,MAAM,EAAE,MALqB;AAM7BC,QAAAA,IAAI,EAAEN;AANuB,OAA1B,CAAL,CAQC2B,IARD,CAQMC,GAAG,IAAEA,GAAG,CAACpB,IAAJ,EARX,EASCmB,IATD,CASMrE,IAAI,IAAE;AACR;AACI,YAAIuE,eAAe,GAAC,CAAC,GAAG,KAAKlE,KAAL,CAAWmE,WAAf,CAApB;AACA,YAAIC,GAAG,GAAC;AACNnB,UAAAA,EAAE,EAAEtD,IAAI,CAAC0E,MADH;AAENjE,UAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWG,WAFlB;AAGND,UAAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWE,gBAHvB;AAIN8B,UAAAA,IAAI,EAAC,KAAKhC,KAAL,CAAWqE,UAJV;AAKNC,UAAAA,SAAS,EAAC,KAAKvE,KAAL,CAAW+D;AALf,SAAR;AAOAG,QAAAA,eAAe,CAACf,IAAhB,CAAqBiB,GAArB;AACA,aAAKpE,KAAL,CAAWwE,SAAX,CAAqBN,eAArB;AACA,aAAK1C,QAAL,CAAc,KAAKZ,SAAnB;AACA,aAAKZ,KAAL,CAAWyE,WAAX;AACAlB,QAAAA,KAAK,CAAC,eAAD,CAAL;AACAmB,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,YAAUF,MAAM,CAACC,QAAP,CAAgBE,QAA1B,GAAmC,GAAnC,GAAuCH,MAAM,CAACC,QAAP,CAAgBG,IAAvD,GAA4D,eAAnF;AACP,OAzBD;AA2BD;AAEF;;AAED9D,EAAAA,cAAc,CAACO,CAAD,EAAG;AACf,SAAKC,QAAL,CAAc;AAACrB,MAAAA,gBAAgB,EAACoB,CAAC,CAACG,MAAF,CAASC;AAA3B,KAAd;AACD;;AAEDd,EAAAA,iBAAiB,CAACU,CAAD,EAAG;AAClB;AACA,UAAMwD,eAAe,GAACxD,CAAC,CAACG,MAAF,CAASC,KAA/B,CAFkB,CAGlB;;AACA,SAAKH,QAAL,CAAc;AAACpB,MAAAA,WAAW,EAAC2E;AAAb,KAAd;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKhF,KAAL,CAAWiF,WAAX;AACA;;AAED;AAED;;;;;;;;AAOAC,EAAAA,MAAM,GAAE;AACN,QAAG,KAAKlF,KAAL,CAAW+D,YAAX,KAA0B,EAA7B,EAAgC;AAC9B,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAIX,8BAA8B,GAAC,CAAC,GAAG,KAAKnD,KAAL,CAAWM,qBAAf,CAAnC;AACA6C,IAAAA,8BAA8B,GAACA,8BAA8B,CAACC,MAA/B,CAAsC,KAAKpD,KAAL,CAAWQ,sBAAjD,CAA/B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAG,MAAA,KAAK,EAAC,UAAT;AAAoB,MAAA,IAAI,EAAC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAsB,MAAA,GAAG,EAAE,KAAKR,KAAL,CAAWU,KAAX,CAAiBwE,IAA5C;AAAkD,MAAA,GAAG,EAAC,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADA,eAKA;AAAK,MAAA,KAAK,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALA,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,eAEA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,iBAAtB;AAAwC,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAC;AAAZ,OAA/C;AACA,MAAA,QAAQ,EAAE,KAAKpE,cADf;AAEA,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWE,gBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,eAKK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALL,oCAMmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANnB,eAOE;AAAU,MAAA,EAAE,EAAC,iBAAb;AAA+B,MAAA,IAAI,EAAC,iBAApC;AAAsD,MAAA,IAAI,EAAC,MAA3D;AAAkE,MAAA,IAAI,EAAC,IAAvE;AACA,MAAA,KAAK,EAAE;AAACkF,QAAAA,KAAK,EAAC;AAAP,OADP;AAEA,MAAA,QAAQ,EAAE,KAAKxE,iBAFf;AAGA,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWG,WAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,eAaO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbP,0BAcS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdT,eAeE;AAAO,MAAA,EAAE,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC,YAA5B;AAAyC,MAAA,IAAI,EAAC,MAA9C;AAAqD,MAAA,KAAK,EAAE;AAACiF,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,SAAS,EAAE;AAA3B,OAA5D;AACA,MAAA,QAAQ,EAAC,MADT;AACgB,MAAA,KAAK,EAAE,KAAKtF,KAAL,CAAW+D,YADlC;AACgD,MAAA,QAAQ,MADxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,2BAoBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBV,eA8BE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAO,MAAA,EAAE,EAAC,WAAV;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAkC,MAAA,IAAI,EAAC,WAAvC;AACE,MAAA,KAAK,EAAE,KAAK9D,KAAL,CAAWI,eADpB;AAEE,MAAA,QAAQ,EAAE,KAAKa,qBAFjB;AAGC,MAAA,WAAW,EAAC,6BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAKG;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIkC,8BAA8B,CAACmC,GAA/B,CAAmCnB,GAAG,iBAAG;AAAK,MAAA,OAAO,EAAG7C,CAAD,IAAK,KAAKJ,0BAAL,CAAgCiD,GAAG,CAACnC,IAApC,EAA0CmC,GAAG,CAACnB,EAA9C,EAAkD1B,CAAlD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS6C,GAAG,CAACnC,IAAJ,CAASuD,SAAT,CAAmB,CAAnB,EAAqB,KAAKvF,KAAL,CAAWI,eAAX,CAA2B6C,MAAhD,CAAT,CAAzE,EAAoJkB,GAAG,CAACnC,IAAJ,CAASuD,SAAT,CAAmB,KAAKvF,KAAL,CAAWI,eAAX,CAA2B6C,MAA9C,CAApJ,OAA4MkB,GAAG,CAACnB,EAAhN,MAAzC,CAFJ,CALH,CADJ,eAYI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,YAA3B;AAAwC,MAAA,OAAO,EAAG1B,CAAD,IAAK,KAAKH,uBAAL,CAA6BG,CAA7B,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CA9BF,eA4CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CF,eA6CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKtB,KAAL,CAAWO,iBAAX,KAA+BiF,SAA/B,GACE,KAAKxF,KAAL,CAAWO,iBAAX,CAA6B+E,GAA7B,CAAiCG,IAAI,iBACnC;AAAO,MAAA,EAAE,EAAEA,IAAI,CAACzC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuByC,IAAI,CAACzD,IAA5B,eACC;AAAM,MAAA,SAAS,EAAC,UAAhB;AACE,MAAA,OAAO,EAAGV,CAAD,IAAK,KAAKqC,4BAAL,CAAkCrC,CAAlC,EAAqCmE,IAAI,CAACzC,EAA1C,CADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,UADF,CADF,GAQE,IAVN,CA7CF,eA2DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3DF,eA2DO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3DP,eA4DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5DF,eA6DG;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,aAA3B;AAAyC,MAAA,OAAO,EAAE,KAAKlC,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7DH,CARF,CADF;AA0ED;;AA9PqC;;AAkQxC,eAAelB,UAAf","sourcesContent":["import React from 'react';\nimport data from './data';\nimport {  Redirect } from 'react-router-dom';\n\nclass QuizInsert extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      spinner:false,\n      duration_minutes:30,\n      description:'',\n      courseSearchKey: '',\n      selectedCourseId:'',\n      courseObjectsFiltered:[],\n      coursesAddedArray:[],\n      augmentedCourseObjects:[],\n      augmentedCourseObjectsPrior:[],\n\n      /*courseId:null,\n      courseName:'UnAssigned',*/\n      icons: data.icons\n    }\n    this.baseState={\n      description:''\n    }\n    this.descriptionChange=this.descriptionChange.bind(this);\n    //this.selectChange=this.selectChange.bind(this);\n    this.handleSubmit=this.handleSubmit.bind(this);\n    this.durationChange=this.durationChange.bind(this);\n\n    this.checkStaticCourse=this.checkStaticCourse.bind(this);\n    this.courseSearchBoxChange=this.courseSearchBoxChange.bind(this);\n    this.courseObjectsFilteredClick=this.courseObjectsFilteredClick.bind(this);\n    this.AddCourseToCoursesArray=this.AddCourseToCoursesArray.bind(this);\n  }\n\n  courseObjectsFilteredClick(str, courseId, e){\n    this.setState({courseSearchKey: str, selectedCourseId: courseId, courseObjectsFiltered: [],\n        augmentedCourseObjectsPrior: this.state.augmentedCourseObjects, augmentedCourseObjects:[]});\n  }\n\n  courseSearchBoxChange(e){\n    let strSearchKey=e.target.value;\n    var timer = setTimeout(() => {this.checkStaticCourse(strSearchKey);}, 1000);\n    const courseObjectsFiltered=e.target.value!==''?this.props.coursesArray.filter((val)=>val.name.toUpperCase().startsWith(strSearchKey.toUpperCase())):[];\n    //const courseObjectsFiltered=this.props.coursesArray.filter((val)=>val.description.toUpperCase().startsWith(e.target.value.toUpperCase()));\n    this.setState({courseSearchKey: e.target.value, courseObjectsFiltered: courseObjectsFiltered});\n  }\n\n  async checkStaticCourse(currentValue){\n    if(currentValue===this.state.courseSearchKey && currentValue!==''){\n      //console.log('static value'+currentValue);\n      var reqBody=\"searchKey=\"+encodeURIComponent(this.state.courseSearchKey);\n      let searchResults=await fetch(`/api/searchCoursesForPrefix`, {\n              headers:{\n                'Accept':'application/json',\n                'Content-type': 'application/x-www-form-urlencoded'\n              },\n              method: 'POST',\n              body: reqBody\n            });\n      let prefixSearchResults=await searchResults.json();\n\n      let augmentedCourseObjects=[];\n      prefixSearchResults.forEach(ele=>{\n        let len=this.state.courseObjectsFiltered.filter(val=>val.id===ele.id).length;\n        if(len<=0)\n          augmentedCourseObjects.push(ele);\n      })\n      //console.log(augmentedCourseObjects);\n      this.setState({augmentedCourseObjects:augmentedCourseObjects});\n    }\n  }\n\n  AddCourseToCoursesArray(e){\n        let courseObjectsFilteredAugmented=[...this.props.coursesArray];\n        courseObjectsFilteredAugmented=courseObjectsFilteredAugmented.concat(this.state.augmentedCourseObjectsPrior);\n\n        const filteredArray=courseObjectsFilteredAugmented.filter((val)=>val.name.toUpperCase()===this.state.courseSearchKey.toUpperCase()&&val.id===this.state.selectedCourseId);\n        if(filteredArray.length<1){\n          alert('Search key does not match any available  \\n\\t quiz description');\n        }\n        else if(filteredArray.length>1){\n          alert('Search key matches multiple quizes\\' description!\\n\\t please choose another one');\n        }\n        else {\n          console.log('filtered course object\\n'+JSON.stringify(filteredArray[0]));\n          let coursesArray=[...this.state.coursesAddedArray];\n          coursesArray.push(filteredArray[0]);\n          //this.props.addCourseToCoursesArraySubmit(filteredArray[0]);\n          this.setState({courseSearchKey:'', selectedCourseId:'', coursesAddedArray: coursesArray})\n        }\n  }\n\n  removeCourseFromCoursesArray(e, courseId){\n    let coursesArray=this.state.coursesAddedArray.filter(val=>val.id!==courseId);\n    this.setState({coursesAddedArray:coursesArray});\n  }\n\n  handleSubmit(){\n    if(this.state.description===''){\n      alert('Description cannot be empty');\n      return;\n    }\n    else if(this.state.duration_minutes===''){\n      alert('Duration cannot be empty');\n      return;\n    }\n    else if(isNaN(this.state.duration_minutes)){\n      alert('Duration has to be a number');\n      return;\n    }\n    else{\n      this.props.showSpinner();\n      var reqBody=\"quizDescription=\"+encodeURIComponent(this.state.description);\n          reqBody+=\"&duration_minutes=\"+encodeURIComponent(this.state.duration_minutes);\n          reqBody+=\"&coursesArray=\"+encodeURIComponent(JSON.stringify(this.state.coursesAddedArray));\n      //reqBody+=\"&courseId=\"+encodeURIComponent(this.state.courseId);\n      reqBody+='&authorName='+encodeURIComponent(this.props.loggedInUser);\n\n      fetch(`/api/insertQuizAction`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data=>{\n          //if(data.updatestatus==\"ok\")\n              let quizesArrayCopy=[...this.props.quizesArray];\n              let obj={\n                id: data.quizId,\n                description: this.state.description,\n                duration_minutes: this.state.duration_minutes,\n                name:this.state.courseName,\n                author_id:this.props.loggedInUser\n              };\n              quizesArrayCopy.push(obj);\n              this.props.setQuizes(quizesArrayCopy);\n              this.setState(this.baseState);\n              this.props.hideSpinner();\n              alert('Quiz inserted');\n              window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/quizesBrowse\");\n      })\n\n    }\n\n  }\n\n  durationChange(e){\n    this.setState({duration_minutes:e.target.value})\n  }\n\n  descriptionChange(e){\n    //console.log(this.state.courseId+' '+this.state.courseName);\n    const new_description=e.target.value;\n    //console.log(e.target.value);\n    this.setState({description:new_description});\n  }\n\n  componentDidMount(){\n    this.props.loadCourses();\n    /*if(this.state.courseId===undefined && this.props.coursesArray.length>0)\n        this.setState({courseId:this.props.coursesArray[0].id, courseName:this.props.coursesArray[0].name});*/\n  }\n\n  /*selectChange(e){\n    //console.log(e.target.value);\n    var new_courseId=e.target.value;\n    var new_courseName=e.target.options[e.target.selectedIndex].text;\n    this.setState({courseId:new_courseId, courseName:new_courseName});\n  }*/\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n\n    let courseObjectsFilteredAugmented=[...this.state.courseObjectsFiltered];\n    courseObjectsFilteredAugmented=courseObjectsFilteredAugmented.concat(this.state.augmentedCourseObjects);\n\n    return (\n      <div className=\"quizInsert\">\n      <a class=\"HomeLink\" href=\"/\">\n          <img class=\"homeIcon\" src={this.state.icons.home} alt=\"back to home\"/>\n      {/*back to home*/}\n      </a>\n      <div class=\"h1\">\n        Insert Quiz\n      </div>\n        <fieldset>\n        Duration (minutes):<br/>\n        <input type=\"text\" id=\"durationMinutes\" style={{marginLeft:'23px'}}\n        onChange={this.durationChange}\n        value={this.state.duration_minutes}></input>\n        <br/><br/>\n          Quiz Description:<br/>\n          <textarea id=\"quizDescription\" name=\"quizDescription\" type=\"text\" rows=\"10\"\n          style={{width:'90%'}}\n          onChange={this.descriptionChange}\n          value={this.state.description}\n           >\n          </textarea>\n          <br/><br/>\n          Author:<br/>\n          <input id=\"authorName\" name=\"authorName\" type=\"text\" style={{width:'100px', textAlign: 'center'}}\n          required=\"true\" value={this.props.loggedInUser} readonly>\n          </input>\n          <br/>\n          <br/>\n          Courses:<br/>\n          {/*<select id=\"courseId\" onChange={this.selectChange}  name=\"courseId\" required=\"true\">\n              <option value=\"null\">UnAssigned</option>\n          {\n              this.props.coursesArray.map(obj=>(\n                <option value={obj.id}>{obj.name}</option>\n                )\n              )\n          }\n          </select>*/}\n          <div id=\"AddToDialog\">\n              <div className=\"autocomplete\">\n                 <input id=\"searchBox\" type=\"text\" name=\"searchBox\"\n                   value={this.state.courseSearchKey}\n                   onChange={this.courseSearchBoxChange}\n                  placeholder=\"Type first letters of quiz \"/>\n                 <div className=\"autocomplete-items\">\n                   {\n                     courseObjectsFilteredAugmented.map(obj=>(<div onClick={(e)=>this.courseObjectsFilteredClick(obj.name, obj.id, e)}><strong>{obj.name.substring(0,this.state.courseSearchKey.length)}</strong>{obj.name.substring(this.state.courseSearchKey.length)}({obj.id})</div>))\n                   }\n                 </div>\n              </div>\n              <input type=\"submit\" value=\"Add Course\" onClick={(e)=>this.AddCourseToCoursesArray(e)}/>\n          </div>\n          <br/>\n          <div>\n          {\n              this.state.coursesAddedArray!==undefined?\n              ( this.state.coursesAddedArray.map(objQ=>(\n                  <div   id={objQ.id} >|{objQ.name}\n                   <span className=\"closeBtn\"\n                     onClick={(e)=>this.removeCourseFromCoursesArray(e, objQ.id)}>&times;</span>&nbsp;|\n                  </div>\n                  )\n                )\n              ):null\n          }\n          </div>\n\n          <br/><br/>\n          <br/>\n           <input type=\"button\" value=\"Insert Quiz\" onClick={this.handleSubmit}/>\n        </fieldset>\n      </div>\n    )\n  }\n\n}\n\nexport default QuizInsert;\n"]},"metadata":{},"sourceType":"module"}