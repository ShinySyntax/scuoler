{"ast":null,"code":"var _jsxFileName = \"/home/mathew/javascript/ischools-react/client/src/components/QuizInsert.js\";\nimport React from 'react';\nimport data from './data';\nimport { Redirect } from 'react-router-dom';\n\nclass QuizInsert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      spinner: false,\n      duration_minutes: 30,\n      description: '',\n      quizType: \"d\",\n      courseSearchKey: '',\n      selectedCourseId: '',\n      courseObjectsFiltered: [],\n      coursesAddedArray: [],\n      augmentedCourseObjects: [],\n      augmentedCourseObjectsPrior: [],\n      problemSearchKey: '',\n      problemSearchResults: [],\n      problemsAddedArray: [],\n\n      /*courseId:null,\n      courseName:'UnAssigned',*/\n      icons: data.icons\n    };\n    this.baseState = {\n      description: ''\n    };\n    this.descriptionChange = this.descriptionChange.bind(this); //this.selectChange=this.selectChange.bind(this);\n\n    this.handleQuizInsert = this.handleQuizInsert.bind(this);\n    this.durationChange = this.durationChange.bind(this);\n    this.quizTypeSelectChange = this.quizTypeSelectChange.bind(this);\n    this.checkStaticCourse = this.checkStaticCourse.bind(this);\n    this.courseSearchBoxChange = this.courseSearchBoxChange.bind(this);\n    this.courseObjectsFilteredClick = this.courseObjectsFilteredClick.bind(this);\n    this.AddCourseToCoursesArray = this.AddCourseToCoursesArray.bind(this);\n    this.problemSearchKeyChange = this.problemSearchKeyChange.bind(this);\n    this.checkStaticProblem = this.checkStaticProblem.bind(this);\n    this.removeProblemFromProblemsArray = this.removeProblemFromProblemsArray.bind(this);\n    this.addProblemToProblemsArray = this.addProblemToProblemsArray.bind(this);\n  }\n\n  removeProblemFromProblemsArray(e, problemId) {\n    let problemsArray = this.state.problemsAddedArray.filter(val => val.id !== problemId);\n    this.setState({\n      problemsAddedArray: problemsArray\n    }); //console.log(quizesArray);\n  }\n\n  addProblemToProblemsArray(e, probObj) {\n    let problemsArray = [...this.state.problemsAddedArray];\n\n    if (problemsArray.filter(val => val.id === probObj.id).length > 0) {\n      alert('Problem redundant');\n    } else {\n      problemsArray.push(probObj);\n      this.setState({\n        problemsAddedArray: problemsArray\n      });\n    }\n  }\n\n  problemSearchKeyChange(e) {\n    const strSearchKey = e.target.value;\n    var timer = setTimeout(() => {\n      this.checkStaticProblem(strSearchKey);\n    }, 1000);\n    this.setState({\n      problemSearchKey: strSearchKey\n    });\n  }\n\n  async checkStaticProblem(currentValue) {\n    if (currentValue === this.state.problemSearchKey && currentValue !== '') {\n      //console.log('static value'+currentValue);\n      var reqBody = \"searchKey=\" + encodeURIComponent(this.state.problemSearchKey);\n      let searchResults = await fetch(`/api/searchProblems`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      });\n      let searchJson = await searchResults.json(); //console.log(searchJson);\n\n      this.setState({\n        problemSearchResults: searchJson\n      });\n    } else if (currentValue === this.state.problemSearchKey && currentValue === '') {\n      this.setState({\n        problemSearchResults: []\n      });\n    }\n  }\n\n  courseObjectsFilteredClick(str, courseId, e) {\n    this.setState({\n      courseSearchKey: str,\n      selectedCourseId: courseId,\n      courseObjectsFiltered: [],\n      augmentedCourseObjectsPrior: this.state.augmentedCourseObjects,\n      augmentedCourseObjects: []\n    });\n  }\n\n  courseSearchBoxChange(e) {\n    let strSearchKey = e.target.value;\n    var timer = setTimeout(() => {\n      this.checkStaticCourse(strSearchKey);\n    }, 1000);\n    const courseObjectsFiltered = e.target.value !== '' ? this.props.coursesArray.filter(val => val.name.toUpperCase().startsWith(strSearchKey.toUpperCase())) : []; //const courseObjectsFiltered=this.props.coursesArray.filter((val)=>val.description.toUpperCase().startsWith(e.target.value.toUpperCase()));\n\n    this.setState({\n      courseSearchKey: e.target.value,\n      courseObjectsFiltered: courseObjectsFiltered\n    });\n  }\n\n  async checkStaticCourse(currentValue) {\n    if (currentValue === this.state.courseSearchKey && currentValue !== '') {\n      //console.log('static value'+currentValue);\n      var reqBody = \"searchKey=\" + encodeURIComponent(this.state.courseSearchKey);\n      let searchResults = await fetch(`/api/searchCoursesForPrefix`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      });\n      let prefixSearchResults = await searchResults.json();\n      let augmentedCourseObjects = [];\n      prefixSearchResults.forEach(ele => {\n        let len = this.state.courseObjectsFiltered.filter(val => val.id === ele.id).length;\n        if (len <= 0) augmentedCourseObjects.push(ele);\n      }); //console.log(augmentedCourseObjects);\n\n      this.setState({\n        augmentedCourseObjects: augmentedCourseObjects\n      });\n    } else if (currentValue === this.state.courseSearchKey && currentValue === '') {\n      this.setState({\n        augmentedCourseObjects: []\n      });\n    }\n  }\n\n  AddCourseToCoursesArray(e) {\n    let courseObjectsFilteredAugmented = [...this.props.coursesArray];\n    courseObjectsFilteredAugmented = courseObjectsFilteredAugmented.concat(this.state.augmentedCourseObjectsPrior);\n    const filteredArray = courseObjectsFilteredAugmented.filter(val => val.name.toUpperCase() === this.state.courseSearchKey.toUpperCase() && val.id === this.state.selectedCourseId);\n\n    if (filteredArray.length < 1) {\n      alert('Search key does not match any available  \\n\\t quiz description');\n    } else if (filteredArray.length > 1) {\n      alert('Search key matches multiple quizes\\' description!\\n\\t please choose another one');\n    } else {\n      console.log('filtered course object\\n' + JSON.stringify(filteredArray[0]));\n      let coursesArray = [...this.state.coursesAddedArray];\n      coursesArray.push(filteredArray[0]); //this.props.addCourseToCoursesArraySubmit(filteredArray[0]);\n\n      this.setState({\n        courseSearchKey: '',\n        selectedCourseId: '',\n        coursesAddedArray: coursesArray\n      });\n    }\n  }\n\n  removeCourseFromCoursesArray(e, courseId) {\n    let coursesArray = this.state.coursesAddedArray.filter(val => val.id !== courseId);\n    this.setState({\n      coursesAddedArray: coursesArray\n    });\n  }\n\n  handleQuizInsert() {\n    if (this.state.description === '') {\n      alert('Description cannot be empty');\n      return;\n    } else if (this.state.duration_minutes === '') {\n      alert('Duration cannot be empty');\n      return;\n    } else if (isNaN(this.state.duration_minutes)) {\n      alert('Duration has to be a number');\n      return;\n    } else {\n      this.props.showSpinner();\n      var reqBody = \"quizDescription=\" + encodeURIComponent(this.state.description);\n      reqBody += \"&duration_minutes=\" + encodeURIComponent(this.state.duration_minutes);\n      reqBody += \"&coursesArray=\" + encodeURIComponent(JSON.stringify(this.state.coursesAddedArray));\n      reqBody += \"&problemsArray=\" + encodeURIComponent(JSON.stringify(this.state.problemsAddedArray)); //reqBody+=\"&courseId=\"+encodeURIComponent(this.state.courseId);\n\n      reqBody += '&authorName=' + encodeURIComponent(this.props.loggedInUser);\n      fetch(`/api/insertQuizAction`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      }).then(res => res.json()).then(data => {\n        //if(data.updatestatus==\"ok\")\n        let quizesArrayCopy = [...this.props.quizesArray];\n        let obj = {\n          id: data.quizId,\n          description: this.state.description,\n          duration_minutes: this.state.duration_minutes,\n          name: this.state.courseName,\n          author_id: this.props.loggedInUser\n        };\n        quizesArrayCopy.push(obj);\n        this.props.setQuizes(quizesArrayCopy);\n        this.setState(this.baseState);\n        this.props.hideSpinner();\n        alert('Quiz inserted');\n        window.location.assign(\"http://\" + window.location.hostname + ':' + window.location.port + \"/quizesBrowse\");\n      });\n    }\n  }\n\n  durationChange(e) {\n    this.setState({\n      duration_minutes: e.target.value\n    });\n  }\n\n  descriptionChange(e) {\n    //console.log(this.state.courseId+' '+this.state.courseName);\n    const new_description = e.target.value; //console.log(e.target.value);\n\n    this.setState({\n      description: new_description\n    });\n  }\n\n  componentDidMount() {\n    this.props.loadCourses();\n    /*if(this.state.courseId===undefined && this.props.coursesArray.length>0)\n        this.setState({courseId:this.props.coursesArray[0].id, courseName:this.props.coursesArray[0].name});*/\n  }\n  /*selectChange(e){\n    //console.log(e.target.value);\n    var new_courseId=e.target.value;\n    var new_courseName=e.target.options[e.target.selectedIndex].text;\n    this.setState({courseId:new_courseId, courseName:new_courseName});\n  }*/\n\n\n  render() {\n    if (this.props.loggedInUser === '') {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/errorLogin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 14\n        }\n      });\n    }\n\n    let courseObjectsFilteredAugmented = [...this.state.courseObjectsFiltered];\n    courseObjectsFilteredAugmented = courseObjectsFilteredAugmented.concat(this.state.augmentedCourseObjects);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quizInsert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"HomeLink\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"homeIcon\",\n      src: this.state.icons.home,\n      alt: \"back to home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 7\n      }\n    }, \"Insert Quiz\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }\n    }, \"Duration (minutes):\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"durationMinutes\",\n      style: {\n        marginLeft: '23px'\n      },\n      onChange: this.durationChange,\n      value: this.state.duration_minutes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 14\n      }\n    }), \"Quiz Description:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"quizDescription\",\n      name: \"quizDescription\",\n      type: \"text\",\n      rows: \"10\",\n      style: {\n        width: '90%'\n      },\n      onChange: this.descriptionChange,\n      value: this.state.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 16\n      }\n    }), \"Author:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"authorName\",\n      name: \"authorName\",\n      type: \"text\",\n      style: {\n        width: '100px',\n        textAlign: 'center'\n      },\n      required: \"true\",\n      value: this.props.loggedInUser,\n      readonly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }\n    }), \"Courses:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"AddToDialog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"searchBox\",\n      type: \"text\",\n      name: \"searchBox\",\n      value: this.state.courseSearchKey,\n      onChange: this.courseSearchBoxChange,\n      placeholder: \"Type first letters of quiz \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 18\n      }\n    }, courseObjectsFilteredAugmented.map(obj => /*#__PURE__*/React.createElement(\"div\", {\n      onClick: e => this.courseObjectsFilteredClick(obj.name, obj.id, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 63\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 136\n      }\n    }, obj.name.substring(0, this.state.courseSearchKey.length)), obj.name.substring(this.state.courseSearchKey.length), \"(\", obj.id, \")\")))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add Course\",\n      onClick: e => this.AddCourseToCoursesArray(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }\n    }, this.state.coursesAddedArray !== undefined ? this.state.coursesAddedArray.map(objQ => /*#__PURE__*/React.createElement(\"div\", {\n      id: objQ.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 19\n      }\n    }, \"|\", objQ.name, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"closeBtn\",\n      onClick: e => this.removeCourseFromCoursesArray(e, objQ.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 20\n      }\n    }, \"\\xD7\"), \"\\xA0|\")) : null), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 16\n      }\n    }), \"Quiz Problems:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 25\n      }\n    }), this.state.problemsAddedArray !== undefined ? this.state.problemsAddedArray.map(obj => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }\n      }, \"Description\"), \":\", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"button\",\n        id: 'b' + obj.id,\n        value: \"remove from quiz\",\n        onClick: e => this.removeProblemFromProblemsArray(e, obj.id),\n        className: \"EditButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        id: 'P' + obj.id,\n        dangerouslySetInnerHTML: {\n          __html: obj.description\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 18\n        }\n      }, \"Author\"), \": \", obj.author_id);\n    }) : null, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }\n    }, \"Add Problem\"), \":\", /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"problemSearchKey\",\n      style: {\n        width: '50%'\n      },\n      onChange: this.problemSearchKeyChange,\n      placeholder: \"type a word that is likely to be in the problem text\",\n      value: this.state.problemSearchKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 12\n      }\n    }), this.state.problemSearchResults !== undefined && this.state.problemSearchResults.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '1.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 101\n      }\n    }, \"Search Results\") : null, this.state.problemSearchResults.map(obj => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: `par$,${obj.id}`,\n      className: \"probParent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      id: 'a' + obj.id,\n      value: \"add to quiz\",\n      onClick: e => this.addProblemToProblemsArray(e, obj),\n      className: \"EditButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 18\n      }\n    }, \"Problem Description: \"), /*#__PURE__*/React.createElement(\"a\", {\n      href: `./problemShowSelected/${obj.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: `problemDescription$,${obj.id}`,\n      dangerouslySetInnerHTML: {\n        __html: obj.description\n      },\n      className: \"Question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 18\n      }\n    }, \"Author: \"), /*#__PURE__*/React.createElement(\"a\", {\n      href: `http://${window.location.hostname}:${window.location.port}/userShowSelected/${obj.author_id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: `author$,${obj.id}`,\n      style: {\n        marginLeft: '30px'\n      },\n      className: \"Quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 20\n      }\n    }, obj.author_id)), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"hidden\",\n      id: `quizId$,'${obj.id}`,\n      value: obj.quiz_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 18\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 16\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Insert Quiz\",\n      onClick: this.handleQuizInsert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 12\n      }\n    })));\n  }\n\n}\n\nexport default QuizInsert;","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/components/QuizInsert.js"],"names":["React","data","Redirect","QuizInsert","Component","constructor","props","state","spinner","duration_minutes","description","quizType","courseSearchKey","selectedCourseId","courseObjectsFiltered","coursesAddedArray","augmentedCourseObjects","augmentedCourseObjectsPrior","problemSearchKey","problemSearchResults","problemsAddedArray","icons","baseState","descriptionChange","bind","handleQuizInsert","durationChange","quizTypeSelectChange","checkStaticCourse","courseSearchBoxChange","courseObjectsFilteredClick","AddCourseToCoursesArray","problemSearchKeyChange","checkStaticProblem","removeProblemFromProblemsArray","addProblemToProblemsArray","e","problemId","problemsArray","filter","val","id","setState","probObj","length","alert","push","strSearchKey","target","value","timer","setTimeout","currentValue","reqBody","encodeURIComponent","searchResults","fetch","headers","method","body","searchJson","json","str","courseId","coursesArray","name","toUpperCase","startsWith","prefixSearchResults","forEach","ele","len","courseObjectsFilteredAugmented","concat","filteredArray","console","log","JSON","stringify","removeCourseFromCoursesArray","isNaN","showSpinner","loggedInUser","then","res","quizesArrayCopy","quizesArray","obj","quizId","courseName","author_id","setQuizes","hideSpinner","window","location","assign","hostname","port","new_description","componentDidMount","loadCourses","render","home","marginLeft","width","textAlign","map","substring","undefined","objQ","__html","fontSize","quiz_id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport data from './data';\nimport {  Redirect } from 'react-router-dom';\n\nclass QuizInsert extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      spinner:false,\n      duration_minutes:30,\n      description:'',\n      quizType: \"d\",\n      courseSearchKey: '',\n      selectedCourseId:'',\n      courseObjectsFiltered:[],\n      coursesAddedArray:[],\n      augmentedCourseObjects:[],\n      augmentedCourseObjectsPrior:[],\n      problemSearchKey:'',\n      problemSearchResults:[],\n      problemsAddedArray:[],\n      /*courseId:null,\n      courseName:'UnAssigned',*/\n      icons: data.icons\n    }\n    this.baseState={\n      description:''\n    }\n    this.descriptionChange=this.descriptionChange.bind(this);\n    //this.selectChange=this.selectChange.bind(this);\n    this.handleQuizInsert=this.handleQuizInsert.bind(this);\n    this.durationChange=this.durationChange.bind(this);\n    this.quizTypeSelectChange=this.quizTypeSelectChange.bind(this);\n\n    this.checkStaticCourse=this.checkStaticCourse.bind(this);\n    this.courseSearchBoxChange=this.courseSearchBoxChange.bind(this);\n    this.courseObjectsFilteredClick=this.courseObjectsFilteredClick.bind(this);\n    this.AddCourseToCoursesArray=this.AddCourseToCoursesArray.bind(this);\n    this.problemSearchKeyChange=this.problemSearchKeyChange.bind(this);\n    this.checkStaticProblem=this.checkStaticProblem.bind(this);\n    this.removeProblemFromProblemsArray=this.removeProblemFromProblemsArray.bind(this);\n    this.addProblemToProblemsArray=this.addProblemToProblemsArray.bind(this);\n  }\n\n  removeProblemFromProblemsArray(e,problemId){\n    let problemsArray =  this.state.problemsAddedArray.filter(val=>val.id!==problemId)\n    this.setState({problemsAddedArray:problemsArray});\n    //console.log(quizesArray);\n  }\n\n  addProblemToProblemsArray(e,probObj){\n    let problemsArray =  [...this.state.problemsAddedArray];\n    if(problemsArray.filter(val=>val.id===probObj.id).length>0){\n      alert('Problem redundant')\n    }\n    else {\n       problemsArray.push(probObj);\n       this.setState({problemsAddedArray:problemsArray});\n    }\n  }\n\n  problemSearchKeyChange(e){\n    const strSearchKey=e.target.value;\n    var timer = setTimeout(() => {this.checkStaticProblem(strSearchKey);}, 1000);\n    this.setState({problemSearchKey: strSearchKey});\n  }\n\n  async checkStaticProblem(currentValue){\n    if(currentValue===this.state.problemSearchKey&&currentValue!==''){\n      //console.log('static value'+currentValue);\n      var reqBody=\"searchKey=\"+encodeURIComponent(this.state.problemSearchKey);\n      let searchResults=await fetch(`/api/searchProblems`, {\n              headers:{\n                'Accept':'application/json',\n                'Content-type': 'application/x-www-form-urlencoded'\n              },\n              method: 'POST',\n              body: reqBody\n            });\n      let searchJson=await searchResults.json();\n      //console.log(searchJson);\n      this.setState({problemSearchResults:searchJson});\n    }\n    else if(currentValue===this.state.problemSearchKey && currentValue===''){\n      this.setState({problemSearchResults:[]})\n    }\n  }\n\n  courseObjectsFilteredClick(str, courseId, e){\n    this.setState({courseSearchKey: str, selectedCourseId: courseId, courseObjectsFiltered: [],\n        augmentedCourseObjectsPrior: this.state.augmentedCourseObjects, augmentedCourseObjects:[]});\n  }\n\n  courseSearchBoxChange(e){\n    let strSearchKey=e.target.value;\n    var timer = setTimeout(() => {this.checkStaticCourse(strSearchKey);}, 1000);\n    const courseObjectsFiltered=e.target.value!==''?this.props.coursesArray.filter((val)=>val.name.toUpperCase().startsWith(strSearchKey.toUpperCase())):[];\n    //const courseObjectsFiltered=this.props.coursesArray.filter((val)=>val.description.toUpperCase().startsWith(e.target.value.toUpperCase()));\n    this.setState({courseSearchKey: e.target.value, courseObjectsFiltered: courseObjectsFiltered});\n  }\n\n  async checkStaticCourse(currentValue){\n    if(currentValue===this.state.courseSearchKey && currentValue!==''){\n      //console.log('static value'+currentValue);\n      var reqBody=\"searchKey=\"+encodeURIComponent(this.state.courseSearchKey);\n      let searchResults=await fetch(`/api/searchCoursesForPrefix`, {\n              headers:{\n                'Accept':'application/json',\n                'Content-type': 'application/x-www-form-urlencoded'\n              },\n              method: 'POST',\n              body: reqBody\n            });\n      let prefixSearchResults=await searchResults.json();\n\n      let augmentedCourseObjects=[];\n      prefixSearchResults.forEach(ele=>{\n        let len=this.state.courseObjectsFiltered.filter(val=>val.id===ele.id).length;\n        if(len<=0)\n          augmentedCourseObjects.push(ele);\n      })\n      //console.log(augmentedCourseObjects);\n      this.setState({augmentedCourseObjects:augmentedCourseObjects});\n    }\n    else if(currentValue===this.state.courseSearchKey && currentValue===''){\n            this.setState({augmentedCourseObjects:[]})\n    }\n  }\n\n  AddCourseToCoursesArray(e){\n        let courseObjectsFilteredAugmented=[...this.props.coursesArray];\n        courseObjectsFilteredAugmented=courseObjectsFilteredAugmented.concat(this.state.augmentedCourseObjectsPrior);\n\n        const filteredArray=courseObjectsFilteredAugmented.filter((val)=>val.name.toUpperCase()===this.state.courseSearchKey.toUpperCase()&&val.id===this.state.selectedCourseId);\n        if(filteredArray.length<1){\n          alert('Search key does not match any available  \\n\\t quiz description');\n        }\n        else if(filteredArray.length>1){\n          alert('Search key matches multiple quizes\\' description!\\n\\t please choose another one');\n        }\n        else {\n          console.log('filtered course object\\n'+JSON.stringify(filteredArray[0]));\n          let coursesArray=[...this.state.coursesAddedArray];\n          coursesArray.push(filteredArray[0]);\n          //this.props.addCourseToCoursesArraySubmit(filteredArray[0]);\n          this.setState({courseSearchKey:'', selectedCourseId:'', coursesAddedArray: coursesArray})\n        }\n  }\n\n  removeCourseFromCoursesArray(e, courseId){\n    let coursesArray=this.state.coursesAddedArray.filter(val=>val.id!==courseId);\n    this.setState({coursesAddedArray:coursesArray});\n  }\n\n  handleQuizInsert(){\n    if(this.state.description===''){\n      alert('Description cannot be empty');\n      return;\n    }\n    else if(this.state.duration_minutes===''){\n      alert('Duration cannot be empty');\n      return;\n    }\n    else if(isNaN(this.state.duration_minutes)){\n      alert('Duration has to be a number');\n      return;\n    }\n    else{\n      this.props.showSpinner();\n      var reqBody=\"quizDescription=\"+encodeURIComponent(this.state.description);\n          reqBody+=\"&duration_minutes=\"+encodeURIComponent(this.state.duration_minutes);\n          reqBody+=\"&coursesArray=\"+encodeURIComponent(JSON.stringify(this.state.coursesAddedArray));\n          reqBody+=\"&problemsArray=\"+encodeURIComponent(JSON.stringify(this.state.problemsAddedArray));\n          //reqBody+=\"&courseId=\"+encodeURIComponent(this.state.courseId);\n          reqBody+='&authorName='+encodeURIComponent(this.props.loggedInUser);\n\n      fetch(`/api/insertQuizAction`, {\n        headers:{\n          'Accept':'application/json',\n          'Content-type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: reqBody\n      })\n      .then(res=>res.json())\n      .then(data=>{\n          //if(data.updatestatus==\"ok\")\n              let quizesArrayCopy=[...this.props.quizesArray];\n              let obj={\n                id: data.quizId,\n                description: this.state.description,\n                duration_minutes: this.state.duration_minutes,\n                name:this.state.courseName,\n                author_id:this.props.loggedInUser\n              };\n              quizesArrayCopy.push(obj);\n              this.props.setQuizes(quizesArrayCopy);\n              this.setState(this.baseState);\n              this.props.hideSpinner();\n              alert('Quiz inserted');\n              window.location.assign(\"http://\"+window.location.hostname+':'+window.location.port+\"/quizesBrowse\");\n      })\n\n    }\n\n  }\n\n  durationChange(e){\n    this.setState({duration_minutes:e.target.value})\n  }\n\n  descriptionChange(e){\n    //console.log(this.state.courseId+' '+this.state.courseName);\n    const new_description=e.target.value;\n    //console.log(e.target.value);\n    this.setState({description:new_description});\n  }\n\n  componentDidMount(){\n    this.props.loadCourses();\n    /*if(this.state.courseId===undefined && this.props.coursesArray.length>0)\n        this.setState({courseId:this.props.coursesArray[0].id, courseName:this.props.coursesArray[0].name});*/\n  }\n\n  /*selectChange(e){\n    //console.log(e.target.value);\n    var new_courseId=e.target.value;\n    var new_courseName=e.target.options[e.target.selectedIndex].text;\n    this.setState({courseId:new_courseId, courseName:new_courseName});\n  }*/\n\n  render(){\n    if(this.props.loggedInUser===''){\n      return <Redirect to=\"/errorLogin\"/>\n    }\n\n    let courseObjectsFilteredAugmented=[...this.state.courseObjectsFiltered];\n    courseObjectsFilteredAugmented=courseObjectsFilteredAugmented.concat(this.state.augmentedCourseObjects);\n\n    return (\n      <div className=\"quizInsert\">\n      <a class=\"HomeLink\" href=\"/\">\n          <img class=\"homeIcon\" src={this.state.icons.home} alt=\"back to home\"/>\n      {/*back to home*/}\n      </a>\n      <div class=\"h1\">\n        Insert Quiz\n      </div>\n        <fieldset>\n        Duration (minutes):<br/>\n        <input type=\"text\" id=\"durationMinutes\" style={{marginLeft:'23px'}}\n        onChange={this.durationChange}\n        value={this.state.duration_minutes}></input>\n        <br/><br/>\n          Quiz Description:<br/>\n          <textarea id=\"quizDescription\" name=\"quizDescription\" type=\"text\" rows=\"10\"\n          style={{width:'90%'}}\n          onChange={this.descriptionChange}\n          value={this.state.description}\n           >\n          </textarea>\n          <br/><br/>\n          Author:<br/>\n          <input id=\"authorName\" name=\"authorName\" type=\"text\" style={{width:'100px', textAlign: 'center'}}\n          required=\"true\" value={this.props.loggedInUser} readonly>\n          </input>\n          <br/>\n          <br/>\n          Courses:<br/>\n          {/*<select id=\"courseId\" onChange={this.selectChange}  name=\"courseId\" required=\"true\">\n              <option value=\"null\">UnAssigned</option>\n          {\n              this.props.coursesArray.map(obj=>(\n                <option value={obj.id}>{obj.name}</option>\n                )\n              )\n          }\n          </select>*/}\n          <div id=\"AddToDialog\">\n              <div className=\"autocomplete\">\n                 <input id=\"searchBox\" type=\"text\" name=\"searchBox\"\n                   value={this.state.courseSearchKey}\n                   onChange={this.courseSearchBoxChange}\n                  placeholder=\"Type first letters of quiz \"/>\n                 <div className=\"autocomplete-items\">\n                   {\n                     courseObjectsFilteredAugmented.map(obj=>(<div onClick={(e)=>this.courseObjectsFilteredClick(obj.name, obj.id, e)}><strong>{obj.name.substring(0,this.state.courseSearchKey.length)}</strong>{obj.name.substring(this.state.courseSearchKey.length)}({obj.id})</div>))\n                   }\n                 </div>\n              </div>\n              <input type=\"submit\" value=\"Add Course\" onClick={(e)=>this.AddCourseToCoursesArray(e)}/>\n          </div>\n          <br/>\n          <div>\n          {\n              this.state.coursesAddedArray!==undefined?\n              ( this.state.coursesAddedArray.map(objQ=>(\n                  <div   id={objQ.id} >|{objQ.name}\n                   <span className=\"closeBtn\"\n                     onClick={(e)=>this.removeCourseFromCoursesArray(e, objQ.id)}>&times;</span>&nbsp;|\n                  </div>\n                  )\n                )\n              ):null\n          }\n          </div>\n          <br/><br/>\n          Quiz Problems:<br/>\n          {\n            this.state.problemsAddedArray!==undefined?\n            ( this.state.problemsAddedArray.map(obj=>{\n              return (\n                <>\n                <hr/>\n                <b>Description</b>:\n                 <input type=\"button\" id={'b'+obj.id} value=\"remove from quiz\" onClick={(e)=>this.removeProblemFromProblemsArray(e,obj.id)} className=\"EditButton\"/>\n                <span id={'P'+obj.id}\n                 dangerouslySetInnerHTML={{\n                   __html: obj.description\n                 }}/>\n                 <b>Author</b>: {obj.author_id}\n                </>)\n            })\n            ):null\n          }\n          <hr/>\n          <br/>\n          <b>Add Problem</b>:\n           <div style={{textAlign: 'center'}}>\n                <input type=\"text\" id=\"problemSearchKey\" style={{width:'50%'}}\n                onChange={this.problemSearchKeyChange}\n                placeholder=\"type a word that is likely to be in the problem text\"\n                value={this.state.problemSearchKey}></input>\n           </div>\n           <br/>\n           {\n             this.state.problemSearchResults!==undefined&&this.state.problemSearchResults.length>0?(<div style={{textAlign: 'center', fontSize: '1.5em'}}>Search Results</div>):null\n           }\n           {\n            this.state.problemSearchResults.map(obj=>(\n             <>\n             <br/>\n             <div id={`par$,${obj.id}`} className=\"probParent\">\n               <input type=\"button\" id={'a'+obj.id} value=\"add to quiz\" onClick={(e)=>this.addProblemToProblemsArray(e,obj)} className=\"EditButton\"/>\n                 <b>Problem Description: </b>\n                 <a href={`./problemShowSelected/${obj.id}`}>\n                     <div id={`problemDescription$,${obj.id}`}\n                     dangerouslySetInnerHTML={{__html: obj.description}}\n                     className=\"Question\"></div>\n                 </a>\n                 <br/>\n                 <b>Author: </b>\n                 <a href={`http://${window.location.hostname}:${window.location.port}/userShowSelected/${obj.author_id}`}>\n                   <div id={`author$,${obj.id}`} style={{marginLeft:'30px'}} className=\"Quiz\">\n                   {obj.author_id}\n                   </div>\n                 </a>\n                 <input type=\"hidden\" id={`quizId$,'${obj.id}`} value={obj.quiz_id}/>\n                 <br/>\n               </div>\n               <hr />\n               </>\n               )\n             )\n           }\n          <br/><br/>\n          <br/>\n           <input type=\"button\" value=\"Insert Quiz\" onClick={this.handleQuizInsert}/>\n        </fieldset>\n      </div>\n    )\n  }\n\n}\n\nexport default QuizInsert;\n"]},"metadata":{},"sourceType":"module"}