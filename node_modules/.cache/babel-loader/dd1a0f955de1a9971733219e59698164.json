{"ast":null,"code":"import { getPageArray } from '../utils/utils';\nimport { SHOW_OPEN_SPINNER, LOAD_PROBLEMS, LOAD_QUIZES, NEXT_PROBLEMS_PAGE, PREVIOUS_PROBLEMS_PAGE, SET_PROBLEMS_PAGE } from './appStoreConstants';\nexport const loadProblems = dispatch => {\n  dispatch({\n    type: SHOW_OPEN_SPINNER\n  });\n  dispatch({\n    type: LOAD_PROBLEMS\n  });\n};\nexport const setProblemsPage = (page, dispatch) => {\n  dispatch({\n    type: SET_PROBLEMS_PAGE,\n    payload: page\n  });\n  loadProblems(dispatch);\n};\nexport const prevProblemsPageClick = (e, state, dispatch) => {\n  let pageArray = getPageArray(state.currentProblemsPage, state.problemsArray === undefined || state.problemsArray.length < state.pageSize);\n\n  if (pageArray.includes(state.currentProblemsPage - 1)) {\n    dispatch({\n      type: PREVIOUS_PROBLEMS_PAGE\n    });\n    loadProblems(dispatch);\n  }\n};\nexport const nextProblemsPageClick = (e, state, dispatch) => {\n  let pageArray = getPageArray(state.currentProblemsPage, state.problemsArray === undefined || state.problemsArray.length < state.pageSize);\n\n  if (pageArray.includes(state.currentProblemsPage + 1)) {\n    dispatch({\n      type: NEXT_PROBLEMS_PAGE\n    });\n    loadProblems(dispatch);\n  }\n};\nexport const loadQuizes = dispatch => {\n  dispatch({\n    type: SHOW_OPEN_SPINNER\n  });\n  dispatch({\n    type: LOAD_QUIZES\n  });\n};\nexport const setQuizesPage = (page, dispatch) => {\n  dispatch({\n    type: SET_QUIZES_PAGE,\n    payload: page\n  });\n  loadQuizes(dispatch);\n}; //nextQuizesPageClick, prevQuizesPageClick,","map":{"version":3,"sources":["/home/mathew/javascript/ischools-react/client/src/stores/appStoreActions.js"],"names":["getPageArray","SHOW_OPEN_SPINNER","LOAD_PROBLEMS","LOAD_QUIZES","NEXT_PROBLEMS_PAGE","PREVIOUS_PROBLEMS_PAGE","SET_PROBLEMS_PAGE","loadProblems","dispatch","type","setProblemsPage","page","payload","prevProblemsPageClick","e","state","pageArray","currentProblemsPage","problemsArray","undefined","length","pageSize","includes","nextProblemsPageClick","loadQuizes","setQuizesPage","SET_QUIZES_PAGE"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,gBAA3B;AACA,SAAQC,iBAAR,EAA2BC,aAA3B,EAA0CC,WAA1C,EACQC,kBADR,EAC4BC,sBAD5B,EAEQC,iBAFR,QAGa,qBAHb;AAKA,OAAO,MAAMC,YAAY,GAAEC,QAAD,IAAY;AAClCA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACR;AAAN,GAAD,CAAR;AACAO,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEP;AAAP,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAOQ,eAAe,GAAC,CAACC,IAAD,EAAOH,QAAP,KAAkB;AAC5CA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEH,iBAAP;AAA0BM,IAAAA,OAAO,EAACD;AAAlC,GAAD,CAAR;AACAJ,EAAAA,YAAY,CAACC,QAAD,CAAZ;AACH,CAHM;AAKP,OAAO,MAAMK,qBAAqB,GAAC,CAACC,CAAD,EAAIC,KAAJ,EAAWP,QAAX,KAAsB;AACvD,MAAIQ,SAAS,GAAChB,YAAY,CAACe,KAAK,CAACE,mBAAP,EAA4BF,KAAK,CAACG,aAAN,KAAsBC,SAAtB,IAAiCJ,KAAK,CAACG,aAAN,CAAoBE,MAApB,GAA2BL,KAAK,CAACM,QAA9F,CAA1B;;AACA,MAAGL,SAAS,CAACM,QAAV,CAAmBP,KAAK,CAACE,mBAAN,GAA0B,CAA7C,CAAH,EAAmD;AACjDT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACJ;AAAN,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,QAAD,CAAZ;AACD;AACF,CANM;AAQP,OAAO,MAAMe,qBAAqB,GAAC,CAACT,CAAD,EAAIC,KAAJ,EAAWP,QAAX,KAAsB;AACvD,MAAIQ,SAAS,GAAChB,YAAY,CAACe,KAAK,CAACE,mBAAP,EAA4BF,KAAK,CAACG,aAAN,KAAsBC,SAAtB,IAAiCJ,KAAK,CAACG,aAAN,CAAoBE,MAApB,GAA2BL,KAAK,CAACM,QAA9F,CAA1B;;AACA,MAAGL,SAAS,CAACM,QAAV,CAAmBP,KAAK,CAACE,mBAAN,GAA0B,CAA7C,CAAH,EAAmD;AAC9CT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACL;AAAN,KAAD,CAAR;AACAG,IAAAA,YAAY,CAACC,QAAD,CAAZ;AACJ;AACF,CANM;AAQP,OAAO,MAAMgB,UAAU,GAAEhB,QAAD,IAAY;AAClCA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACR;AAAN,GAAD,CAAR;AACAO,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEN;AAAP,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMsB,aAAa,GAAC,CAACd,IAAD,EAAOH,QAAP,KAAkB;AACzCA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEiB,eAAP;AAAwBd,IAAAA,OAAO,EAACD;AAAhC,GAAD,CAAR;AACAa,EAAAA,UAAU,CAAChB,QAAD,CAAV;AACH,CAHM,C,CAKP","sourcesContent":["import {getPageArray} from '../utils/utils';\nimport {SHOW_OPEN_SPINNER, LOAD_PROBLEMS, LOAD_QUIZES,\n        NEXT_PROBLEMS_PAGE, PREVIOUS_PROBLEMS_PAGE,\n        SET_PROBLEMS_PAGE}\n        from './appStoreConstants';\n\nexport const loadProblems=(dispatch)=>{\n    dispatch({type:SHOW_OPEN_SPINNER});\n    dispatch({type: LOAD_PROBLEMS});\n};\n\nexport const  setProblemsPage=(page, dispatch)=>{\n    dispatch({type: SET_PROBLEMS_PAGE, payload:page});\n    loadProblems(dispatch);\n}\n\nexport const prevProblemsPageClick=(e, state, dispatch)=>{\n  let pageArray=getPageArray(state.currentProblemsPage, state.problemsArray===undefined||state.problemsArray.length<state.pageSize);\n  if(pageArray.includes(state.currentProblemsPage-1)){\n    dispatch({type:PREVIOUS_PROBLEMS_PAGE});\n    loadProblems(dispatch);\n  }\n};\n\nexport const nextProblemsPageClick=(e, state, dispatch)=>{\n  let pageArray=getPageArray(state.currentProblemsPage, state.problemsArray===undefined||state.problemsArray.length<state.pageSize);\n  if(pageArray.includes(state.currentProblemsPage+1)){\n       dispatch({type:NEXT_PROBLEMS_PAGE});\n       loadProblems(dispatch);\n  }\n}\n\nexport const loadQuizes=(dispatch)=>{\n  dispatch({type:SHOW_OPEN_SPINNER});\n  dispatch({type: LOAD_QUIZES});\n};\n\nexport const setQuizesPage=(page, dispatch)=>{\n    dispatch({type: SET_QUIZES_PAGE, payload:page});\n    loadQuizes(dispatch);\n}\n\n//nextQuizesPageClick, prevQuizesPageClick, \n"]},"metadata":{},"sourceType":"module"}